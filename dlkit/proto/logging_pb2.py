# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dlkit/proto/logging.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dlkit.primordium.id import primitives_pb2 as dlkit_dot_primordium_dot_id_dot_primitives__pb2
from dlkit.primordium.locale import primitives_pb2 as dlkit_dot_primordium_dot_locale_dot_primitives__pb2
from dlkit.primordium.type import primitives_pb2 as dlkit_dot_primordium_dot_type_dot_primitives__pb2
from dlkit.proto import hierarchy_pb2 as dlkit_dot_proto_dot_hierarchy__pb2
from dlkit.proto import osid_pb2 as dlkit_dot_proto_dot_osid__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dlkit/proto/logging.proto',
  package='dlkit.proto.logging',
  syntax='proto3',
  serialized_pb=_b('\n\x19\x64lkit/proto/logging.proto\x12\x13\x64lkit.proto.logging\x1a$dlkit/primordium/id/primitives.proto\x1a(dlkit/primordium/locale/primitives.proto\x1a&dlkit/primordium/type/primitives.proto\x1a\x1b\x64lkit/proto/hierarchy.proto\x1a\x16\x64lkit/proto/osid.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8a\x04\n\x08LogEntry\x12\x31\n\x05\x61gent\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x44\n\x0b\x64\x65scription\x18\x02 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x44\n\x0b\x64isplayName\x18\x03 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12;\n\x0bgenusTypeId\x18\x04 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12.\n\x02id\x18\x05 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12*\n\x03log\x18\x06 \x01(\x0b\x32\x1d.dlkit.proto.osid.OsidCatalog\x12\x38\n\x08priority\x18\x07 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12=\n\rrecordTypeIds\x18\x08 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12-\n\ttimestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\x0f\n\rLogEntryQuery\"\x18\n\x16LogEntryQueryInspector\"\x0e\n\x0cLogEntryForm\"\x15\n\x13LogEntrySearchOrder\"\x10\n\x0eLogEntrySearch\"\x17\n\x15LogEntrySearchResults\"B\n\x0cLogEntryList\x12\x32\n\x0blog_entries\x18\x01 \x03(\x0b\x32\x1d.dlkit.proto.logging.LogEntry\"\xbd\x02\n\x03Log\x12\x44\n\x0b\x64\x65scription\x18\x01 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x44\n\x0b\x64isplayName\x18\x02 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12;\n\x0bgenusTypeId\x18\x03 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12.\n\x02id\x18\x04 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12=\n\rrecordTypeIds\x18\x05 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"\n\n\x08LogQuery\"\x13\n\x11LogQueryInspector\"\t\n\x07LogForm\"\x10\n\x0eLogSearchOrder\"\x0b\n\tLogSearch\"\x12\n\x10LogSearchResults\"1\n\x07LogList\x12&\n\x04logs\x18\x01 \x03(\x0b\x32\x18.dlkit.proto.logging.Log\"\t\n\x07LogNode\">\n\x0bLogNodeList\x12/\n\tlog_nodes\x18\x01 \x03(\x0b\x32\x1c.dlkit.proto.logging.LogNode\"?\n\rGetLogIdReply\x12.\n\x02id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x11\n\x0fGetLogIdRequest\"4\n\x0bGetLogReply\x12%\n\x03log\x18\x01 \x01(\x0b\x32\x18.dlkit.proto.logging.Log\"\x0f\n\rGetLogRequest\"\x1e\n\x0b\x43\x61nLogReply\x12\x0f\n\x07\x63\x61n_log\x18\x01 \x01(\x08\"\x0f\n\rCanLogRequest\"\n\n\x08LogReply\"[\n\nLogRequest\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12<\n\x0c\x63ontent_type\x18\x02 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"\x14\n\x12LogAtPriorityReply\"\xa4\x01\n\x14LogAtPriorityRequest\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12<\n\x0c\x63ontent_type\x18\x02 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12=\n\rpriority_type\x18\x03 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"Q\n\x14GetLogEntryFormReply\x12\x39\n\x0elog_entry_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.logging.LogEntryForm\"\x18\n\x16GetLogEntryFormRequest\"\x15\n\x13\x43reateLogEntryReply\"R\n\x15\x43reateLogEntryRequest\x12\x39\n\x0elog_entry_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.logging.LogEntryForm\"\'\n\x0f\x43\x61nReadLogReply\x12\x14\n\x0c\x63\x61n_read_log\x18\x01 \x01(\x08\"\x13\n\x11\x43\x61nReadLogRequest\"!\n\x1fUseComparativeLogEntryViewReply\"#\n!UseComparativeLogEntryViewRequest\"\x1d\n\x1bUsePlenaryLogEntryViewReply\"\x1f\n\x1dUsePlenaryLogEntryViewRequest\"\x1a\n\x18UseFederatedLogViewReply\"\x1c\n\x1aUseFederatedLogViewRequest\"\x19\n\x17UseIsolatedLogViewReply\"\x1b\n\x19UseIsolatedLogViewRequest\"D\n\x10GetLogEntryReply\x12\x30\n\tlog_entry\x18\x01 \x01(\x0b\x32\x1d.dlkit.proto.logging.LogEntry\"N\n\x12GetLogEntryRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"V\n\x19GetLogEntriesByIdsRequest\x12\x39\n\rlog_entry_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"g\n\x1fGetLogEntriesByGenusTypeRequest\x12\x44\n\x14log_entry_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"m\n%GetLogEntriesByParentGenusTypeRequest\x12\x44\n\x14log_entry_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"h\n GetLogEntriesByRecordTypeRequest\x12\x44\n\x14log_entry_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"c\n\"GetLogEntriesByPriorityTypeRequest\x12=\n\rpriority_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"p\n\x1aGetLogEntriesByDateRequest\x12\'\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12)\n\x05start\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xbe\x01\n)GetLogEntriesByPriorityTypeAndDateRequest\x12\'\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12=\n\rpriority_type\x18\x02 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12)\n\x05start\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"Z\n\x1fGetLogEntriesForResourceRequest\x12\x37\n\x0bresource_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\xb4\x01\n%GetLogEntriesByDateForResourceRequest\x12\'\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x37\n\x0bresource_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12)\n\x05start\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\x82\x02\n4GetLogEntriesByPriorityTypeAndDateForResourceRequest\x12\'\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12=\n\rpriority_type\x18\x02 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12\x37\n\x0bresource_id\x18\x03 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12)\n\x05start\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\x16\n\x14GetLogEntriesRequest\":\n\x18\x43\x61nSearchLogEntriesReply\x12\x1e\n\x16\x63\x61n_search_log_entries\x18\x01 \x01(\x08\"\x1c\n\x1a\x43\x61nSearchLogEntriesRequest\"T\n\x15GetLogEntryQueryReply\x12;\n\x0flog_entry_query\x18\x01 \x01(\x0b\x32\".dlkit.proto.logging.LogEntryQuery\"\x19\n\x17GetLogEntryQueryRequest\"Z\n\x1bGetLogEntriesByQueryRequest\x12;\n\x0flog_entry_query\x18\x01 \x01(\x0b\x32\".dlkit.proto.logging.LogEntryQuery\":\n\x18\x43\x61nCreateLogEntriesReply\x12\x1e\n\x16\x63\x61n_create_log_entries\x18\x01 \x01(\x08\"\x1c\n\x1a\x43\x61nCreateLogEntriesRequest\"W\n%CanCreateLogEntryWithRecordTypesReply\x12.\n&can_create_log_entry_with_record_types\x18\x01 \x01(\x08\"q\n\'CanCreateLogEntryWithRecordTypesRequest\x12\x46\n\x16log_entry_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"Z\n\x1dGetLogEntryFormForCreateReply\x12\x39\n\x0elog_entry_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.logging.LogEntryForm\"i\n\x1fGetLogEntryFormForCreateRequest\x12\x46\n\x16log_entry_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\":\n\x18\x43\x61nUpdateLogEntriesReply\x12\x1e\n\x16\x63\x61n_update_log_entries\x18\x01 \x01(\x08\"\x1c\n\x1a\x43\x61nUpdateLogEntriesRequest\"Z\n\x1dGetLogEntryFormForUpdateReply\x12\x39\n\x0elog_entry_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.logging.LogEntryForm\"[\n\x1fGetLogEntryFormForUpdateRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x15\n\x13UpdateLogEntryReply\"R\n\x15UpdateLogEntryRequest\x12\x39\n\x0elog_entry_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.logging.LogEntryForm\":\n\x18\x43\x61nDeleteLogEntriesReply\x12\x1e\n\x16\x63\x61n_delete_log_entries\x18\x01 \x01(\x08\"\x1c\n\x1a\x43\x61nDeleteLogEntriesRequest\"\x15\n\x13\x44\x65leteLogEntryReply\"Q\n\x15\x44\x65leteLogEntryRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"E\n\x1d\x43\x61nManageLogEntryAliasesReply\x12$\n\x1c\x63\x61n_manage_log_entry_aliases\x18\x01 \x01(\x08\"!\n\x1f\x43\x61nManageLogEntryAliasesRequest\"\x14\n\x12\x41liasLogEntryReply\"\x86\x01\n\x14\x41liasLogEntryRequest\x12\x34\n\x08\x61lias_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x38\n\x0clog_entry_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1c\n\x1aUseComparativeLogViewReply\"\x1e\n\x1cUseComparativeLogViewRequest\"\x18\n\x16UsePlenaryLogViewReply\"\x1a\n\x18UsePlenaryLogViewRequest\"N\n!CanLookupLogEntryLogMappingsReply\x12)\n!can_lookup_log_entry_log_mappings\x18\x01 \x01(\x08\"%\n#CanLookupLogEntryLogMappingsRequest\"P\n\x1aGetLogEntryIdsByLogRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"O\n\x19GetLogEntriesByLogRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"O\n\x18GetLogEntrieByLogRequest\x12\x33\n\x07log_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"V\n\x1aGetLogIdsByLogEntryRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"S\n\x17GetLogByLogEntryRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\":\n\x18\x43\x61nAssignLogEntriesReply\x12\x1e\n\x16\x63\x61n_assign_log_entries\x18\x01 \x01(\x08\"\x1c\n\x1a\x43\x61nAssignLogEntriesRequest\"F\n\x1d\x43\x61nAssignLogEntriesToLogReply\x12%\n\x1d\x63\x61n_assign_log_entries_to_log\x18\x01 \x01(\x08\"U\n\x1f\x43\x61nAssignLogEntriesToLogRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"P\n\x1aGetAssignableLogIdsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x95\x01\n%GetAssignableLogIdsForLogEntryRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1a\n\x18\x41ssignLogEntryToLogReply\"\x8a\x01\n\x1a\x41ssignLogEntryToLogRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1e\n\x1cUnassignLogEntryFromLogReply\"\x8e\x01\n\x1eUnassignLogEntryFromLogRequest\x12\x38\n\x0clog_entry_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1c\n\x1aReassignLogEntryToLogReply\"\xc8\x01\n\x1cReassignLogEntryToLogRequest\x12\x37\n\x0b\x66rom_log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x38\n\x0clog_entry_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x35\n\tto_log_id\x18\x03 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"-\n\x12\x43\x61nLookupLogsReply\x12\x17\n\x0f\x63\x61n_lookup_logs\x18\x01 \x01(\x08\"\x16\n\x14\x43\x61nLookupLogsRequest\"J\n\x13GetLogsByIdsRequest\x12\x33\n\x07log_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"[\n\x19GetLogsByGenusTypeRequest\x12>\n\x0elog_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"a\n\x1fGetLogsByParentGenusTypeRequest\x12>\n\x0elog_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"]\n\x1aGetLogsByRecordTypeRequest\x12?\n\x0flog_record_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"S\n\x18GetLogsByProviderRequest\x12\x37\n\x0bresource_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x10\n\x0eGetLogsRequest\"-\n\x12\x43\x61nCreateLogsReply\x12\x17\n\x0f\x63\x61n_create_logs\x18\x01 \x01(\x08\"\x16\n\x14\x43\x61nCreateLogsRequest\"L\n CanCreateLogWithRecordTypesReply\x12(\n can_create_log_with_record_types\x18\x01 \x01(\x08\"f\n\"CanCreateLogWithRecordTypesRequest\x12@\n\x10log_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"J\n\x18GetLogFormForCreateReply\x12.\n\x08log_form\x18\x01 \x01(\x0b\x32\x1c.dlkit.proto.logging.LogForm\"^\n\x1aGetLogFormForCreateRequest\x12@\n\x10log_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"7\n\x0e\x43reateLogReply\x12%\n\x03log\x18\x01 \x01(\x0b\x32\x18.dlkit.proto.logging.Log\"B\n\x10\x43reateLogRequest\x12.\n\x08log_form\x18\x01 \x01(\x0b\x32\x1c.dlkit.proto.logging.LogForm\"-\n\x12\x43\x61nUpdateLogsReply\x12\x17\n\x0f\x63\x61n_update_logs\x18\x01 \x01(\x08\"\x16\n\x14\x43\x61nUpdateLogsRequest\"J\n\x18GetLogFormForUpdateReply\x12.\n\x08log_form\x18\x01 \x01(\x0b\x32\x1c.dlkit.proto.logging.LogForm\"P\n\x1aGetLogFormForUpdateRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x10\n\x0eUpdateLogReply\"B\n\x10UpdateLogRequest\x12.\n\x08log_form\x18\x01 \x01(\x0b\x32\x1c.dlkit.proto.logging.LogForm\"-\n\x12\x43\x61nDeleteLogsReply\x12\x17\n\x0f\x63\x61n_delete_logs\x18\x01 \x01(\x08\"\x16\n\x14\x43\x61nDeleteLogsRequest\"\x10\n\x0e\x44\x65leteLogReply\"F\n\x10\x44\x65leteLogRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\":\n\x18\x43\x61nManageLogAliasesReply\x12\x1e\n\x16\x63\x61n_manage_log_aliases\x18\x01 \x01(\x08\"\x1c\n\x1a\x43\x61nManageLogAliasesRequest\"\x0f\n\rAliasLogReply\"{\n\x0f\x41liasLogRequest\x12\x34\n\x08\x61lias_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"H\n\x16GetLogHierarchyIdReply\x12.\n\x02id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1a\n\x18GetLogHierarchyIdRequest\"K\n\x14GetLogHierarchyReply\x12\x33\n\thierarchy\x18\x01 \x01(\x0b\x32 .dlkit.proto.hierarchy.Hierarchy\"\x18\n\x16GetLogHierarchyRequest\">\n\x1a\x43\x61nAccessLogHierarchyReply\x12 \n\x18\x63\x61n_access_log_hierarchy\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nAccessLogHierarchyRequest\"\x16\n\x14GetRootLogIdsRequest\"\x14\n\x12GetRootLogsRequest\"-\n\x12HasParentLogsReply\x12\x17\n\x0fhas_parent_logs\x18\x01 \x01(\x08\"J\n\x14HasParentLogsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\".\n\x12IsParentOfLogReply\x12\x18\n\x10is_parent_of_log\x18\x01 \x01(\x08\"{\n\x14IsParentOfLogRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"L\n\x16GetParentLogIdsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"J\n\x14GetParentLogsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"2\n\x14IsAncestorOfLogReply\x12\x1a\n\x12is_ancestor_of_log\x18\x01 \x01(\x08\"}\n\x16IsAncestorOfLogRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"+\n\x11HasChildLogsReply\x12\x16\n\x0ehas_child_logs\x18\x01 \x01(\x08\"I\n\x13HasChildLogsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\",\n\x11IsChildOfLogReply\x12\x17\n\x0fis_child_of_log\x18\x01 \x01(\x08\"z\n\x13IsChildOfLogRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"K\n\x15GetChildLogIdsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"I\n\x13GetChildLogsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"6\n\x16IsDescendantOfLogReply\x12\x1c\n\x14is_descendant_of_log\x18\x01 \x01(\x08\"\x7f\n\x18IsDescendantOfLogRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"?\n\x12GetLogNodeIdsReply\x12)\n\x04node\x18\x01 \x01(\x0b\x32\x1b.dlkit.proto.hierarchy.Node\"\x98\x01\n\x14GetLogNodeIdsRequest\x12\x17\n\x0f\x61ncestor_levels\x18\x01 \x01(\x11\x12\x19\n\x11\x64\x65scendant_levels\x18\x02 \x01(\x11\x12\x18\n\x10include_siblings\x18\x03 \x01(\x08\x12\x32\n\x06log_id\x18\x04 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"B\n\x10GetLogNodesReply\x12.\n\x08log_node\x18\x01 \x01(\x0b\x32\x1c.dlkit.proto.logging.LogNode\"\x96\x01\n\x12GetLogNodesRequest\x12\x17\n\x0f\x61ncestor_levels\x18\x01 \x01(\x11\x12\x19\n\x11\x64\x65scendant_levels\x18\x02 \x01(\x11\x12\x18\n\x10include_siblings\x18\x03 \x01(\x08\x12\x32\n\x06log_id\x18\x04 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\">\n\x1a\x43\x61nModifyLogHierarchyReply\x12 \n\x18\x63\x61n_modify_log_hierarchy\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nModifyLogHierarchyRequest\"\x11\n\x0f\x41\x64\x64RootLogReply\"G\n\x11\x41\x64\x64RootLogRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x14\n\x12RemoveRootLogReply\"J\n\x14RemoveRootLogRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x12\n\x10\x41\x64\x64\x43hildLogReply\"~\n\x12\x41\x64\x64\x43hildLogRequest\x12\x34\n\x08\x63hild_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x15\n\x13RemoveChildLogReply\"\x81\x01\n\x15RemoveChildLogRequest\x12\x34\n\x08\x63hild_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x32\n\x06log_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x16\n\x14RemoveChildLogsReply\"L\n\x16RemoveChildLogsRequest\x12\x32\n\x06log_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id2\x93\x05\n\x0eLoggingSession\x12V\n\x08GetLogId\x12$.dlkit.proto.logging.GetLogIdRequest\x1a\".dlkit.proto.logging.GetLogIdReply\"\x00\x12P\n\x06GetLog\x12\".dlkit.proto.logging.GetLogRequest\x1a .dlkit.proto.logging.GetLogReply\"\x00\x12P\n\x06\x43\x61nLog\x12\".dlkit.proto.logging.CanLogRequest\x1a .dlkit.proto.logging.CanLogReply\"\x00\x12G\n\x03Log\x12\x1f.dlkit.proto.logging.LogRequest\x1a\x1d.dlkit.proto.logging.LogReply\"\x00\x12\x65\n\rLogAtPriority\x12).dlkit.proto.logging.LogAtPriorityRequest\x1a\'.dlkit.proto.logging.LogAtPriorityReply\"\x00\x12k\n\x0fGetLogEntryForm\x12+.dlkit.proto.logging.GetLogEntryFormRequest\x1a).dlkit.proto.logging.GetLogEntryFormReply\"\x00\x12h\n\x0e\x43reateLogEntry\x12*.dlkit.proto.logging.CreateLogEntryRequest\x1a(.dlkit.proto.logging.CreateLogEntryReply\"\x00\x32\xbc\x11\n\x15LogEntryLookupSession\x12V\n\x08GetLogId\x12$.dlkit.proto.logging.GetLogIdRequest\x1a\".dlkit.proto.logging.GetLogIdReply\"\x00\x12P\n\x06GetLog\x12\".dlkit.proto.logging.GetLogRequest\x1a .dlkit.proto.logging.GetLogReply\"\x00\x12\\\n\nCanReadLog\x12&.dlkit.proto.logging.CanReadLogRequest\x1a$.dlkit.proto.logging.CanReadLogReply\"\x00\x12\x8c\x01\n\x1aUseComparativeLogEntryView\x12\x36.dlkit.proto.logging.UseComparativeLogEntryViewRequest\x1a\x34.dlkit.proto.logging.UseComparativeLogEntryViewReply\"\x00\x12\x80\x01\n\x16UsePlenaryLogEntryView\x12\x32.dlkit.proto.logging.UsePlenaryLogEntryViewRequest\x1a\x30.dlkit.proto.logging.UsePlenaryLogEntryViewReply\"\x00\x12w\n\x13UseFederatedLogView\x12/.dlkit.proto.logging.UseFederatedLogViewRequest\x1a-.dlkit.proto.logging.UseFederatedLogViewReply\"\x00\x12t\n\x12UseIsolatedLogView\x12..dlkit.proto.logging.UseIsolatedLogViewRequest\x1a,.dlkit.proto.logging.UseIsolatedLogViewReply\"\x00\x12_\n\x0bGetLogEntry\x12\'.dlkit.proto.logging.GetLogEntryRequest\x1a%.dlkit.proto.logging.GetLogEntryReply\"\x00\x12g\n\x12GetLogEntriesByIds\x12..dlkit.proto.logging.GetLogEntriesByIdsRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12s\n\x18GetLogEntriesByGenusType\x12\x34.dlkit.proto.logging.GetLogEntriesByGenusTypeRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12\x7f\n\x1eGetLogEntriesByParentGenusType\x12:.dlkit.proto.logging.GetLogEntriesByParentGenusTypeRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12u\n\x19GetLogEntriesByRecordType\x12\x35.dlkit.proto.logging.GetLogEntriesByRecordTypeRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12y\n\x1bGetLogEntriesByPriorityType\x12\x37.dlkit.proto.logging.GetLogEntriesByPriorityTypeRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12i\n\x13GetLogEntriesByDate\x12/.dlkit.proto.logging.GetLogEntriesByDateRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12\x87\x01\n\"GetLogEntriesByPriorityTypeAndDate\x12>.dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12s\n\x18GetLogEntriesForResource\x12\x34.dlkit.proto.logging.GetLogEntriesForResourceRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12\x7f\n\x1eGetLogEntriesByDateForResource\x12:.dlkit.proto.logging.GetLogEntriesByDateForResourceRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12\x9d\x01\n-GetLogEntriesByPriorityTypeAndDateForResource\x12I.dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateForResourceRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12]\n\rGetLogEntries\x12).dlkit.proto.logging.GetLogEntriesRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x32\x85\x06\n\x14LogEntryQuerySession\x12V\n\x08GetLogId\x12$.dlkit.proto.logging.GetLogIdRequest\x1a\".dlkit.proto.logging.GetLogIdReply\"\x00\x12P\n\x06GetLog\x12\".dlkit.proto.logging.GetLogRequest\x1a .dlkit.proto.logging.GetLogReply\"\x00\x12w\n\x13\x43\x61nSearchLogEntries\x12/.dlkit.proto.logging.CanSearchLogEntriesRequest\x1a-.dlkit.proto.logging.CanSearchLogEntriesReply\"\x00\x12w\n\x13UseFederatedLogView\x12/.dlkit.proto.logging.UseFederatedLogViewRequest\x1a-.dlkit.proto.logging.UseFederatedLogViewReply\"\x00\x12t\n\x12UseIsolatedLogView\x12..dlkit.proto.logging.UseIsolatedLogViewRequest\x1a,.dlkit.proto.logging.UseIsolatedLogViewReply\"\x00\x12n\n\x10GetLogEntryQuery\x12,.dlkit.proto.logging.GetLogEntryQueryRequest\x1a*.dlkit.proto.logging.GetLogEntryQueryReply\"\x00\x12k\n\x14GetLogEntriesByQuery\x12\x30.dlkit.proto.logging.GetLogEntriesByQueryRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x32\x8c\x0c\n\x14LogEntryAdminSession\x12V\n\x08GetLogId\x12$.dlkit.proto.logging.GetLogIdRequest\x1a\".dlkit.proto.logging.GetLogIdReply\"\x00\x12P\n\x06GetLog\x12\".dlkit.proto.logging.GetLogRequest\x1a .dlkit.proto.logging.GetLogReply\"\x00\x12w\n\x13\x43\x61nCreateLogEntries\x12/.dlkit.proto.logging.CanCreateLogEntriesRequest\x1a-.dlkit.proto.logging.CanCreateLogEntriesReply\"\x00\x12\x9e\x01\n CanCreateLogEntryWithRecordTypes\x12<.dlkit.proto.logging.CanCreateLogEntryWithRecordTypesRequest\x1a:.dlkit.proto.logging.CanCreateLogEntryWithRecordTypesReply\"\x00\x12\x86\x01\n\x18GetLogEntryFormForCreate\x12\x34.dlkit.proto.logging.GetLogEntryFormForCreateRequest\x1a\x32.dlkit.proto.logging.GetLogEntryFormForCreateReply\"\x00\x12h\n\x0e\x43reateLogEntry\x12*.dlkit.proto.logging.CreateLogEntryRequest\x1a(.dlkit.proto.logging.CreateLogEntryReply\"\x00\x12w\n\x13\x43\x61nUpdateLogEntries\x12/.dlkit.proto.logging.CanUpdateLogEntriesRequest\x1a-.dlkit.proto.logging.CanUpdateLogEntriesReply\"\x00\x12\x86\x01\n\x18GetLogEntryFormForUpdate\x12\x34.dlkit.proto.logging.GetLogEntryFormForUpdateRequest\x1a\x32.dlkit.proto.logging.GetLogEntryFormForUpdateReply\"\x00\x12h\n\x0eUpdateLogEntry\x12*.dlkit.proto.logging.UpdateLogEntryRequest\x1a(.dlkit.proto.logging.UpdateLogEntryReply\"\x00\x12w\n\x13\x43\x61nDeleteLogEntries\x12/.dlkit.proto.logging.CanDeleteLogEntriesRequest\x1a-.dlkit.proto.logging.CanDeleteLogEntriesReply\"\x00\x12h\n\x0e\x44\x65leteLogEntry\x12*.dlkit.proto.logging.DeleteLogEntryRequest\x1a(.dlkit.proto.logging.DeleteLogEntryReply\"\x00\x12\x86\x01\n\x18\x43\x61nManageLogEntryAliases\x12\x34.dlkit.proto.logging.CanManageLogEntryAliasesRequest\x1a\x32.dlkit.proto.logging.CanManageLogEntryAliasesReply\"\x00\x12\x65\n\rAliasLogEntry\x12).dlkit.proto.logging.AliasLogEntryRequest\x1a\'.dlkit.proto.logging.AliasLogEntryReply\"\x00\x32\xab\x07\n\x12LogEntryLogSession\x12}\n\x15UseComparativeLogView\x12\x31.dlkit.proto.logging.UseComparativeLogViewRequest\x1a/.dlkit.proto.logging.UseComparativeLogViewReply\"\x00\x12q\n\x11UsePlenaryLogView\x12-.dlkit.proto.logging.UsePlenaryLogViewRequest\x1a+.dlkit.proto.logging.UsePlenaryLogViewReply\"\x00\x12\x92\x01\n\x1c\x43\x61nLookupLogEntryLogMappings\x12\x38.dlkit.proto.logging.CanLookupLogEntryLogMappingsRequest\x1a\x36.dlkit.proto.logging.CanLookupLogEntryLogMappingsReply\"\x00\x12n\n\x13GetLogEntryIdsByLog\x12/.dlkit.proto.logging.GetLogEntryIdsByLogRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12g\n\x12GetLogEntriesByLog\x12..dlkit.proto.logging.GetLogEntriesByLogRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12\x65\n\x11GetLogEntrieByLog\x12-.dlkit.proto.logging.GetLogEntrieByLogRequest\x1a\x1d.dlkit.proto.logging.LogEntry\"\x00\x30\x01\x12n\n\x13GetLogIdsByLogEntry\x12/.dlkit.proto.logging.GetLogIdsByLogEntryRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12^\n\x10GetLogByLogEntry\x12,.dlkit.proto.logging.GetLogByLogEntryRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x32\x95\x07\n\x1cLogEntryLogAssignmentSession\x12w\n\x13\x43\x61nAssignLogEntries\x12/.dlkit.proto.logging.CanAssignLogEntriesRequest\x1a-.dlkit.proto.logging.CanAssignLogEntriesReply\"\x00\x12\x86\x01\n\x18\x43\x61nAssignLogEntriesToLog\x12\x34.dlkit.proto.logging.CanAssignLogEntriesToLogRequest\x1a\x32.dlkit.proto.logging.CanAssignLogEntriesToLogReply\"\x00\x12n\n\x13GetAssignableLogIds\x12/.dlkit.proto.logging.GetAssignableLogIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x84\x01\n\x1eGetAssignableLogIdsForLogEntry\x12:.dlkit.proto.logging.GetAssignableLogIdsForLogEntryRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12w\n\x13\x41ssignLogEntryToLog\x12/.dlkit.proto.logging.AssignLogEntryToLogRequest\x1a-.dlkit.proto.logging.AssignLogEntryToLogReply\"\x00\x12\x83\x01\n\x17UnassignLogEntryFromLog\x12\x33.dlkit.proto.logging.UnassignLogEntryFromLogRequest\x1a\x31.dlkit.proto.logging.UnassignLogEntryFromLogReply\"\x00\x12}\n\x15ReassignLogEntryToLog\x12\x31.dlkit.proto.logging.ReassignLogEntryToLogRequest\x1a/.dlkit.proto.logging.ReassignLogEntryToLogReply\"\x00\x32\xff\x07\n\x10LogLookupSession\x12\x65\n\rCanLookupLogs\x12).dlkit.proto.logging.CanLookupLogsRequest\x1a\'.dlkit.proto.logging.CanLookupLogsReply\"\x00\x12}\n\x15UseComparativeLogView\x12\x31.dlkit.proto.logging.UseComparativeLogViewRequest\x1a/.dlkit.proto.logging.UseComparativeLogViewReply\"\x00\x12q\n\x11UsePlenaryLogView\x12-.dlkit.proto.logging.UsePlenaryLogViewRequest\x1a+.dlkit.proto.logging.UsePlenaryLogViewReply\"\x00\x12P\n\x06GetLog\x12\".dlkit.proto.logging.GetLogRequest\x1a .dlkit.proto.logging.GetLogReply\"\x00\x12V\n\x0cGetLogsByIds\x12(.dlkit.proto.logging.GetLogsByIdsRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12\x62\n\x12GetLogsByGenusType\x12..dlkit.proto.logging.GetLogsByGenusTypeRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12n\n\x18GetLogsByParentGenusType\x12\x34.dlkit.proto.logging.GetLogsByParentGenusTypeRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12\x64\n\x13GetLogsByRecordType\x12/.dlkit.proto.logging.GetLogsByRecordTypeRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12`\n\x11GetLogsByProvider\x12-.dlkit.proto.logging.GetLogsByProviderRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12L\n\x07GetLogs\x12#.dlkit.proto.logging.GetLogsRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x32\xac\t\n\x0fLogAdminSession\x12\x65\n\rCanCreateLogs\x12).dlkit.proto.logging.CanCreateLogsRequest\x1a\'.dlkit.proto.logging.CanCreateLogsReply\"\x00\x12\x8f\x01\n\x1b\x43\x61nCreateLogWithRecordTypes\x12\x37.dlkit.proto.logging.CanCreateLogWithRecordTypesRequest\x1a\x35.dlkit.proto.logging.CanCreateLogWithRecordTypesReply\"\x00\x12w\n\x13GetLogFormForCreate\x12/.dlkit.proto.logging.GetLogFormForCreateRequest\x1a-.dlkit.proto.logging.GetLogFormForCreateReply\"\x00\x12Y\n\tCreateLog\x12%.dlkit.proto.logging.CreateLogRequest\x1a#.dlkit.proto.logging.CreateLogReply\"\x00\x12\x65\n\rCanUpdateLogs\x12).dlkit.proto.logging.CanUpdateLogsRequest\x1a\'.dlkit.proto.logging.CanUpdateLogsReply\"\x00\x12w\n\x13GetLogFormForUpdate\x12/.dlkit.proto.logging.GetLogFormForUpdateRequest\x1a-.dlkit.proto.logging.GetLogFormForUpdateReply\"\x00\x12Y\n\tUpdateLog\x12%.dlkit.proto.logging.UpdateLogRequest\x1a#.dlkit.proto.logging.UpdateLogReply\"\x00\x12\x65\n\rCanDeleteLogs\x12).dlkit.proto.logging.CanDeleteLogsRequest\x1a\'.dlkit.proto.logging.CanDeleteLogsReply\"\x00\x12Y\n\tDeleteLog\x12%.dlkit.proto.logging.DeleteLogRequest\x1a#.dlkit.proto.logging.DeleteLogReply\"\x00\x12w\n\x13\x43\x61nManageLogAliases\x12/.dlkit.proto.logging.CanManageLogAliasesRequest\x1a-.dlkit.proto.logging.CanManageLogAliasesReply\"\x00\x12V\n\x08\x41liasLog\x12$.dlkit.proto.logging.AliasLogRequest\x1a\".dlkit.proto.logging.AliasLogReply\"\x00\x32\xde\x0f\n\x13LogHierarchySession\x12q\n\x11GetLogHierarchyId\x12-.dlkit.proto.logging.GetLogHierarchyIdRequest\x1a+.dlkit.proto.logging.GetLogHierarchyIdReply\"\x00\x12k\n\x0fGetLogHierarchy\x12+.dlkit.proto.logging.GetLogHierarchyRequest\x1a).dlkit.proto.logging.GetLogHierarchyReply\"\x00\x12}\n\x15\x43\x61nAccessLogHierarchy\x12\x31.dlkit.proto.logging.CanAccessLogHierarchyRequest\x1a/.dlkit.proto.logging.CanAccessLogHierarchyReply\"\x00\x12}\n\x15UseComparativeLogView\x12\x31.dlkit.proto.logging.UseComparativeLogViewRequest\x1a/.dlkit.proto.logging.UseComparativeLogViewReply\"\x00\x12q\n\x11UsePlenaryLogView\x12-.dlkit.proto.logging.UsePlenaryLogViewRequest\x1a+.dlkit.proto.logging.UsePlenaryLogViewReply\"\x00\x12\x62\n\rGetRootLogIds\x12).dlkit.proto.logging.GetRootLogIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12T\n\x0bGetRootLogs\x12\'.dlkit.proto.logging.GetRootLogsRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12\x65\n\rHasParentLogs\x12).dlkit.proto.logging.HasParentLogsRequest\x1a\'.dlkit.proto.logging.HasParentLogsReply\"\x00\x12\x65\n\rIsParentOfLog\x12).dlkit.proto.logging.IsParentOfLogRequest\x1a\'.dlkit.proto.logging.IsParentOfLogReply\"\x00\x12\x66\n\x0fGetParentLogIds\x12+.dlkit.proto.logging.GetParentLogIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12X\n\rGetParentLogs\x12).dlkit.proto.logging.GetParentLogsRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12k\n\x0fIsAncestorOfLog\x12+.dlkit.proto.logging.IsAncestorOfLogRequest\x1a).dlkit.proto.logging.IsAncestorOfLogReply\"\x00\x12\x62\n\x0cHasChildLogs\x12(.dlkit.proto.logging.HasChildLogsRequest\x1a&.dlkit.proto.logging.HasChildLogsReply\"\x00\x12\x62\n\x0cIsChildOfLog\x12(.dlkit.proto.logging.IsChildOfLogRequest\x1a&.dlkit.proto.logging.IsChildOfLogReply\"\x00\x12\x64\n\x0eGetChildLogIds\x12*.dlkit.proto.logging.GetChildLogIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12V\n\x0cGetChildLogs\x12(.dlkit.proto.logging.GetChildLogsRequest\x1a\x18.dlkit.proto.logging.Log\"\x00\x30\x01\x12q\n\x11IsDescendantOfLog\x12-.dlkit.proto.logging.IsDescendantOfLogRequest\x1a+.dlkit.proto.logging.IsDescendantOfLogReply\"\x00\x12\x65\n\rGetLogNodeIds\x12).dlkit.proto.logging.GetLogNodeIdsRequest\x1a\'.dlkit.proto.logging.GetLogNodeIdsReply\"\x00\x12_\n\x0bGetLogNodes\x12\'.dlkit.proto.logging.GetLogNodesRequest\x1a%.dlkit.proto.logging.GetLogNodesReply\"\x00\x32\xf7\x06\n\x19LogHierarchyDesignSession\x12q\n\x11GetLogHierarchyId\x12-.dlkit.proto.logging.GetLogHierarchyIdRequest\x1a+.dlkit.proto.logging.GetLogHierarchyIdReply\"\x00\x12k\n\x0fGetLogHierarchy\x12+.dlkit.proto.logging.GetLogHierarchyRequest\x1a).dlkit.proto.logging.GetLogHierarchyReply\"\x00\x12}\n\x15\x43\x61nModifyLogHierarchy\x12\x31.dlkit.proto.logging.CanModifyLogHierarchyRequest\x1a/.dlkit.proto.logging.CanModifyLogHierarchyReply\"\x00\x12\\\n\nAddRootLog\x12&.dlkit.proto.logging.AddRootLogRequest\x1a$.dlkit.proto.logging.AddRootLogReply\"\x00\x12\x65\n\rRemoveRootLog\x12).dlkit.proto.logging.RemoveRootLogRequest\x1a\'.dlkit.proto.logging.RemoveRootLogReply\"\x00\x12_\n\x0b\x41\x64\x64\x43hildLog\x12\'.dlkit.proto.logging.AddChildLogRequest\x1a%.dlkit.proto.logging.AddChildLogReply\"\x00\x12h\n\x0eRemoveChildLog\x12*.dlkit.proto.logging.RemoveChildLogRequest\x1a(.dlkit.proto.logging.RemoveChildLogReply\"\x00\x12k\n\x0fRemoveChildLogs\x12+.dlkit.proto.logging.RemoveChildLogsRequest\x1a).dlkit.proto.logging.RemoveChildLogsReply\"\x00\x62\x06proto3')
  ,
  dependencies=[dlkit_dot_primordium_dot_id_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_primordium_dot_locale_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_primordium_dot_type_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_proto_dot_hierarchy__pb2.DESCRIPTOR,dlkit_dot_proto_dot_osid__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])




_LOGENTRY = _descriptor.Descriptor(
  name='LogEntry',
  full_name='dlkit.proto.logging.LogEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent', full_name='dlkit.proto.logging.LogEntry.agent', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='dlkit.proto.logging.LogEntry.description', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='displayName', full_name='dlkit.proto.logging.LogEntry.displayName', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='genusTypeId', full_name='dlkit.proto.logging.LogEntry.genusTypeId', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.logging.LogEntry.id', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log', full_name='dlkit.proto.logging.LogEntry.log', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='priority', full_name='dlkit.proto.logging.LogEntry.priority', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recordTypeIds', full_name='dlkit.proto.logging.LogEntry.recordTypeIds', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='dlkit.proto.logging.LogEntry.timestamp', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=257,
  serialized_end=779,
)


_LOGENTRYQUERY = _descriptor.Descriptor(
  name='LogEntryQuery',
  full_name='dlkit.proto.logging.LogEntryQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=781,
  serialized_end=796,
)


_LOGENTRYQUERYINSPECTOR = _descriptor.Descriptor(
  name='LogEntryQueryInspector',
  full_name='dlkit.proto.logging.LogEntryQueryInspector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=798,
  serialized_end=822,
)


_LOGENTRYFORM = _descriptor.Descriptor(
  name='LogEntryForm',
  full_name='dlkit.proto.logging.LogEntryForm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=824,
  serialized_end=838,
)


_LOGENTRYSEARCHORDER = _descriptor.Descriptor(
  name='LogEntrySearchOrder',
  full_name='dlkit.proto.logging.LogEntrySearchOrder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=840,
  serialized_end=861,
)


_LOGENTRYSEARCH = _descriptor.Descriptor(
  name='LogEntrySearch',
  full_name='dlkit.proto.logging.LogEntrySearch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=863,
  serialized_end=879,
)


_LOGENTRYSEARCHRESULTS = _descriptor.Descriptor(
  name='LogEntrySearchResults',
  full_name='dlkit.proto.logging.LogEntrySearchResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=881,
  serialized_end=904,
)


_LOGENTRYLIST = _descriptor.Descriptor(
  name='LogEntryList',
  full_name='dlkit.proto.logging.LogEntryList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entries', full_name='dlkit.proto.logging.LogEntryList.log_entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=906,
  serialized_end=972,
)


_LOG = _descriptor.Descriptor(
  name='Log',
  full_name='dlkit.proto.logging.Log',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='dlkit.proto.logging.Log.description', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='displayName', full_name='dlkit.proto.logging.Log.displayName', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='genusTypeId', full_name='dlkit.proto.logging.Log.genusTypeId', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.logging.Log.id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recordTypeIds', full_name='dlkit.proto.logging.Log.recordTypeIds', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=975,
  serialized_end=1292,
)


_LOGQUERY = _descriptor.Descriptor(
  name='LogQuery',
  full_name='dlkit.proto.logging.LogQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1294,
  serialized_end=1304,
)


_LOGQUERYINSPECTOR = _descriptor.Descriptor(
  name='LogQueryInspector',
  full_name='dlkit.proto.logging.LogQueryInspector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1306,
  serialized_end=1325,
)


_LOGFORM = _descriptor.Descriptor(
  name='LogForm',
  full_name='dlkit.proto.logging.LogForm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1327,
  serialized_end=1336,
)


_LOGSEARCHORDER = _descriptor.Descriptor(
  name='LogSearchOrder',
  full_name='dlkit.proto.logging.LogSearchOrder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1338,
  serialized_end=1354,
)


_LOGSEARCH = _descriptor.Descriptor(
  name='LogSearch',
  full_name='dlkit.proto.logging.LogSearch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1356,
  serialized_end=1367,
)


_LOGSEARCHRESULTS = _descriptor.Descriptor(
  name='LogSearchResults',
  full_name='dlkit.proto.logging.LogSearchResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1369,
  serialized_end=1387,
)


_LOGLIST = _descriptor.Descriptor(
  name='LogList',
  full_name='dlkit.proto.logging.LogList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='logs', full_name='dlkit.proto.logging.LogList.logs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1389,
  serialized_end=1438,
)


_LOGNODE = _descriptor.Descriptor(
  name='LogNode',
  full_name='dlkit.proto.logging.LogNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1440,
  serialized_end=1449,
)


_LOGNODELIST = _descriptor.Descriptor(
  name='LogNodeList',
  full_name='dlkit.proto.logging.LogNodeList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_nodes', full_name='dlkit.proto.logging.LogNodeList.log_nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1451,
  serialized_end=1513,
)


_GETLOGIDREPLY = _descriptor.Descriptor(
  name='GetLogIdReply',
  full_name='dlkit.proto.logging.GetLogIdReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.logging.GetLogIdReply.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1515,
  serialized_end=1578,
)


_GETLOGIDREQUEST = _descriptor.Descriptor(
  name='GetLogIdRequest',
  full_name='dlkit.proto.logging.GetLogIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1580,
  serialized_end=1597,
)


_GETLOGREPLY = _descriptor.Descriptor(
  name='GetLogReply',
  full_name='dlkit.proto.logging.GetLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log', full_name='dlkit.proto.logging.GetLogReply.log', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1599,
  serialized_end=1651,
)


_GETLOGREQUEST = _descriptor.Descriptor(
  name='GetLogRequest',
  full_name='dlkit.proto.logging.GetLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1653,
  serialized_end=1668,
)


_CANLOGREPLY = _descriptor.Descriptor(
  name='CanLogReply',
  full_name='dlkit.proto.logging.CanLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_log', full_name='dlkit.proto.logging.CanLogReply.can_log', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1670,
  serialized_end=1700,
)


_CANLOGREQUEST = _descriptor.Descriptor(
  name='CanLogRequest',
  full_name='dlkit.proto.logging.CanLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1702,
  serialized_end=1717,
)


_LOGREPLY = _descriptor.Descriptor(
  name='LogReply',
  full_name='dlkit.proto.logging.LogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1719,
  serialized_end=1729,
)


_LOGREQUEST = _descriptor.Descriptor(
  name='LogRequest',
  full_name='dlkit.proto.logging.LogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='dlkit.proto.logging.LogRequest.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='content_type', full_name='dlkit.proto.logging.LogRequest.content_type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1731,
  serialized_end=1822,
)


_LOGATPRIORITYREPLY = _descriptor.Descriptor(
  name='LogAtPriorityReply',
  full_name='dlkit.proto.logging.LogAtPriorityReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1824,
  serialized_end=1844,
)


_LOGATPRIORITYREQUEST = _descriptor.Descriptor(
  name='LogAtPriorityRequest',
  full_name='dlkit.proto.logging.LogAtPriorityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='dlkit.proto.logging.LogAtPriorityRequest.content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='content_type', full_name='dlkit.proto.logging.LogAtPriorityRequest.content_type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='priority_type', full_name='dlkit.proto.logging.LogAtPriorityRequest.priority_type', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1847,
  serialized_end=2011,
)


_GETLOGENTRYFORMREPLY = _descriptor.Descriptor(
  name='GetLogEntryFormReply',
  full_name='dlkit.proto.logging.GetLogEntryFormReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_form', full_name='dlkit.proto.logging.GetLogEntryFormReply.log_entry_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2013,
  serialized_end=2094,
)


_GETLOGENTRYFORMREQUEST = _descriptor.Descriptor(
  name='GetLogEntryFormRequest',
  full_name='dlkit.proto.logging.GetLogEntryFormRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2096,
  serialized_end=2120,
)


_CREATELOGENTRYREPLY = _descriptor.Descriptor(
  name='CreateLogEntryReply',
  full_name='dlkit.proto.logging.CreateLogEntryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2122,
  serialized_end=2143,
)


_CREATELOGENTRYREQUEST = _descriptor.Descriptor(
  name='CreateLogEntryRequest',
  full_name='dlkit.proto.logging.CreateLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_form', full_name='dlkit.proto.logging.CreateLogEntryRequest.log_entry_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2145,
  serialized_end=2227,
)


_CANREADLOGREPLY = _descriptor.Descriptor(
  name='CanReadLogReply',
  full_name='dlkit.proto.logging.CanReadLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_read_log', full_name='dlkit.proto.logging.CanReadLogReply.can_read_log', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2229,
  serialized_end=2268,
)


_CANREADLOGREQUEST = _descriptor.Descriptor(
  name='CanReadLogRequest',
  full_name='dlkit.proto.logging.CanReadLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2270,
  serialized_end=2289,
)


_USECOMPARATIVELOGENTRYVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeLogEntryViewReply',
  full_name='dlkit.proto.logging.UseComparativeLogEntryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2291,
  serialized_end=2324,
)


_USECOMPARATIVELOGENTRYVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeLogEntryViewRequest',
  full_name='dlkit.proto.logging.UseComparativeLogEntryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2326,
  serialized_end=2361,
)


_USEPLENARYLOGENTRYVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryLogEntryViewReply',
  full_name='dlkit.proto.logging.UsePlenaryLogEntryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2363,
  serialized_end=2392,
)


_USEPLENARYLOGENTRYVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryLogEntryViewRequest',
  full_name='dlkit.proto.logging.UsePlenaryLogEntryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2394,
  serialized_end=2425,
)


_USEFEDERATEDLOGVIEWREPLY = _descriptor.Descriptor(
  name='UseFederatedLogViewReply',
  full_name='dlkit.proto.logging.UseFederatedLogViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2427,
  serialized_end=2453,
)


_USEFEDERATEDLOGVIEWREQUEST = _descriptor.Descriptor(
  name='UseFederatedLogViewRequest',
  full_name='dlkit.proto.logging.UseFederatedLogViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2455,
  serialized_end=2483,
)


_USEISOLATEDLOGVIEWREPLY = _descriptor.Descriptor(
  name='UseIsolatedLogViewReply',
  full_name='dlkit.proto.logging.UseIsolatedLogViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2485,
  serialized_end=2510,
)


_USEISOLATEDLOGVIEWREQUEST = _descriptor.Descriptor(
  name='UseIsolatedLogViewRequest',
  full_name='dlkit.proto.logging.UseIsolatedLogViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2512,
  serialized_end=2539,
)


_GETLOGENTRYREPLY = _descriptor.Descriptor(
  name='GetLogEntryReply',
  full_name='dlkit.proto.logging.GetLogEntryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry', full_name='dlkit.proto.logging.GetLogEntryReply.log_entry', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2541,
  serialized_end=2609,
)


_GETLOGENTRYREQUEST = _descriptor.Descriptor(
  name='GetLogEntryRequest',
  full_name='dlkit.proto.logging.GetLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.GetLogEntryRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2611,
  serialized_end=2689,
)


_GETLOGENTRIESBYIDSREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByIdsRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_ids', full_name='dlkit.proto.logging.GetLogEntriesByIdsRequest.log_entry_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2691,
  serialized_end=2777,
)


_GETLOGENTRIESBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByGenusTypeRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_genus_type', full_name='dlkit.proto.logging.GetLogEntriesByGenusTypeRequest.log_entry_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2779,
  serialized_end=2882,
)


_GETLOGENTRIESBYPARENTGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByParentGenusTypeRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByParentGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_genus_type', full_name='dlkit.proto.logging.GetLogEntriesByParentGenusTypeRequest.log_entry_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2884,
  serialized_end=2993,
)


_GETLOGENTRIESBYRECORDTYPEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByRecordTypeRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByRecordTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_genus_type', full_name='dlkit.proto.logging.GetLogEntriesByRecordTypeRequest.log_entry_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2995,
  serialized_end=3099,
)


_GETLOGENTRIESBYPRIORITYTYPEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByPriorityTypeRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='priority_type', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeRequest.priority_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3101,
  serialized_end=3200,
)


_GETLOGENTRIESBYDATEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByDateRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByDateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='end', full_name='dlkit.proto.logging.GetLogEntriesByDateRequest.end', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='dlkit.proto.logging.GetLogEntriesByDateRequest.start', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3202,
  serialized_end=3314,
)


_GETLOGENTRIESBYPRIORITYTYPEANDDATEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByPriorityTypeAndDateRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='end', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateRequest.end', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='priority_type', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateRequest.priority_type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateRequest.start', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3317,
  serialized_end=3507,
)


_GETLOGENTRIESFORRESOURCEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesForResourceRequest',
  full_name='dlkit.proto.logging.GetLogEntriesForResourceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.logging.GetLogEntriesForResourceRequest.resource_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3509,
  serialized_end=3599,
)


_GETLOGENTRIESBYDATEFORRESOURCEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByDateForResourceRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByDateForResourceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='end', full_name='dlkit.proto.logging.GetLogEntriesByDateForResourceRequest.end', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.logging.GetLogEntriesByDateForResourceRequest.resource_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='dlkit.proto.logging.GetLogEntriesByDateForResourceRequest.start', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3602,
  serialized_end=3782,
)


_GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByPriorityTypeAndDateForResourceRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateForResourceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='end', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateForResourceRequest.end', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='priority_type', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateForResourceRequest.priority_type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateForResourceRequest.resource_id', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateForResourceRequest.start', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3785,
  serialized_end=4043,
)


_GETLOGENTRIESREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesRequest',
  full_name='dlkit.proto.logging.GetLogEntriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4045,
  serialized_end=4067,
)


_CANSEARCHLOGENTRIESREPLY = _descriptor.Descriptor(
  name='CanSearchLogEntriesReply',
  full_name='dlkit.proto.logging.CanSearchLogEntriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_search_log_entries', full_name='dlkit.proto.logging.CanSearchLogEntriesReply.can_search_log_entries', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4069,
  serialized_end=4127,
)


_CANSEARCHLOGENTRIESREQUEST = _descriptor.Descriptor(
  name='CanSearchLogEntriesRequest',
  full_name='dlkit.proto.logging.CanSearchLogEntriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4129,
  serialized_end=4157,
)


_GETLOGENTRYQUERYREPLY = _descriptor.Descriptor(
  name='GetLogEntryQueryReply',
  full_name='dlkit.proto.logging.GetLogEntryQueryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_query', full_name='dlkit.proto.logging.GetLogEntryQueryReply.log_entry_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4159,
  serialized_end=4243,
)


_GETLOGENTRYQUERYREQUEST = _descriptor.Descriptor(
  name='GetLogEntryQueryRequest',
  full_name='dlkit.proto.logging.GetLogEntryQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4245,
  serialized_end=4270,
)


_GETLOGENTRIESBYQUERYREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByQueryRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_query', full_name='dlkit.proto.logging.GetLogEntriesByQueryRequest.log_entry_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4272,
  serialized_end=4362,
)


_CANCREATELOGENTRIESREPLY = _descriptor.Descriptor(
  name='CanCreateLogEntriesReply',
  full_name='dlkit.proto.logging.CanCreateLogEntriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_log_entries', full_name='dlkit.proto.logging.CanCreateLogEntriesReply.can_create_log_entries', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4364,
  serialized_end=4422,
)


_CANCREATELOGENTRIESREQUEST = _descriptor.Descriptor(
  name='CanCreateLogEntriesRequest',
  full_name='dlkit.proto.logging.CanCreateLogEntriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4424,
  serialized_end=4452,
)


_CANCREATELOGENTRYWITHRECORDTYPESREPLY = _descriptor.Descriptor(
  name='CanCreateLogEntryWithRecordTypesReply',
  full_name='dlkit.proto.logging.CanCreateLogEntryWithRecordTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_log_entry_with_record_types', full_name='dlkit.proto.logging.CanCreateLogEntryWithRecordTypesReply.can_create_log_entry_with_record_types', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4454,
  serialized_end=4541,
)


_CANCREATELOGENTRYWITHRECORDTYPESREQUEST = _descriptor.Descriptor(
  name='CanCreateLogEntryWithRecordTypesRequest',
  full_name='dlkit.proto.logging.CanCreateLogEntryWithRecordTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_record_types', full_name='dlkit.proto.logging.CanCreateLogEntryWithRecordTypesRequest.log_entry_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4543,
  serialized_end=4656,
)


_GETLOGENTRYFORMFORCREATEREPLY = _descriptor.Descriptor(
  name='GetLogEntryFormForCreateReply',
  full_name='dlkit.proto.logging.GetLogEntryFormForCreateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_form', full_name='dlkit.proto.logging.GetLogEntryFormForCreateReply.log_entry_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4658,
  serialized_end=4748,
)


_GETLOGENTRYFORMFORCREATEREQUEST = _descriptor.Descriptor(
  name='GetLogEntryFormForCreateRequest',
  full_name='dlkit.proto.logging.GetLogEntryFormForCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_record_types', full_name='dlkit.proto.logging.GetLogEntryFormForCreateRequest.log_entry_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4750,
  serialized_end=4855,
)


_CANUPDATELOGENTRIESREPLY = _descriptor.Descriptor(
  name='CanUpdateLogEntriesReply',
  full_name='dlkit.proto.logging.CanUpdateLogEntriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_update_log_entries', full_name='dlkit.proto.logging.CanUpdateLogEntriesReply.can_update_log_entries', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4857,
  serialized_end=4915,
)


_CANUPDATELOGENTRIESREQUEST = _descriptor.Descriptor(
  name='CanUpdateLogEntriesRequest',
  full_name='dlkit.proto.logging.CanUpdateLogEntriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4917,
  serialized_end=4945,
)


_GETLOGENTRYFORMFORUPDATEREPLY = _descriptor.Descriptor(
  name='GetLogEntryFormForUpdateReply',
  full_name='dlkit.proto.logging.GetLogEntryFormForUpdateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_form', full_name='dlkit.proto.logging.GetLogEntryFormForUpdateReply.log_entry_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4947,
  serialized_end=5037,
)


_GETLOGENTRYFORMFORUPDATEREQUEST = _descriptor.Descriptor(
  name='GetLogEntryFormForUpdateRequest',
  full_name='dlkit.proto.logging.GetLogEntryFormForUpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.GetLogEntryFormForUpdateRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5039,
  serialized_end=5130,
)


_UPDATELOGENTRYREPLY = _descriptor.Descriptor(
  name='UpdateLogEntryReply',
  full_name='dlkit.proto.logging.UpdateLogEntryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5132,
  serialized_end=5153,
)


_UPDATELOGENTRYREQUEST = _descriptor.Descriptor(
  name='UpdateLogEntryRequest',
  full_name='dlkit.proto.logging.UpdateLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_form', full_name='dlkit.proto.logging.UpdateLogEntryRequest.log_entry_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5155,
  serialized_end=5237,
)


_CANDELETELOGENTRIESREPLY = _descriptor.Descriptor(
  name='CanDeleteLogEntriesReply',
  full_name='dlkit.proto.logging.CanDeleteLogEntriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_delete_log_entries', full_name='dlkit.proto.logging.CanDeleteLogEntriesReply.can_delete_log_entries', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5239,
  serialized_end=5297,
)


_CANDELETELOGENTRIESREQUEST = _descriptor.Descriptor(
  name='CanDeleteLogEntriesRequest',
  full_name='dlkit.proto.logging.CanDeleteLogEntriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5299,
  serialized_end=5327,
)


_DELETELOGENTRYREPLY = _descriptor.Descriptor(
  name='DeleteLogEntryReply',
  full_name='dlkit.proto.logging.DeleteLogEntryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5329,
  serialized_end=5350,
)


_DELETELOGENTRYREQUEST = _descriptor.Descriptor(
  name='DeleteLogEntryRequest',
  full_name='dlkit.proto.logging.DeleteLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.DeleteLogEntryRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5352,
  serialized_end=5433,
)


_CANMANAGELOGENTRYALIASESREPLY = _descriptor.Descriptor(
  name='CanManageLogEntryAliasesReply',
  full_name='dlkit.proto.logging.CanManageLogEntryAliasesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_manage_log_entry_aliases', full_name='dlkit.proto.logging.CanManageLogEntryAliasesReply.can_manage_log_entry_aliases', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5435,
  serialized_end=5504,
)


_CANMANAGELOGENTRYALIASESREQUEST = _descriptor.Descriptor(
  name='CanManageLogEntryAliasesRequest',
  full_name='dlkit.proto.logging.CanManageLogEntryAliasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5506,
  serialized_end=5539,
)


_ALIASLOGENTRYREPLY = _descriptor.Descriptor(
  name='AliasLogEntryReply',
  full_name='dlkit.proto.logging.AliasLogEntryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5541,
  serialized_end=5561,
)


_ALIASLOGENTRYREQUEST = _descriptor.Descriptor(
  name='AliasLogEntryRequest',
  full_name='dlkit.proto.logging.AliasLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias_id', full_name='dlkit.proto.logging.AliasLogEntryRequest.alias_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.AliasLogEntryRequest.log_entry_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5564,
  serialized_end=5698,
)


_USECOMPARATIVELOGVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeLogViewReply',
  full_name='dlkit.proto.logging.UseComparativeLogViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5700,
  serialized_end=5728,
)


_USECOMPARATIVELOGVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeLogViewRequest',
  full_name='dlkit.proto.logging.UseComparativeLogViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5730,
  serialized_end=5760,
)


_USEPLENARYLOGVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryLogViewReply',
  full_name='dlkit.proto.logging.UsePlenaryLogViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5762,
  serialized_end=5786,
)


_USEPLENARYLOGVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryLogViewRequest',
  full_name='dlkit.proto.logging.UsePlenaryLogViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5788,
  serialized_end=5814,
)


_CANLOOKUPLOGENTRYLOGMAPPINGSREPLY = _descriptor.Descriptor(
  name='CanLookupLogEntryLogMappingsReply',
  full_name='dlkit.proto.logging.CanLookupLogEntryLogMappingsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_log_entry_log_mappings', full_name='dlkit.proto.logging.CanLookupLogEntryLogMappingsReply.can_lookup_log_entry_log_mappings', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5816,
  serialized_end=5894,
)


_CANLOOKUPLOGENTRYLOGMAPPINGSREQUEST = _descriptor.Descriptor(
  name='CanLookupLogEntryLogMappingsRequest',
  full_name='dlkit.proto.logging.CanLookupLogEntryLogMappingsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5896,
  serialized_end=5933,
)


_GETLOGENTRYIDSBYLOGREQUEST = _descriptor.Descriptor(
  name='GetLogEntryIdsByLogRequest',
  full_name='dlkit.proto.logging.GetLogEntryIdsByLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetLogEntryIdsByLogRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5935,
  serialized_end=6015,
)


_GETLOGENTRIESBYLOGREQUEST = _descriptor.Descriptor(
  name='GetLogEntriesByLogRequest',
  full_name='dlkit.proto.logging.GetLogEntriesByLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetLogEntriesByLogRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6017,
  serialized_end=6096,
)


_GETLOGENTRIEBYLOGREQUEST = _descriptor.Descriptor(
  name='GetLogEntrieByLogRequest',
  full_name='dlkit.proto.logging.GetLogEntrieByLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_ids', full_name='dlkit.proto.logging.GetLogEntrieByLogRequest.log_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6098,
  serialized_end=6177,
)


_GETLOGIDSBYLOGENTRYREQUEST = _descriptor.Descriptor(
  name='GetLogIdsByLogEntryRequest',
  full_name='dlkit.proto.logging.GetLogIdsByLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.GetLogIdsByLogEntryRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6179,
  serialized_end=6265,
)


_GETLOGBYLOGENTRYREQUEST = _descriptor.Descriptor(
  name='GetLogByLogEntryRequest',
  full_name='dlkit.proto.logging.GetLogByLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.GetLogByLogEntryRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6267,
  serialized_end=6350,
)


_CANASSIGNLOGENTRIESREPLY = _descriptor.Descriptor(
  name='CanAssignLogEntriesReply',
  full_name='dlkit.proto.logging.CanAssignLogEntriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_assign_log_entries', full_name='dlkit.proto.logging.CanAssignLogEntriesReply.can_assign_log_entries', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6352,
  serialized_end=6410,
)


_CANASSIGNLOGENTRIESREQUEST = _descriptor.Descriptor(
  name='CanAssignLogEntriesRequest',
  full_name='dlkit.proto.logging.CanAssignLogEntriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6412,
  serialized_end=6440,
)


_CANASSIGNLOGENTRIESTOLOGREPLY = _descriptor.Descriptor(
  name='CanAssignLogEntriesToLogReply',
  full_name='dlkit.proto.logging.CanAssignLogEntriesToLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_assign_log_entries_to_log', full_name='dlkit.proto.logging.CanAssignLogEntriesToLogReply.can_assign_log_entries_to_log', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6442,
  serialized_end=6512,
)


_CANASSIGNLOGENTRIESTOLOGREQUEST = _descriptor.Descriptor(
  name='CanAssignLogEntriesToLogRequest',
  full_name='dlkit.proto.logging.CanAssignLogEntriesToLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.CanAssignLogEntriesToLogRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6514,
  serialized_end=6599,
)


_GETASSIGNABLELOGIDSREQUEST = _descriptor.Descriptor(
  name='GetAssignableLogIdsRequest',
  full_name='dlkit.proto.logging.GetAssignableLogIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetAssignableLogIdsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6601,
  serialized_end=6681,
)


_GETASSIGNABLELOGIDSFORLOGENTRYREQUEST = _descriptor.Descriptor(
  name='GetAssignableLogIdsForLogEntryRequest',
  full_name='dlkit.proto.logging.GetAssignableLogIdsForLogEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.GetAssignableLogIdsForLogEntryRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetAssignableLogIdsForLogEntryRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6684,
  serialized_end=6833,
)


_ASSIGNLOGENTRYTOLOGREPLY = _descriptor.Descriptor(
  name='AssignLogEntryToLogReply',
  full_name='dlkit.proto.logging.AssignLogEntryToLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6835,
  serialized_end=6861,
)


_ASSIGNLOGENTRYTOLOGREQUEST = _descriptor.Descriptor(
  name='AssignLogEntryToLogRequest',
  full_name='dlkit.proto.logging.AssignLogEntryToLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.AssignLogEntryToLogRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.AssignLogEntryToLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6864,
  serialized_end=7002,
)


_UNASSIGNLOGENTRYFROMLOGREPLY = _descriptor.Descriptor(
  name='UnassignLogEntryFromLogReply',
  full_name='dlkit.proto.logging.UnassignLogEntryFromLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7004,
  serialized_end=7034,
)


_UNASSIGNLOGENTRYFROMLOGREQUEST = _descriptor.Descriptor(
  name='UnassignLogEntryFromLogRequest',
  full_name='dlkit.proto.logging.UnassignLogEntryFromLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.UnassignLogEntryFromLogRequest.log_entry_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.UnassignLogEntryFromLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7037,
  serialized_end=7179,
)


_REASSIGNLOGENTRYTOLOGREPLY = _descriptor.Descriptor(
  name='ReassignLogEntryToLogReply',
  full_name='dlkit.proto.logging.ReassignLogEntryToLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7181,
  serialized_end=7209,
)


_REASSIGNLOGENTRYTOLOGREQUEST = _descriptor.Descriptor(
  name='ReassignLogEntryToLogRequest',
  full_name='dlkit.proto.logging.ReassignLogEntryToLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from_log_id', full_name='dlkit.proto.logging.ReassignLogEntryToLogRequest.from_log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_entry_id', full_name='dlkit.proto.logging.ReassignLogEntryToLogRequest.log_entry_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='to_log_id', full_name='dlkit.proto.logging.ReassignLogEntryToLogRequest.to_log_id', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7212,
  serialized_end=7412,
)


_CANLOOKUPLOGSREPLY = _descriptor.Descriptor(
  name='CanLookupLogsReply',
  full_name='dlkit.proto.logging.CanLookupLogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_logs', full_name='dlkit.proto.logging.CanLookupLogsReply.can_lookup_logs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7414,
  serialized_end=7459,
)


_CANLOOKUPLOGSREQUEST = _descriptor.Descriptor(
  name='CanLookupLogsRequest',
  full_name='dlkit.proto.logging.CanLookupLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7461,
  serialized_end=7483,
)


_GETLOGSBYIDSREQUEST = _descriptor.Descriptor(
  name='GetLogsByIdsRequest',
  full_name='dlkit.proto.logging.GetLogsByIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_ids', full_name='dlkit.proto.logging.GetLogsByIdsRequest.log_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7485,
  serialized_end=7559,
)


_GETLOGSBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetLogsByGenusTypeRequest',
  full_name='dlkit.proto.logging.GetLogsByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_genus_type', full_name='dlkit.proto.logging.GetLogsByGenusTypeRequest.log_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7561,
  serialized_end=7652,
)


_GETLOGSBYPARENTGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetLogsByParentGenusTypeRequest',
  full_name='dlkit.proto.logging.GetLogsByParentGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_genus_type', full_name='dlkit.proto.logging.GetLogsByParentGenusTypeRequest.log_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7654,
  serialized_end=7751,
)


_GETLOGSBYRECORDTYPEREQUEST = _descriptor.Descriptor(
  name='GetLogsByRecordTypeRequest',
  full_name='dlkit.proto.logging.GetLogsByRecordTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_record_type', full_name='dlkit.proto.logging.GetLogsByRecordTypeRequest.log_record_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7753,
  serialized_end=7846,
)


_GETLOGSBYPROVIDERREQUEST = _descriptor.Descriptor(
  name='GetLogsByProviderRequest',
  full_name='dlkit.proto.logging.GetLogsByProviderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.logging.GetLogsByProviderRequest.resource_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7848,
  serialized_end=7931,
)


_GETLOGSREQUEST = _descriptor.Descriptor(
  name='GetLogsRequest',
  full_name='dlkit.proto.logging.GetLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7933,
  serialized_end=7949,
)


_CANCREATELOGSREPLY = _descriptor.Descriptor(
  name='CanCreateLogsReply',
  full_name='dlkit.proto.logging.CanCreateLogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_logs', full_name='dlkit.proto.logging.CanCreateLogsReply.can_create_logs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7951,
  serialized_end=7996,
)


_CANCREATELOGSREQUEST = _descriptor.Descriptor(
  name='CanCreateLogsRequest',
  full_name='dlkit.proto.logging.CanCreateLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7998,
  serialized_end=8020,
)


_CANCREATELOGWITHRECORDTYPESREPLY = _descriptor.Descriptor(
  name='CanCreateLogWithRecordTypesReply',
  full_name='dlkit.proto.logging.CanCreateLogWithRecordTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_log_with_record_types', full_name='dlkit.proto.logging.CanCreateLogWithRecordTypesReply.can_create_log_with_record_types', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8022,
  serialized_end=8098,
)


_CANCREATELOGWITHRECORDTYPESREQUEST = _descriptor.Descriptor(
  name='CanCreateLogWithRecordTypesRequest',
  full_name='dlkit.proto.logging.CanCreateLogWithRecordTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_record_types', full_name='dlkit.proto.logging.CanCreateLogWithRecordTypesRequest.log_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8100,
  serialized_end=8202,
)


_GETLOGFORMFORCREATEREPLY = _descriptor.Descriptor(
  name='GetLogFormForCreateReply',
  full_name='dlkit.proto.logging.GetLogFormForCreateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_form', full_name='dlkit.proto.logging.GetLogFormForCreateReply.log_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8204,
  serialized_end=8278,
)


_GETLOGFORMFORCREATEREQUEST = _descriptor.Descriptor(
  name='GetLogFormForCreateRequest',
  full_name='dlkit.proto.logging.GetLogFormForCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_record_types', full_name='dlkit.proto.logging.GetLogFormForCreateRequest.log_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8280,
  serialized_end=8374,
)


_CREATELOGREPLY = _descriptor.Descriptor(
  name='CreateLogReply',
  full_name='dlkit.proto.logging.CreateLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log', full_name='dlkit.proto.logging.CreateLogReply.log', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8376,
  serialized_end=8431,
)


_CREATELOGREQUEST = _descriptor.Descriptor(
  name='CreateLogRequest',
  full_name='dlkit.proto.logging.CreateLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_form', full_name='dlkit.proto.logging.CreateLogRequest.log_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8433,
  serialized_end=8499,
)


_CANUPDATELOGSREPLY = _descriptor.Descriptor(
  name='CanUpdateLogsReply',
  full_name='dlkit.proto.logging.CanUpdateLogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_update_logs', full_name='dlkit.proto.logging.CanUpdateLogsReply.can_update_logs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8501,
  serialized_end=8546,
)


_CANUPDATELOGSREQUEST = _descriptor.Descriptor(
  name='CanUpdateLogsRequest',
  full_name='dlkit.proto.logging.CanUpdateLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8548,
  serialized_end=8570,
)


_GETLOGFORMFORUPDATEREPLY = _descriptor.Descriptor(
  name='GetLogFormForUpdateReply',
  full_name='dlkit.proto.logging.GetLogFormForUpdateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_form', full_name='dlkit.proto.logging.GetLogFormForUpdateReply.log_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8572,
  serialized_end=8646,
)


_GETLOGFORMFORUPDATEREQUEST = _descriptor.Descriptor(
  name='GetLogFormForUpdateRequest',
  full_name='dlkit.proto.logging.GetLogFormForUpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetLogFormForUpdateRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8648,
  serialized_end=8728,
)


_UPDATELOGREPLY = _descriptor.Descriptor(
  name='UpdateLogReply',
  full_name='dlkit.proto.logging.UpdateLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8730,
  serialized_end=8746,
)


_UPDATELOGREQUEST = _descriptor.Descriptor(
  name='UpdateLogRequest',
  full_name='dlkit.proto.logging.UpdateLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_form', full_name='dlkit.proto.logging.UpdateLogRequest.log_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8748,
  serialized_end=8814,
)


_CANDELETELOGSREPLY = _descriptor.Descriptor(
  name='CanDeleteLogsReply',
  full_name='dlkit.proto.logging.CanDeleteLogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_delete_logs', full_name='dlkit.proto.logging.CanDeleteLogsReply.can_delete_logs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8816,
  serialized_end=8861,
)


_CANDELETELOGSREQUEST = _descriptor.Descriptor(
  name='CanDeleteLogsRequest',
  full_name='dlkit.proto.logging.CanDeleteLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8863,
  serialized_end=8885,
)


_DELETELOGREPLY = _descriptor.Descriptor(
  name='DeleteLogReply',
  full_name='dlkit.proto.logging.DeleteLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8887,
  serialized_end=8903,
)


_DELETELOGREQUEST = _descriptor.Descriptor(
  name='DeleteLogRequest',
  full_name='dlkit.proto.logging.DeleteLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.DeleteLogRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8905,
  serialized_end=8975,
)


_CANMANAGELOGALIASESREPLY = _descriptor.Descriptor(
  name='CanManageLogAliasesReply',
  full_name='dlkit.proto.logging.CanManageLogAliasesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_manage_log_aliases', full_name='dlkit.proto.logging.CanManageLogAliasesReply.can_manage_log_aliases', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8977,
  serialized_end=9035,
)


_CANMANAGELOGALIASESREQUEST = _descriptor.Descriptor(
  name='CanManageLogAliasesRequest',
  full_name='dlkit.proto.logging.CanManageLogAliasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9037,
  serialized_end=9065,
)


_ALIASLOGREPLY = _descriptor.Descriptor(
  name='AliasLogReply',
  full_name='dlkit.proto.logging.AliasLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9067,
  serialized_end=9082,
)


_ALIASLOGREQUEST = _descriptor.Descriptor(
  name='AliasLogRequest',
  full_name='dlkit.proto.logging.AliasLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias_id', full_name='dlkit.proto.logging.AliasLogRequest.alias_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.AliasLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9084,
  serialized_end=9207,
)


_GETLOGHIERARCHYIDREPLY = _descriptor.Descriptor(
  name='GetLogHierarchyIdReply',
  full_name='dlkit.proto.logging.GetLogHierarchyIdReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.logging.GetLogHierarchyIdReply.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9209,
  serialized_end=9281,
)


_GETLOGHIERARCHYIDREQUEST = _descriptor.Descriptor(
  name='GetLogHierarchyIdRequest',
  full_name='dlkit.proto.logging.GetLogHierarchyIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9283,
  serialized_end=9309,
)


_GETLOGHIERARCHYREPLY = _descriptor.Descriptor(
  name='GetLogHierarchyReply',
  full_name='dlkit.proto.logging.GetLogHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hierarchy', full_name='dlkit.proto.logging.GetLogHierarchyReply.hierarchy', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9311,
  serialized_end=9386,
)


_GETLOGHIERARCHYREQUEST = _descriptor.Descriptor(
  name='GetLogHierarchyRequest',
  full_name='dlkit.proto.logging.GetLogHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9388,
  serialized_end=9412,
)


_CANACCESSLOGHIERARCHYREPLY = _descriptor.Descriptor(
  name='CanAccessLogHierarchyReply',
  full_name='dlkit.proto.logging.CanAccessLogHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_access_log_hierarchy', full_name='dlkit.proto.logging.CanAccessLogHierarchyReply.can_access_log_hierarchy', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9414,
  serialized_end=9476,
)


_CANACCESSLOGHIERARCHYREQUEST = _descriptor.Descriptor(
  name='CanAccessLogHierarchyRequest',
  full_name='dlkit.proto.logging.CanAccessLogHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9478,
  serialized_end=9508,
)


_GETROOTLOGIDSREQUEST = _descriptor.Descriptor(
  name='GetRootLogIdsRequest',
  full_name='dlkit.proto.logging.GetRootLogIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9510,
  serialized_end=9532,
)


_GETROOTLOGSREQUEST = _descriptor.Descriptor(
  name='GetRootLogsRequest',
  full_name='dlkit.proto.logging.GetRootLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9534,
  serialized_end=9554,
)


_HASPARENTLOGSREPLY = _descriptor.Descriptor(
  name='HasParentLogsReply',
  full_name='dlkit.proto.logging.HasParentLogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='has_parent_logs', full_name='dlkit.proto.logging.HasParentLogsReply.has_parent_logs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9556,
  serialized_end=9601,
)


_HASPARENTLOGSREQUEST = _descriptor.Descriptor(
  name='HasParentLogsRequest',
  full_name='dlkit.proto.logging.HasParentLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.HasParentLogsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9603,
  serialized_end=9677,
)


_ISPARENTOFLOGREPLY = _descriptor.Descriptor(
  name='IsParentOfLogReply',
  full_name='dlkit.proto.logging.IsParentOfLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_parent_of_log', full_name='dlkit.proto.logging.IsParentOfLogReply.is_parent_of_log', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9679,
  serialized_end=9725,
)


_ISPARENTOFLOGREQUEST = _descriptor.Descriptor(
  name='IsParentOfLogRequest',
  full_name='dlkit.proto.logging.IsParentOfLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.logging.IsParentOfLogRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.IsParentOfLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9727,
  serialized_end=9850,
)


_GETPARENTLOGIDSREQUEST = _descriptor.Descriptor(
  name='GetParentLogIdsRequest',
  full_name='dlkit.proto.logging.GetParentLogIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetParentLogIdsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9852,
  serialized_end=9928,
)


_GETPARENTLOGSREQUEST = _descriptor.Descriptor(
  name='GetParentLogsRequest',
  full_name='dlkit.proto.logging.GetParentLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetParentLogsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9930,
  serialized_end=10004,
)


_ISANCESTOROFLOGREPLY = _descriptor.Descriptor(
  name='IsAncestorOfLogReply',
  full_name='dlkit.proto.logging.IsAncestorOfLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_ancestor_of_log', full_name='dlkit.proto.logging.IsAncestorOfLogReply.is_ancestor_of_log', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10006,
  serialized_end=10056,
)


_ISANCESTOROFLOGREQUEST = _descriptor.Descriptor(
  name='IsAncestorOfLogRequest',
  full_name='dlkit.proto.logging.IsAncestorOfLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.logging.IsAncestorOfLogRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.IsAncestorOfLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10058,
  serialized_end=10183,
)


_HASCHILDLOGSREPLY = _descriptor.Descriptor(
  name='HasChildLogsReply',
  full_name='dlkit.proto.logging.HasChildLogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='has_child_logs', full_name='dlkit.proto.logging.HasChildLogsReply.has_child_logs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10185,
  serialized_end=10228,
)


_HASCHILDLOGSREQUEST = _descriptor.Descriptor(
  name='HasChildLogsRequest',
  full_name='dlkit.proto.logging.HasChildLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.HasChildLogsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10230,
  serialized_end=10303,
)


_ISCHILDOFLOGREPLY = _descriptor.Descriptor(
  name='IsChildOfLogReply',
  full_name='dlkit.proto.logging.IsChildOfLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_child_of_log', full_name='dlkit.proto.logging.IsChildOfLogReply.is_child_of_log', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10305,
  serialized_end=10349,
)


_ISCHILDOFLOGREQUEST = _descriptor.Descriptor(
  name='IsChildOfLogRequest',
  full_name='dlkit.proto.logging.IsChildOfLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.logging.IsChildOfLogRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.IsChildOfLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10351,
  serialized_end=10473,
)


_GETCHILDLOGIDSREQUEST = _descriptor.Descriptor(
  name='GetChildLogIdsRequest',
  full_name='dlkit.proto.logging.GetChildLogIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetChildLogIdsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10475,
  serialized_end=10550,
)


_GETCHILDLOGSREQUEST = _descriptor.Descriptor(
  name='GetChildLogsRequest',
  full_name='dlkit.proto.logging.GetChildLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetChildLogsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10552,
  serialized_end=10625,
)


_ISDESCENDANTOFLOGREPLY = _descriptor.Descriptor(
  name='IsDescendantOfLogReply',
  full_name='dlkit.proto.logging.IsDescendantOfLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_descendant_of_log', full_name='dlkit.proto.logging.IsDescendantOfLogReply.is_descendant_of_log', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10627,
  serialized_end=10681,
)


_ISDESCENDANTOFLOGREQUEST = _descriptor.Descriptor(
  name='IsDescendantOfLogRequest',
  full_name='dlkit.proto.logging.IsDescendantOfLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.logging.IsDescendantOfLogRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.IsDescendantOfLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10683,
  serialized_end=10810,
)


_GETLOGNODEIDSREPLY = _descriptor.Descriptor(
  name='GetLogNodeIdsReply',
  full_name='dlkit.proto.logging.GetLogNodeIdsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='dlkit.proto.logging.GetLogNodeIdsReply.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10812,
  serialized_end=10875,
)


_GETLOGNODEIDSREQUEST = _descriptor.Descriptor(
  name='GetLogNodeIdsRequest',
  full_name='dlkit.proto.logging.GetLogNodeIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ancestor_levels', full_name='dlkit.proto.logging.GetLogNodeIdsRequest.ancestor_levels', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='descendant_levels', full_name='dlkit.proto.logging.GetLogNodeIdsRequest.descendant_levels', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include_siblings', full_name='dlkit.proto.logging.GetLogNodeIdsRequest.include_siblings', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetLogNodeIdsRequest.log_id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10878,
  serialized_end=11030,
)


_GETLOGNODESREPLY = _descriptor.Descriptor(
  name='GetLogNodesReply',
  full_name='dlkit.proto.logging.GetLogNodesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_node', full_name='dlkit.proto.logging.GetLogNodesReply.log_node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11032,
  serialized_end=11098,
)


_GETLOGNODESREQUEST = _descriptor.Descriptor(
  name='GetLogNodesRequest',
  full_name='dlkit.proto.logging.GetLogNodesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ancestor_levels', full_name='dlkit.proto.logging.GetLogNodesRequest.ancestor_levels', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='descendant_levels', full_name='dlkit.proto.logging.GetLogNodesRequest.descendant_levels', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include_siblings', full_name='dlkit.proto.logging.GetLogNodesRequest.include_siblings', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.GetLogNodesRequest.log_id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11101,
  serialized_end=11251,
)


_CANMODIFYLOGHIERARCHYREPLY = _descriptor.Descriptor(
  name='CanModifyLogHierarchyReply',
  full_name='dlkit.proto.logging.CanModifyLogHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_modify_log_hierarchy', full_name='dlkit.proto.logging.CanModifyLogHierarchyReply.can_modify_log_hierarchy', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11253,
  serialized_end=11315,
)


_CANMODIFYLOGHIERARCHYREQUEST = _descriptor.Descriptor(
  name='CanModifyLogHierarchyRequest',
  full_name='dlkit.proto.logging.CanModifyLogHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11317,
  serialized_end=11347,
)


_ADDROOTLOGREPLY = _descriptor.Descriptor(
  name='AddRootLogReply',
  full_name='dlkit.proto.logging.AddRootLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11349,
  serialized_end=11366,
)


_ADDROOTLOGREQUEST = _descriptor.Descriptor(
  name='AddRootLogRequest',
  full_name='dlkit.proto.logging.AddRootLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.AddRootLogRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11368,
  serialized_end=11439,
)


_REMOVEROOTLOGREPLY = _descriptor.Descriptor(
  name='RemoveRootLogReply',
  full_name='dlkit.proto.logging.RemoveRootLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11441,
  serialized_end=11461,
)


_REMOVEROOTLOGREQUEST = _descriptor.Descriptor(
  name='RemoveRootLogRequest',
  full_name='dlkit.proto.logging.RemoveRootLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.RemoveRootLogRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11463,
  serialized_end=11537,
)


_ADDCHILDLOGREPLY = _descriptor.Descriptor(
  name='AddChildLogReply',
  full_name='dlkit.proto.logging.AddChildLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11539,
  serialized_end=11557,
)


_ADDCHILDLOGREQUEST = _descriptor.Descriptor(
  name='AddChildLogRequest',
  full_name='dlkit.proto.logging.AddChildLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child_id', full_name='dlkit.proto.logging.AddChildLogRequest.child_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.AddChildLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11559,
  serialized_end=11685,
)


_REMOVECHILDLOGREPLY = _descriptor.Descriptor(
  name='RemoveChildLogReply',
  full_name='dlkit.proto.logging.RemoveChildLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11687,
  serialized_end=11708,
)


_REMOVECHILDLOGREQUEST = _descriptor.Descriptor(
  name='RemoveChildLogRequest',
  full_name='dlkit.proto.logging.RemoveChildLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child_id', full_name='dlkit.proto.logging.RemoveChildLogRequest.child_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.RemoveChildLogRequest.log_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11711,
  serialized_end=11840,
)


_REMOVECHILDLOGSREPLY = _descriptor.Descriptor(
  name='RemoveChildLogsReply',
  full_name='dlkit.proto.logging.RemoveChildLogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11842,
  serialized_end=11864,
)


_REMOVECHILDLOGSREQUEST = _descriptor.Descriptor(
  name='RemoveChildLogsRequest',
  full_name='dlkit.proto.logging.RemoveChildLogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_id', full_name='dlkit.proto.logging.RemoveChildLogsRequest.log_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11866,
  serialized_end=11942,
)

_LOGENTRY.fields_by_name['agent'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_LOGENTRY.fields_by_name['description'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_LOGENTRY.fields_by_name['displayName'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_LOGENTRY.fields_by_name['genusTypeId'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_LOGENTRY.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_LOGENTRY.fields_by_name['log'].message_type = dlkit_dot_proto_dot_osid__pb2._OSIDCATALOG
_LOGENTRY.fields_by_name['priority'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_LOGENTRY.fields_by_name['recordTypeIds'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_LOGENTRY.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_LOGENTRYLIST.fields_by_name['log_entries'].message_type = _LOGENTRY
_LOG.fields_by_name['description'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_LOG.fields_by_name['displayName'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_LOG.fields_by_name['genusTypeId'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_LOG.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_LOG.fields_by_name['recordTypeIds'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_LOGLIST.fields_by_name['logs'].message_type = _LOG
_LOGNODELIST.fields_by_name['log_nodes'].message_type = _LOGNODE
_GETLOGIDREPLY.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGREPLY.fields_by_name['log'].message_type = _LOG
_LOGREQUEST.fields_by_name['content_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_LOGATPRIORITYREQUEST.fields_by_name['content_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_LOGATPRIORITYREQUEST.fields_by_name['priority_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRYFORMREPLY.fields_by_name['log_entry_form'].message_type = _LOGENTRYFORM
_CREATELOGENTRYREQUEST.fields_by_name['log_entry_form'].message_type = _LOGENTRYFORM
_GETLOGENTRYREPLY.fields_by_name['log_entry'].message_type = _LOGENTRY
_GETLOGENTRYREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRIESBYIDSREQUEST.fields_by_name['log_entry_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRIESBYGENUSTYPEREQUEST.fields_by_name['log_entry_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRIESBYPARENTGENUSTYPEREQUEST.fields_by_name['log_entry_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRIESBYRECORDTYPEREQUEST.fields_by_name['log_entry_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRIESBYPRIORITYTYPEREQUEST.fields_by_name['priority_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRIESBYDATEREQUEST.fields_by_name['end'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRIESBYDATEREQUEST.fields_by_name['start'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRIESBYPRIORITYTYPEANDDATEREQUEST.fields_by_name['end'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRIESBYPRIORITYTYPEANDDATEREQUEST.fields_by_name['priority_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRIESBYPRIORITYTYPEANDDATEREQUEST.fields_by_name['start'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRIESFORRESOURCEREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRIESBYDATEFORRESOURCEREQUEST.fields_by_name['end'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRIESBYDATEFORRESOURCEREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRIESBYDATEFORRESOURCEREQUEST.fields_by_name['start'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST.fields_by_name['end'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST.fields_by_name['priority_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST.fields_by_name['start'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETLOGENTRYQUERYREPLY.fields_by_name['log_entry_query'].message_type = _LOGENTRYQUERY
_GETLOGENTRIESBYQUERYREQUEST.fields_by_name['log_entry_query'].message_type = _LOGENTRYQUERY
_CANCREATELOGENTRYWITHRECORDTYPESREQUEST.fields_by_name['log_entry_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRYFORMFORCREATEREPLY.fields_by_name['log_entry_form'].message_type = _LOGENTRYFORM
_GETLOGENTRYFORMFORCREATEREQUEST.fields_by_name['log_entry_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGENTRYFORMFORUPDATEREPLY.fields_by_name['log_entry_form'].message_type = _LOGENTRYFORM
_GETLOGENTRYFORMFORUPDATEREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UPDATELOGENTRYREQUEST.fields_by_name['log_entry_form'].message_type = _LOGENTRYFORM
_DELETELOGENTRYREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASLOGENTRYREQUEST.fields_by_name['alias_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASLOGENTRYREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRYIDSBYLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRIESBYLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGENTRIEBYLOGREQUEST.fields_by_name['log_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGIDSBYLOGENTRYREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGBYLOGENTRYREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_CANASSIGNLOGENTRIESTOLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLELOGIDSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLELOGIDSFORLOGENTRYREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLELOGIDSFORLOGENTRYREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSIGNLOGENTRYTOLOGREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSIGNLOGENTRYTOLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UNASSIGNLOGENTRYFROMLOGREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UNASSIGNLOGENTRYFROMLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REASSIGNLOGENTRYTOLOGREQUEST.fields_by_name['from_log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REASSIGNLOGENTRYTOLOGREQUEST.fields_by_name['log_entry_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REASSIGNLOGENTRYTOLOGREQUEST.fields_by_name['to_log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGSBYIDSREQUEST.fields_by_name['log_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGSBYGENUSTYPEREQUEST.fields_by_name['log_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGSBYPARENTGENUSTYPEREQUEST.fields_by_name['log_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGSBYRECORDTYPEREQUEST.fields_by_name['log_record_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGSBYPROVIDERREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_CANCREATELOGWITHRECORDTYPESREQUEST.fields_by_name['log_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETLOGFORMFORCREATEREPLY.fields_by_name['log_form'].message_type = _LOGFORM
_GETLOGFORMFORCREATEREQUEST.fields_by_name['log_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_CREATELOGREPLY.fields_by_name['log'].message_type = _LOG
_CREATELOGREQUEST.fields_by_name['log_form'].message_type = _LOGFORM
_GETLOGFORMFORUPDATEREPLY.fields_by_name['log_form'].message_type = _LOGFORM
_GETLOGFORMFORUPDATEREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UPDATELOGREQUEST.fields_by_name['log_form'].message_type = _LOGFORM
_DELETELOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASLOGREQUEST.fields_by_name['alias_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGHIERARCHYIDREPLY.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGHIERARCHYREPLY.fields_by_name['hierarchy'].message_type = dlkit_dot_proto_dot_hierarchy__pb2._HIERARCHY
_HASPARENTLOGSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISPARENTOFLOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISPARENTOFLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETPARENTLOGIDSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETPARENTLOGSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISANCESTOROFLOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISANCESTOROFLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_HASCHILDLOGSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISCHILDOFLOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISCHILDOFLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCHILDLOGIDSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCHILDLOGSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISDESCENDANTOFLOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISDESCENDANTOFLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGNODEIDSREPLY.fields_by_name['node'].message_type = dlkit_dot_proto_dot_hierarchy__pb2._NODE
_GETLOGNODEIDSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETLOGNODESREPLY.fields_by_name['log_node'].message_type = _LOGNODE
_GETLOGNODESREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDROOTLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVEROOTLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCHILDLOGREQUEST.fields_by_name['child_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCHILDLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDLOGREQUEST.fields_by_name['child_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDLOGREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDLOGSREQUEST.fields_by_name['log_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
DESCRIPTOR.message_types_by_name['LogEntry'] = _LOGENTRY
DESCRIPTOR.message_types_by_name['LogEntryQuery'] = _LOGENTRYQUERY
DESCRIPTOR.message_types_by_name['LogEntryQueryInspector'] = _LOGENTRYQUERYINSPECTOR
DESCRIPTOR.message_types_by_name['LogEntryForm'] = _LOGENTRYFORM
DESCRIPTOR.message_types_by_name['LogEntrySearchOrder'] = _LOGENTRYSEARCHORDER
DESCRIPTOR.message_types_by_name['LogEntrySearch'] = _LOGENTRYSEARCH
DESCRIPTOR.message_types_by_name['LogEntrySearchResults'] = _LOGENTRYSEARCHRESULTS
DESCRIPTOR.message_types_by_name['LogEntryList'] = _LOGENTRYLIST
DESCRIPTOR.message_types_by_name['Log'] = _LOG
DESCRIPTOR.message_types_by_name['LogQuery'] = _LOGQUERY
DESCRIPTOR.message_types_by_name['LogQueryInspector'] = _LOGQUERYINSPECTOR
DESCRIPTOR.message_types_by_name['LogForm'] = _LOGFORM
DESCRIPTOR.message_types_by_name['LogSearchOrder'] = _LOGSEARCHORDER
DESCRIPTOR.message_types_by_name['LogSearch'] = _LOGSEARCH
DESCRIPTOR.message_types_by_name['LogSearchResults'] = _LOGSEARCHRESULTS
DESCRIPTOR.message_types_by_name['LogList'] = _LOGLIST
DESCRIPTOR.message_types_by_name['LogNode'] = _LOGNODE
DESCRIPTOR.message_types_by_name['LogNodeList'] = _LOGNODELIST
DESCRIPTOR.message_types_by_name['GetLogIdReply'] = _GETLOGIDREPLY
DESCRIPTOR.message_types_by_name['GetLogIdRequest'] = _GETLOGIDREQUEST
DESCRIPTOR.message_types_by_name['GetLogReply'] = _GETLOGREPLY
DESCRIPTOR.message_types_by_name['GetLogRequest'] = _GETLOGREQUEST
DESCRIPTOR.message_types_by_name['CanLogReply'] = _CANLOGREPLY
DESCRIPTOR.message_types_by_name['CanLogRequest'] = _CANLOGREQUEST
DESCRIPTOR.message_types_by_name['LogReply'] = _LOGREPLY
DESCRIPTOR.message_types_by_name['LogRequest'] = _LOGREQUEST
DESCRIPTOR.message_types_by_name['LogAtPriorityReply'] = _LOGATPRIORITYREPLY
DESCRIPTOR.message_types_by_name['LogAtPriorityRequest'] = _LOGATPRIORITYREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntryFormReply'] = _GETLOGENTRYFORMREPLY
DESCRIPTOR.message_types_by_name['GetLogEntryFormRequest'] = _GETLOGENTRYFORMREQUEST
DESCRIPTOR.message_types_by_name['CreateLogEntryReply'] = _CREATELOGENTRYREPLY
DESCRIPTOR.message_types_by_name['CreateLogEntryRequest'] = _CREATELOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['CanReadLogReply'] = _CANREADLOGREPLY
DESCRIPTOR.message_types_by_name['CanReadLogRequest'] = _CANREADLOGREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeLogEntryViewReply'] = _USECOMPARATIVELOGENTRYVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeLogEntryViewRequest'] = _USECOMPARATIVELOGENTRYVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryLogEntryViewReply'] = _USEPLENARYLOGENTRYVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryLogEntryViewRequest'] = _USEPLENARYLOGENTRYVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseFederatedLogViewReply'] = _USEFEDERATEDLOGVIEWREPLY
DESCRIPTOR.message_types_by_name['UseFederatedLogViewRequest'] = _USEFEDERATEDLOGVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseIsolatedLogViewReply'] = _USEISOLATEDLOGVIEWREPLY
DESCRIPTOR.message_types_by_name['UseIsolatedLogViewRequest'] = _USEISOLATEDLOGVIEWREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntryReply'] = _GETLOGENTRYREPLY
DESCRIPTOR.message_types_by_name['GetLogEntryRequest'] = _GETLOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByIdsRequest'] = _GETLOGENTRIESBYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByGenusTypeRequest'] = _GETLOGENTRIESBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByParentGenusTypeRequest'] = _GETLOGENTRIESBYPARENTGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByRecordTypeRequest'] = _GETLOGENTRIESBYRECORDTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByPriorityTypeRequest'] = _GETLOGENTRIESBYPRIORITYTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByDateRequest'] = _GETLOGENTRIESBYDATEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByPriorityTypeAndDateRequest'] = _GETLOGENTRIESBYPRIORITYTYPEANDDATEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesForResourceRequest'] = _GETLOGENTRIESFORRESOURCEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByDateForResourceRequest'] = _GETLOGENTRIESBYDATEFORRESOURCEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByPriorityTypeAndDateForResourceRequest'] = _GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesRequest'] = _GETLOGENTRIESREQUEST
DESCRIPTOR.message_types_by_name['CanSearchLogEntriesReply'] = _CANSEARCHLOGENTRIESREPLY
DESCRIPTOR.message_types_by_name['CanSearchLogEntriesRequest'] = _CANSEARCHLOGENTRIESREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntryQueryReply'] = _GETLOGENTRYQUERYREPLY
DESCRIPTOR.message_types_by_name['GetLogEntryQueryRequest'] = _GETLOGENTRYQUERYREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByQueryRequest'] = _GETLOGENTRIESBYQUERYREQUEST
DESCRIPTOR.message_types_by_name['CanCreateLogEntriesReply'] = _CANCREATELOGENTRIESREPLY
DESCRIPTOR.message_types_by_name['CanCreateLogEntriesRequest'] = _CANCREATELOGENTRIESREQUEST
DESCRIPTOR.message_types_by_name['CanCreateLogEntryWithRecordTypesReply'] = _CANCREATELOGENTRYWITHRECORDTYPESREPLY
DESCRIPTOR.message_types_by_name['CanCreateLogEntryWithRecordTypesRequest'] = _CANCREATELOGENTRYWITHRECORDTYPESREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntryFormForCreateReply'] = _GETLOGENTRYFORMFORCREATEREPLY
DESCRIPTOR.message_types_by_name['GetLogEntryFormForCreateRequest'] = _GETLOGENTRYFORMFORCREATEREQUEST
DESCRIPTOR.message_types_by_name['CanUpdateLogEntriesReply'] = _CANUPDATELOGENTRIESREPLY
DESCRIPTOR.message_types_by_name['CanUpdateLogEntriesRequest'] = _CANUPDATELOGENTRIESREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntryFormForUpdateReply'] = _GETLOGENTRYFORMFORUPDATEREPLY
DESCRIPTOR.message_types_by_name['GetLogEntryFormForUpdateRequest'] = _GETLOGENTRYFORMFORUPDATEREQUEST
DESCRIPTOR.message_types_by_name['UpdateLogEntryReply'] = _UPDATELOGENTRYREPLY
DESCRIPTOR.message_types_by_name['UpdateLogEntryRequest'] = _UPDATELOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['CanDeleteLogEntriesReply'] = _CANDELETELOGENTRIESREPLY
DESCRIPTOR.message_types_by_name['CanDeleteLogEntriesRequest'] = _CANDELETELOGENTRIESREQUEST
DESCRIPTOR.message_types_by_name['DeleteLogEntryReply'] = _DELETELOGENTRYREPLY
DESCRIPTOR.message_types_by_name['DeleteLogEntryRequest'] = _DELETELOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['CanManageLogEntryAliasesReply'] = _CANMANAGELOGENTRYALIASESREPLY
DESCRIPTOR.message_types_by_name['CanManageLogEntryAliasesRequest'] = _CANMANAGELOGENTRYALIASESREQUEST
DESCRIPTOR.message_types_by_name['AliasLogEntryReply'] = _ALIASLOGENTRYREPLY
DESCRIPTOR.message_types_by_name['AliasLogEntryRequest'] = _ALIASLOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeLogViewReply'] = _USECOMPARATIVELOGVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeLogViewRequest'] = _USECOMPARATIVELOGVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryLogViewReply'] = _USEPLENARYLOGVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryLogViewRequest'] = _USEPLENARYLOGVIEWREQUEST
DESCRIPTOR.message_types_by_name['CanLookupLogEntryLogMappingsReply'] = _CANLOOKUPLOGENTRYLOGMAPPINGSREPLY
DESCRIPTOR.message_types_by_name['CanLookupLogEntryLogMappingsRequest'] = _CANLOOKUPLOGENTRYLOGMAPPINGSREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntryIdsByLogRequest'] = _GETLOGENTRYIDSBYLOGREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntriesByLogRequest'] = _GETLOGENTRIESBYLOGREQUEST
DESCRIPTOR.message_types_by_name['GetLogEntrieByLogRequest'] = _GETLOGENTRIEBYLOGREQUEST
DESCRIPTOR.message_types_by_name['GetLogIdsByLogEntryRequest'] = _GETLOGIDSBYLOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['GetLogByLogEntryRequest'] = _GETLOGBYLOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['CanAssignLogEntriesReply'] = _CANASSIGNLOGENTRIESREPLY
DESCRIPTOR.message_types_by_name['CanAssignLogEntriesRequest'] = _CANASSIGNLOGENTRIESREQUEST
DESCRIPTOR.message_types_by_name['CanAssignLogEntriesToLogReply'] = _CANASSIGNLOGENTRIESTOLOGREPLY
DESCRIPTOR.message_types_by_name['CanAssignLogEntriesToLogRequest'] = _CANASSIGNLOGENTRIESTOLOGREQUEST
DESCRIPTOR.message_types_by_name['GetAssignableLogIdsRequest'] = _GETASSIGNABLELOGIDSREQUEST
DESCRIPTOR.message_types_by_name['GetAssignableLogIdsForLogEntryRequest'] = _GETASSIGNABLELOGIDSFORLOGENTRYREQUEST
DESCRIPTOR.message_types_by_name['AssignLogEntryToLogReply'] = _ASSIGNLOGENTRYTOLOGREPLY
DESCRIPTOR.message_types_by_name['AssignLogEntryToLogRequest'] = _ASSIGNLOGENTRYTOLOGREQUEST
DESCRIPTOR.message_types_by_name['UnassignLogEntryFromLogReply'] = _UNASSIGNLOGENTRYFROMLOGREPLY
DESCRIPTOR.message_types_by_name['UnassignLogEntryFromLogRequest'] = _UNASSIGNLOGENTRYFROMLOGREQUEST
DESCRIPTOR.message_types_by_name['ReassignLogEntryToLogReply'] = _REASSIGNLOGENTRYTOLOGREPLY
DESCRIPTOR.message_types_by_name['ReassignLogEntryToLogRequest'] = _REASSIGNLOGENTRYTOLOGREQUEST
DESCRIPTOR.message_types_by_name['CanLookupLogsReply'] = _CANLOOKUPLOGSREPLY
DESCRIPTOR.message_types_by_name['CanLookupLogsRequest'] = _CANLOOKUPLOGSREQUEST
DESCRIPTOR.message_types_by_name['GetLogsByIdsRequest'] = _GETLOGSBYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetLogsByGenusTypeRequest'] = _GETLOGSBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetLogsByParentGenusTypeRequest'] = _GETLOGSBYPARENTGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetLogsByRecordTypeRequest'] = _GETLOGSBYRECORDTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetLogsByProviderRequest'] = _GETLOGSBYPROVIDERREQUEST
DESCRIPTOR.message_types_by_name['GetLogsRequest'] = _GETLOGSREQUEST
DESCRIPTOR.message_types_by_name['CanCreateLogsReply'] = _CANCREATELOGSREPLY
DESCRIPTOR.message_types_by_name['CanCreateLogsRequest'] = _CANCREATELOGSREQUEST
DESCRIPTOR.message_types_by_name['CanCreateLogWithRecordTypesReply'] = _CANCREATELOGWITHRECORDTYPESREPLY
DESCRIPTOR.message_types_by_name['CanCreateLogWithRecordTypesRequest'] = _CANCREATELOGWITHRECORDTYPESREQUEST
DESCRIPTOR.message_types_by_name['GetLogFormForCreateReply'] = _GETLOGFORMFORCREATEREPLY
DESCRIPTOR.message_types_by_name['GetLogFormForCreateRequest'] = _GETLOGFORMFORCREATEREQUEST
DESCRIPTOR.message_types_by_name['CreateLogReply'] = _CREATELOGREPLY
DESCRIPTOR.message_types_by_name['CreateLogRequest'] = _CREATELOGREQUEST
DESCRIPTOR.message_types_by_name['CanUpdateLogsReply'] = _CANUPDATELOGSREPLY
DESCRIPTOR.message_types_by_name['CanUpdateLogsRequest'] = _CANUPDATELOGSREQUEST
DESCRIPTOR.message_types_by_name['GetLogFormForUpdateReply'] = _GETLOGFORMFORUPDATEREPLY
DESCRIPTOR.message_types_by_name['GetLogFormForUpdateRequest'] = _GETLOGFORMFORUPDATEREQUEST
DESCRIPTOR.message_types_by_name['UpdateLogReply'] = _UPDATELOGREPLY
DESCRIPTOR.message_types_by_name['UpdateLogRequest'] = _UPDATELOGREQUEST
DESCRIPTOR.message_types_by_name['CanDeleteLogsReply'] = _CANDELETELOGSREPLY
DESCRIPTOR.message_types_by_name['CanDeleteLogsRequest'] = _CANDELETELOGSREQUEST
DESCRIPTOR.message_types_by_name['DeleteLogReply'] = _DELETELOGREPLY
DESCRIPTOR.message_types_by_name['DeleteLogRequest'] = _DELETELOGREQUEST
DESCRIPTOR.message_types_by_name['CanManageLogAliasesReply'] = _CANMANAGELOGALIASESREPLY
DESCRIPTOR.message_types_by_name['CanManageLogAliasesRequest'] = _CANMANAGELOGALIASESREQUEST
DESCRIPTOR.message_types_by_name['AliasLogReply'] = _ALIASLOGREPLY
DESCRIPTOR.message_types_by_name['AliasLogRequest'] = _ALIASLOGREQUEST
DESCRIPTOR.message_types_by_name['GetLogHierarchyIdReply'] = _GETLOGHIERARCHYIDREPLY
DESCRIPTOR.message_types_by_name['GetLogHierarchyIdRequest'] = _GETLOGHIERARCHYIDREQUEST
DESCRIPTOR.message_types_by_name['GetLogHierarchyReply'] = _GETLOGHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['GetLogHierarchyRequest'] = _GETLOGHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['CanAccessLogHierarchyReply'] = _CANACCESSLOGHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['CanAccessLogHierarchyRequest'] = _CANACCESSLOGHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['GetRootLogIdsRequest'] = _GETROOTLOGIDSREQUEST
DESCRIPTOR.message_types_by_name['GetRootLogsRequest'] = _GETROOTLOGSREQUEST
DESCRIPTOR.message_types_by_name['HasParentLogsReply'] = _HASPARENTLOGSREPLY
DESCRIPTOR.message_types_by_name['HasParentLogsRequest'] = _HASPARENTLOGSREQUEST
DESCRIPTOR.message_types_by_name['IsParentOfLogReply'] = _ISPARENTOFLOGREPLY
DESCRIPTOR.message_types_by_name['IsParentOfLogRequest'] = _ISPARENTOFLOGREQUEST
DESCRIPTOR.message_types_by_name['GetParentLogIdsRequest'] = _GETPARENTLOGIDSREQUEST
DESCRIPTOR.message_types_by_name['GetParentLogsRequest'] = _GETPARENTLOGSREQUEST
DESCRIPTOR.message_types_by_name['IsAncestorOfLogReply'] = _ISANCESTOROFLOGREPLY
DESCRIPTOR.message_types_by_name['IsAncestorOfLogRequest'] = _ISANCESTOROFLOGREQUEST
DESCRIPTOR.message_types_by_name['HasChildLogsReply'] = _HASCHILDLOGSREPLY
DESCRIPTOR.message_types_by_name['HasChildLogsRequest'] = _HASCHILDLOGSREQUEST
DESCRIPTOR.message_types_by_name['IsChildOfLogReply'] = _ISCHILDOFLOGREPLY
DESCRIPTOR.message_types_by_name['IsChildOfLogRequest'] = _ISCHILDOFLOGREQUEST
DESCRIPTOR.message_types_by_name['GetChildLogIdsRequest'] = _GETCHILDLOGIDSREQUEST
DESCRIPTOR.message_types_by_name['GetChildLogsRequest'] = _GETCHILDLOGSREQUEST
DESCRIPTOR.message_types_by_name['IsDescendantOfLogReply'] = _ISDESCENDANTOFLOGREPLY
DESCRIPTOR.message_types_by_name['IsDescendantOfLogRequest'] = _ISDESCENDANTOFLOGREQUEST
DESCRIPTOR.message_types_by_name['GetLogNodeIdsReply'] = _GETLOGNODEIDSREPLY
DESCRIPTOR.message_types_by_name['GetLogNodeIdsRequest'] = _GETLOGNODEIDSREQUEST
DESCRIPTOR.message_types_by_name['GetLogNodesReply'] = _GETLOGNODESREPLY
DESCRIPTOR.message_types_by_name['GetLogNodesRequest'] = _GETLOGNODESREQUEST
DESCRIPTOR.message_types_by_name['CanModifyLogHierarchyReply'] = _CANMODIFYLOGHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['CanModifyLogHierarchyRequest'] = _CANMODIFYLOGHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['AddRootLogReply'] = _ADDROOTLOGREPLY
DESCRIPTOR.message_types_by_name['AddRootLogRequest'] = _ADDROOTLOGREQUEST
DESCRIPTOR.message_types_by_name['RemoveRootLogReply'] = _REMOVEROOTLOGREPLY
DESCRIPTOR.message_types_by_name['RemoveRootLogRequest'] = _REMOVEROOTLOGREQUEST
DESCRIPTOR.message_types_by_name['AddChildLogReply'] = _ADDCHILDLOGREPLY
DESCRIPTOR.message_types_by_name['AddChildLogRequest'] = _ADDCHILDLOGREQUEST
DESCRIPTOR.message_types_by_name['RemoveChildLogReply'] = _REMOVECHILDLOGREPLY
DESCRIPTOR.message_types_by_name['RemoveChildLogRequest'] = _REMOVECHILDLOGREQUEST
DESCRIPTOR.message_types_by_name['RemoveChildLogsReply'] = _REMOVECHILDLOGSREPLY
DESCRIPTOR.message_types_by_name['RemoveChildLogsRequest'] = _REMOVECHILDLOGSREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LogEntry = _reflection.GeneratedProtocolMessageType('LogEntry', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntry)
  ))
_sym_db.RegisterMessage(LogEntry)

LogEntryQuery = _reflection.GeneratedProtocolMessageType('LogEntryQuery', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRYQUERY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntryQuery)
  ))
_sym_db.RegisterMessage(LogEntryQuery)

LogEntryQueryInspector = _reflection.GeneratedProtocolMessageType('LogEntryQueryInspector', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRYQUERYINSPECTOR,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntryQueryInspector)
  ))
_sym_db.RegisterMessage(LogEntryQueryInspector)

LogEntryForm = _reflection.GeneratedProtocolMessageType('LogEntryForm', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRYFORM,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntryForm)
  ))
_sym_db.RegisterMessage(LogEntryForm)

LogEntrySearchOrder = _reflection.GeneratedProtocolMessageType('LogEntrySearchOrder', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRYSEARCHORDER,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntrySearchOrder)
  ))
_sym_db.RegisterMessage(LogEntrySearchOrder)

LogEntrySearch = _reflection.GeneratedProtocolMessageType('LogEntrySearch', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRYSEARCH,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntrySearch)
  ))
_sym_db.RegisterMessage(LogEntrySearch)

LogEntrySearchResults = _reflection.GeneratedProtocolMessageType('LogEntrySearchResults', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRYSEARCHRESULTS,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntrySearchResults)
  ))
_sym_db.RegisterMessage(LogEntrySearchResults)

LogEntryList = _reflection.GeneratedProtocolMessageType('LogEntryList', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRYLIST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogEntryList)
  ))
_sym_db.RegisterMessage(LogEntryList)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), dict(
  DESCRIPTOR = _LOG,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.Log)
  ))
_sym_db.RegisterMessage(Log)

LogQuery = _reflection.GeneratedProtocolMessageType('LogQuery', (_message.Message,), dict(
  DESCRIPTOR = _LOGQUERY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogQuery)
  ))
_sym_db.RegisterMessage(LogQuery)

LogQueryInspector = _reflection.GeneratedProtocolMessageType('LogQueryInspector', (_message.Message,), dict(
  DESCRIPTOR = _LOGQUERYINSPECTOR,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogQueryInspector)
  ))
_sym_db.RegisterMessage(LogQueryInspector)

LogForm = _reflection.GeneratedProtocolMessageType('LogForm', (_message.Message,), dict(
  DESCRIPTOR = _LOGFORM,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogForm)
  ))
_sym_db.RegisterMessage(LogForm)

LogSearchOrder = _reflection.GeneratedProtocolMessageType('LogSearchOrder', (_message.Message,), dict(
  DESCRIPTOR = _LOGSEARCHORDER,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogSearchOrder)
  ))
_sym_db.RegisterMessage(LogSearchOrder)

LogSearch = _reflection.GeneratedProtocolMessageType('LogSearch', (_message.Message,), dict(
  DESCRIPTOR = _LOGSEARCH,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogSearch)
  ))
_sym_db.RegisterMessage(LogSearch)

LogSearchResults = _reflection.GeneratedProtocolMessageType('LogSearchResults', (_message.Message,), dict(
  DESCRIPTOR = _LOGSEARCHRESULTS,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogSearchResults)
  ))
_sym_db.RegisterMessage(LogSearchResults)

LogList = _reflection.GeneratedProtocolMessageType('LogList', (_message.Message,), dict(
  DESCRIPTOR = _LOGLIST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogList)
  ))
_sym_db.RegisterMessage(LogList)

LogNode = _reflection.GeneratedProtocolMessageType('LogNode', (_message.Message,), dict(
  DESCRIPTOR = _LOGNODE,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogNode)
  ))
_sym_db.RegisterMessage(LogNode)

LogNodeList = _reflection.GeneratedProtocolMessageType('LogNodeList', (_message.Message,), dict(
  DESCRIPTOR = _LOGNODELIST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogNodeList)
  ))
_sym_db.RegisterMessage(LogNodeList)

GetLogIdReply = _reflection.GeneratedProtocolMessageType('GetLogIdReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGIDREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogIdReply)
  ))
_sym_db.RegisterMessage(GetLogIdReply)

GetLogIdRequest = _reflection.GeneratedProtocolMessageType('GetLogIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGIDREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogIdRequest)
  ))
_sym_db.RegisterMessage(GetLogIdRequest)

GetLogReply = _reflection.GeneratedProtocolMessageType('GetLogReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogReply)
  ))
_sym_db.RegisterMessage(GetLogReply)

GetLogRequest = _reflection.GeneratedProtocolMessageType('GetLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogRequest)
  ))
_sym_db.RegisterMessage(GetLogRequest)

CanLogReply = _reflection.GeneratedProtocolMessageType('CanLogReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanLogReply)
  ))
_sym_db.RegisterMessage(CanLogReply)

CanLogRequest = _reflection.GeneratedProtocolMessageType('CanLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanLogRequest)
  ))
_sym_db.RegisterMessage(CanLogRequest)

LogReply = _reflection.GeneratedProtocolMessageType('LogReply', (_message.Message,), dict(
  DESCRIPTOR = _LOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogReply)
  ))
_sym_db.RegisterMessage(LogReply)

LogRequest = _reflection.GeneratedProtocolMessageType('LogRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogRequest)
  ))
_sym_db.RegisterMessage(LogRequest)

LogAtPriorityReply = _reflection.GeneratedProtocolMessageType('LogAtPriorityReply', (_message.Message,), dict(
  DESCRIPTOR = _LOGATPRIORITYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogAtPriorityReply)
  ))
_sym_db.RegisterMessage(LogAtPriorityReply)

LogAtPriorityRequest = _reflection.GeneratedProtocolMessageType('LogAtPriorityRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOGATPRIORITYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.LogAtPriorityRequest)
  ))
_sym_db.RegisterMessage(LogAtPriorityRequest)

GetLogEntryFormReply = _reflection.GeneratedProtocolMessageType('GetLogEntryFormReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYFORMREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryFormReply)
  ))
_sym_db.RegisterMessage(GetLogEntryFormReply)

GetLogEntryFormRequest = _reflection.GeneratedProtocolMessageType('GetLogEntryFormRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYFORMREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryFormRequest)
  ))
_sym_db.RegisterMessage(GetLogEntryFormRequest)

CreateLogEntryReply = _reflection.GeneratedProtocolMessageType('CreateLogEntryReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATELOGENTRYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CreateLogEntryReply)
  ))
_sym_db.RegisterMessage(CreateLogEntryReply)

CreateLogEntryRequest = _reflection.GeneratedProtocolMessageType('CreateLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATELOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CreateLogEntryRequest)
  ))
_sym_db.RegisterMessage(CreateLogEntryRequest)

CanReadLogReply = _reflection.GeneratedProtocolMessageType('CanReadLogReply', (_message.Message,), dict(
  DESCRIPTOR = _CANREADLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanReadLogReply)
  ))
_sym_db.RegisterMessage(CanReadLogReply)

CanReadLogRequest = _reflection.GeneratedProtocolMessageType('CanReadLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANREADLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanReadLogRequest)
  ))
_sym_db.RegisterMessage(CanReadLogRequest)

UseComparativeLogEntryViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeLogEntryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVELOGENTRYVIEWREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseComparativeLogEntryViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeLogEntryViewReply)

UseComparativeLogEntryViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeLogEntryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVELOGENTRYVIEWREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseComparativeLogEntryViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeLogEntryViewRequest)

UsePlenaryLogEntryViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryLogEntryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYLOGENTRYVIEWREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UsePlenaryLogEntryViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryLogEntryViewReply)

UsePlenaryLogEntryViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryLogEntryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYLOGENTRYVIEWREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UsePlenaryLogEntryViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryLogEntryViewRequest)

UseFederatedLogViewReply = _reflection.GeneratedProtocolMessageType('UseFederatedLogViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEFEDERATEDLOGVIEWREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseFederatedLogViewReply)
  ))
_sym_db.RegisterMessage(UseFederatedLogViewReply)

UseFederatedLogViewRequest = _reflection.GeneratedProtocolMessageType('UseFederatedLogViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEFEDERATEDLOGVIEWREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseFederatedLogViewRequest)
  ))
_sym_db.RegisterMessage(UseFederatedLogViewRequest)

UseIsolatedLogViewReply = _reflection.GeneratedProtocolMessageType('UseIsolatedLogViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEISOLATEDLOGVIEWREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseIsolatedLogViewReply)
  ))
_sym_db.RegisterMessage(UseIsolatedLogViewReply)

UseIsolatedLogViewRequest = _reflection.GeneratedProtocolMessageType('UseIsolatedLogViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEISOLATEDLOGVIEWREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseIsolatedLogViewRequest)
  ))
_sym_db.RegisterMessage(UseIsolatedLogViewRequest)

GetLogEntryReply = _reflection.GeneratedProtocolMessageType('GetLogEntryReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryReply)
  ))
_sym_db.RegisterMessage(GetLogEntryReply)

GetLogEntryRequest = _reflection.GeneratedProtocolMessageType('GetLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryRequest)
  ))
_sym_db.RegisterMessage(GetLogEntryRequest)

GetLogEntriesByIdsRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYIDSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByIdsRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByIdsRequest)

GetLogEntriesByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByGenusTypeRequest)

GetLogEntriesByParentGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByParentGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYPARENTGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByParentGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByParentGenusTypeRequest)

GetLogEntriesByRecordTypeRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByRecordTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYRECORDTYPEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByRecordTypeRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByRecordTypeRequest)

GetLogEntriesByPriorityTypeRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByPriorityTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYPRIORITYTYPEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByPriorityTypeRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByPriorityTypeRequest)

GetLogEntriesByDateRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByDateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYDATEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByDateRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByDateRequest)

GetLogEntriesByPriorityTypeAndDateRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByPriorityTypeAndDateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYPRIORITYTYPEANDDATEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByPriorityTypeAndDateRequest)

GetLogEntriesForResourceRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesForResourceRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESFORRESOURCEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesForResourceRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesForResourceRequest)

GetLogEntriesByDateForResourceRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByDateForResourceRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYDATEFORRESOURCEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByDateForResourceRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByDateForResourceRequest)

GetLogEntriesByPriorityTypeAndDateForResourceRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByPriorityTypeAndDateForResourceRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByPriorityTypeAndDateForResourceRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByPriorityTypeAndDateForResourceRequest)

GetLogEntriesRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesRequest)

CanSearchLogEntriesReply = _reflection.GeneratedProtocolMessageType('CanSearchLogEntriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHLOGENTRIESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanSearchLogEntriesReply)
  ))
_sym_db.RegisterMessage(CanSearchLogEntriesReply)

CanSearchLogEntriesRequest = _reflection.GeneratedProtocolMessageType('CanSearchLogEntriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHLOGENTRIESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanSearchLogEntriesRequest)
  ))
_sym_db.RegisterMessage(CanSearchLogEntriesRequest)

GetLogEntryQueryReply = _reflection.GeneratedProtocolMessageType('GetLogEntryQueryReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYQUERYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryQueryReply)
  ))
_sym_db.RegisterMessage(GetLogEntryQueryReply)

GetLogEntryQueryRequest = _reflection.GeneratedProtocolMessageType('GetLogEntryQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYQUERYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryQueryRequest)
  ))
_sym_db.RegisterMessage(GetLogEntryQueryRequest)

GetLogEntriesByQueryRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYQUERYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByQueryRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByQueryRequest)

CanCreateLogEntriesReply = _reflection.GeneratedProtocolMessageType('CanCreateLogEntriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGENTRIESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogEntriesReply)
  ))
_sym_db.RegisterMessage(CanCreateLogEntriesReply)

CanCreateLogEntriesRequest = _reflection.GeneratedProtocolMessageType('CanCreateLogEntriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGENTRIESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogEntriesRequest)
  ))
_sym_db.RegisterMessage(CanCreateLogEntriesRequest)

CanCreateLogEntryWithRecordTypesReply = _reflection.GeneratedProtocolMessageType('CanCreateLogEntryWithRecordTypesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGENTRYWITHRECORDTYPESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogEntryWithRecordTypesReply)
  ))
_sym_db.RegisterMessage(CanCreateLogEntryWithRecordTypesReply)

CanCreateLogEntryWithRecordTypesRequest = _reflection.GeneratedProtocolMessageType('CanCreateLogEntryWithRecordTypesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGENTRYWITHRECORDTYPESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogEntryWithRecordTypesRequest)
  ))
_sym_db.RegisterMessage(CanCreateLogEntryWithRecordTypesRequest)

GetLogEntryFormForCreateReply = _reflection.GeneratedProtocolMessageType('GetLogEntryFormForCreateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYFORMFORCREATEREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryFormForCreateReply)
  ))
_sym_db.RegisterMessage(GetLogEntryFormForCreateReply)

GetLogEntryFormForCreateRequest = _reflection.GeneratedProtocolMessageType('GetLogEntryFormForCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYFORMFORCREATEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryFormForCreateRequest)
  ))
_sym_db.RegisterMessage(GetLogEntryFormForCreateRequest)

CanUpdateLogEntriesReply = _reflection.GeneratedProtocolMessageType('CanUpdateLogEntriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATELOGENTRIESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanUpdateLogEntriesReply)
  ))
_sym_db.RegisterMessage(CanUpdateLogEntriesReply)

CanUpdateLogEntriesRequest = _reflection.GeneratedProtocolMessageType('CanUpdateLogEntriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATELOGENTRIESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanUpdateLogEntriesRequest)
  ))
_sym_db.RegisterMessage(CanUpdateLogEntriesRequest)

GetLogEntryFormForUpdateReply = _reflection.GeneratedProtocolMessageType('GetLogEntryFormForUpdateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYFORMFORUPDATEREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryFormForUpdateReply)
  ))
_sym_db.RegisterMessage(GetLogEntryFormForUpdateReply)

GetLogEntryFormForUpdateRequest = _reflection.GeneratedProtocolMessageType('GetLogEntryFormForUpdateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYFORMFORUPDATEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryFormForUpdateRequest)
  ))
_sym_db.RegisterMessage(GetLogEntryFormForUpdateRequest)

UpdateLogEntryReply = _reflection.GeneratedProtocolMessageType('UpdateLogEntryReply', (_message.Message,), dict(
  DESCRIPTOR = _UPDATELOGENTRYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UpdateLogEntryReply)
  ))
_sym_db.RegisterMessage(UpdateLogEntryReply)

UpdateLogEntryRequest = _reflection.GeneratedProtocolMessageType('UpdateLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATELOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UpdateLogEntryRequest)
  ))
_sym_db.RegisterMessage(UpdateLogEntryRequest)

CanDeleteLogEntriesReply = _reflection.GeneratedProtocolMessageType('CanDeleteLogEntriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETELOGENTRIESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanDeleteLogEntriesReply)
  ))
_sym_db.RegisterMessage(CanDeleteLogEntriesReply)

CanDeleteLogEntriesRequest = _reflection.GeneratedProtocolMessageType('CanDeleteLogEntriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETELOGENTRIESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanDeleteLogEntriesRequest)
  ))
_sym_db.RegisterMessage(CanDeleteLogEntriesRequest)

DeleteLogEntryReply = _reflection.GeneratedProtocolMessageType('DeleteLogEntryReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETELOGENTRYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.DeleteLogEntryReply)
  ))
_sym_db.RegisterMessage(DeleteLogEntryReply)

DeleteLogEntryRequest = _reflection.GeneratedProtocolMessageType('DeleteLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETELOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.DeleteLogEntryRequest)
  ))
_sym_db.RegisterMessage(DeleteLogEntryRequest)

CanManageLogEntryAliasesReply = _reflection.GeneratedProtocolMessageType('CanManageLogEntryAliasesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGELOGENTRYALIASESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanManageLogEntryAliasesReply)
  ))
_sym_db.RegisterMessage(CanManageLogEntryAliasesReply)

CanManageLogEntryAliasesRequest = _reflection.GeneratedProtocolMessageType('CanManageLogEntryAliasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGELOGENTRYALIASESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanManageLogEntryAliasesRequest)
  ))
_sym_db.RegisterMessage(CanManageLogEntryAliasesRequest)

AliasLogEntryReply = _reflection.GeneratedProtocolMessageType('AliasLogEntryReply', (_message.Message,), dict(
  DESCRIPTOR = _ALIASLOGENTRYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AliasLogEntryReply)
  ))
_sym_db.RegisterMessage(AliasLogEntryReply)

AliasLogEntryRequest = _reflection.GeneratedProtocolMessageType('AliasLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALIASLOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AliasLogEntryRequest)
  ))
_sym_db.RegisterMessage(AliasLogEntryRequest)

UseComparativeLogViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeLogViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVELOGVIEWREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseComparativeLogViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeLogViewReply)

UseComparativeLogViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeLogViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVELOGVIEWREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UseComparativeLogViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeLogViewRequest)

UsePlenaryLogViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryLogViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYLOGVIEWREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UsePlenaryLogViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryLogViewReply)

UsePlenaryLogViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryLogViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYLOGVIEWREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UsePlenaryLogViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryLogViewRequest)

CanLookupLogEntryLogMappingsReply = _reflection.GeneratedProtocolMessageType('CanLookupLogEntryLogMappingsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPLOGENTRYLOGMAPPINGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanLookupLogEntryLogMappingsReply)
  ))
_sym_db.RegisterMessage(CanLookupLogEntryLogMappingsReply)

CanLookupLogEntryLogMappingsRequest = _reflection.GeneratedProtocolMessageType('CanLookupLogEntryLogMappingsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPLOGENTRYLOGMAPPINGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanLookupLogEntryLogMappingsRequest)
  ))
_sym_db.RegisterMessage(CanLookupLogEntryLogMappingsRequest)

GetLogEntryIdsByLogRequest = _reflection.GeneratedProtocolMessageType('GetLogEntryIdsByLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRYIDSBYLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntryIdsByLogRequest)
  ))
_sym_db.RegisterMessage(GetLogEntryIdsByLogRequest)

GetLogEntriesByLogRequest = _reflection.GeneratedProtocolMessageType('GetLogEntriesByLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIESBYLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntriesByLogRequest)
  ))
_sym_db.RegisterMessage(GetLogEntriesByLogRequest)

GetLogEntrieByLogRequest = _reflection.GeneratedProtocolMessageType('GetLogEntrieByLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGENTRIEBYLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogEntrieByLogRequest)
  ))
_sym_db.RegisterMessage(GetLogEntrieByLogRequest)

GetLogIdsByLogEntryRequest = _reflection.GeneratedProtocolMessageType('GetLogIdsByLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGIDSBYLOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogIdsByLogEntryRequest)
  ))
_sym_db.RegisterMessage(GetLogIdsByLogEntryRequest)

GetLogByLogEntryRequest = _reflection.GeneratedProtocolMessageType('GetLogByLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGBYLOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogByLogEntryRequest)
  ))
_sym_db.RegisterMessage(GetLogByLogEntryRequest)

CanAssignLogEntriesReply = _reflection.GeneratedProtocolMessageType('CanAssignLogEntriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNLOGENTRIESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanAssignLogEntriesReply)
  ))
_sym_db.RegisterMessage(CanAssignLogEntriesReply)

CanAssignLogEntriesRequest = _reflection.GeneratedProtocolMessageType('CanAssignLogEntriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNLOGENTRIESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanAssignLogEntriesRequest)
  ))
_sym_db.RegisterMessage(CanAssignLogEntriesRequest)

CanAssignLogEntriesToLogReply = _reflection.GeneratedProtocolMessageType('CanAssignLogEntriesToLogReply', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNLOGENTRIESTOLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanAssignLogEntriesToLogReply)
  ))
_sym_db.RegisterMessage(CanAssignLogEntriesToLogReply)

CanAssignLogEntriesToLogRequest = _reflection.GeneratedProtocolMessageType('CanAssignLogEntriesToLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNLOGENTRIESTOLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanAssignLogEntriesToLogRequest)
  ))
_sym_db.RegisterMessage(CanAssignLogEntriesToLogRequest)

GetAssignableLogIdsRequest = _reflection.GeneratedProtocolMessageType('GetAssignableLogIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSIGNABLELOGIDSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetAssignableLogIdsRequest)
  ))
_sym_db.RegisterMessage(GetAssignableLogIdsRequest)

GetAssignableLogIdsForLogEntryRequest = _reflection.GeneratedProtocolMessageType('GetAssignableLogIdsForLogEntryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSIGNABLELOGIDSFORLOGENTRYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetAssignableLogIdsForLogEntryRequest)
  ))
_sym_db.RegisterMessage(GetAssignableLogIdsForLogEntryRequest)

AssignLogEntryToLogReply = _reflection.GeneratedProtocolMessageType('AssignLogEntryToLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ASSIGNLOGENTRYTOLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AssignLogEntryToLogReply)
  ))
_sym_db.RegisterMessage(AssignLogEntryToLogReply)

AssignLogEntryToLogRequest = _reflection.GeneratedProtocolMessageType('AssignLogEntryToLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ASSIGNLOGENTRYTOLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AssignLogEntryToLogRequest)
  ))
_sym_db.RegisterMessage(AssignLogEntryToLogRequest)

UnassignLogEntryFromLogReply = _reflection.GeneratedProtocolMessageType('UnassignLogEntryFromLogReply', (_message.Message,), dict(
  DESCRIPTOR = _UNASSIGNLOGENTRYFROMLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UnassignLogEntryFromLogReply)
  ))
_sym_db.RegisterMessage(UnassignLogEntryFromLogReply)

UnassignLogEntryFromLogRequest = _reflection.GeneratedProtocolMessageType('UnassignLogEntryFromLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _UNASSIGNLOGENTRYFROMLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UnassignLogEntryFromLogRequest)
  ))
_sym_db.RegisterMessage(UnassignLogEntryFromLogRequest)

ReassignLogEntryToLogReply = _reflection.GeneratedProtocolMessageType('ReassignLogEntryToLogReply', (_message.Message,), dict(
  DESCRIPTOR = _REASSIGNLOGENTRYTOLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.ReassignLogEntryToLogReply)
  ))
_sym_db.RegisterMessage(ReassignLogEntryToLogReply)

ReassignLogEntryToLogRequest = _reflection.GeneratedProtocolMessageType('ReassignLogEntryToLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _REASSIGNLOGENTRYTOLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.ReassignLogEntryToLogRequest)
  ))
_sym_db.RegisterMessage(ReassignLogEntryToLogRequest)

CanLookupLogsReply = _reflection.GeneratedProtocolMessageType('CanLookupLogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPLOGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanLookupLogsReply)
  ))
_sym_db.RegisterMessage(CanLookupLogsReply)

CanLookupLogsRequest = _reflection.GeneratedProtocolMessageType('CanLookupLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanLookupLogsRequest)
  ))
_sym_db.RegisterMessage(CanLookupLogsRequest)

GetLogsByIdsRequest = _reflection.GeneratedProtocolMessageType('GetLogsByIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGSBYIDSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogsByIdsRequest)
  ))
_sym_db.RegisterMessage(GetLogsByIdsRequest)

GetLogsByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetLogsByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGSBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogsByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetLogsByGenusTypeRequest)

GetLogsByParentGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetLogsByParentGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGSBYPARENTGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogsByParentGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetLogsByParentGenusTypeRequest)

GetLogsByRecordTypeRequest = _reflection.GeneratedProtocolMessageType('GetLogsByRecordTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGSBYRECORDTYPEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogsByRecordTypeRequest)
  ))
_sym_db.RegisterMessage(GetLogsByRecordTypeRequest)

GetLogsByProviderRequest = _reflection.GeneratedProtocolMessageType('GetLogsByProviderRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGSBYPROVIDERREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogsByProviderRequest)
  ))
_sym_db.RegisterMessage(GetLogsByProviderRequest)

GetLogsRequest = _reflection.GeneratedProtocolMessageType('GetLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogsRequest)
  ))
_sym_db.RegisterMessage(GetLogsRequest)

CanCreateLogsReply = _reflection.GeneratedProtocolMessageType('CanCreateLogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogsReply)
  ))
_sym_db.RegisterMessage(CanCreateLogsReply)

CanCreateLogsRequest = _reflection.GeneratedProtocolMessageType('CanCreateLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogsRequest)
  ))
_sym_db.RegisterMessage(CanCreateLogsRequest)

CanCreateLogWithRecordTypesReply = _reflection.GeneratedProtocolMessageType('CanCreateLogWithRecordTypesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGWITHRECORDTYPESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogWithRecordTypesReply)
  ))
_sym_db.RegisterMessage(CanCreateLogWithRecordTypesReply)

CanCreateLogWithRecordTypesRequest = _reflection.GeneratedProtocolMessageType('CanCreateLogWithRecordTypesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATELOGWITHRECORDTYPESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanCreateLogWithRecordTypesRequest)
  ))
_sym_db.RegisterMessage(CanCreateLogWithRecordTypesRequest)

GetLogFormForCreateReply = _reflection.GeneratedProtocolMessageType('GetLogFormForCreateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGFORMFORCREATEREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogFormForCreateReply)
  ))
_sym_db.RegisterMessage(GetLogFormForCreateReply)

GetLogFormForCreateRequest = _reflection.GeneratedProtocolMessageType('GetLogFormForCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGFORMFORCREATEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogFormForCreateRequest)
  ))
_sym_db.RegisterMessage(GetLogFormForCreateRequest)

CreateLogReply = _reflection.GeneratedProtocolMessageType('CreateLogReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATELOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CreateLogReply)
  ))
_sym_db.RegisterMessage(CreateLogReply)

CreateLogRequest = _reflection.GeneratedProtocolMessageType('CreateLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATELOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CreateLogRequest)
  ))
_sym_db.RegisterMessage(CreateLogRequest)

CanUpdateLogsReply = _reflection.GeneratedProtocolMessageType('CanUpdateLogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATELOGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanUpdateLogsReply)
  ))
_sym_db.RegisterMessage(CanUpdateLogsReply)

CanUpdateLogsRequest = _reflection.GeneratedProtocolMessageType('CanUpdateLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATELOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanUpdateLogsRequest)
  ))
_sym_db.RegisterMessage(CanUpdateLogsRequest)

GetLogFormForUpdateReply = _reflection.GeneratedProtocolMessageType('GetLogFormForUpdateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGFORMFORUPDATEREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogFormForUpdateReply)
  ))
_sym_db.RegisterMessage(GetLogFormForUpdateReply)

GetLogFormForUpdateRequest = _reflection.GeneratedProtocolMessageType('GetLogFormForUpdateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGFORMFORUPDATEREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogFormForUpdateRequest)
  ))
_sym_db.RegisterMessage(GetLogFormForUpdateRequest)

UpdateLogReply = _reflection.GeneratedProtocolMessageType('UpdateLogReply', (_message.Message,), dict(
  DESCRIPTOR = _UPDATELOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UpdateLogReply)
  ))
_sym_db.RegisterMessage(UpdateLogReply)

UpdateLogRequest = _reflection.GeneratedProtocolMessageType('UpdateLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATELOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.UpdateLogRequest)
  ))
_sym_db.RegisterMessage(UpdateLogRequest)

CanDeleteLogsReply = _reflection.GeneratedProtocolMessageType('CanDeleteLogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETELOGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanDeleteLogsReply)
  ))
_sym_db.RegisterMessage(CanDeleteLogsReply)

CanDeleteLogsRequest = _reflection.GeneratedProtocolMessageType('CanDeleteLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETELOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanDeleteLogsRequest)
  ))
_sym_db.RegisterMessage(CanDeleteLogsRequest)

DeleteLogReply = _reflection.GeneratedProtocolMessageType('DeleteLogReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETELOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.DeleteLogReply)
  ))
_sym_db.RegisterMessage(DeleteLogReply)

DeleteLogRequest = _reflection.GeneratedProtocolMessageType('DeleteLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETELOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.DeleteLogRequest)
  ))
_sym_db.RegisterMessage(DeleteLogRequest)

CanManageLogAliasesReply = _reflection.GeneratedProtocolMessageType('CanManageLogAliasesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGELOGALIASESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanManageLogAliasesReply)
  ))
_sym_db.RegisterMessage(CanManageLogAliasesReply)

CanManageLogAliasesRequest = _reflection.GeneratedProtocolMessageType('CanManageLogAliasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGELOGALIASESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanManageLogAliasesRequest)
  ))
_sym_db.RegisterMessage(CanManageLogAliasesRequest)

AliasLogReply = _reflection.GeneratedProtocolMessageType('AliasLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ALIASLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AliasLogReply)
  ))
_sym_db.RegisterMessage(AliasLogReply)

AliasLogRequest = _reflection.GeneratedProtocolMessageType('AliasLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALIASLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AliasLogRequest)
  ))
_sym_db.RegisterMessage(AliasLogRequest)

GetLogHierarchyIdReply = _reflection.GeneratedProtocolMessageType('GetLogHierarchyIdReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGHIERARCHYIDREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogHierarchyIdReply)
  ))
_sym_db.RegisterMessage(GetLogHierarchyIdReply)

GetLogHierarchyIdRequest = _reflection.GeneratedProtocolMessageType('GetLogHierarchyIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGHIERARCHYIDREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogHierarchyIdRequest)
  ))
_sym_db.RegisterMessage(GetLogHierarchyIdRequest)

GetLogHierarchyReply = _reflection.GeneratedProtocolMessageType('GetLogHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGHIERARCHYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogHierarchyReply)
  ))
_sym_db.RegisterMessage(GetLogHierarchyReply)

GetLogHierarchyRequest = _reflection.GeneratedProtocolMessageType('GetLogHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogHierarchyRequest)
  ))
_sym_db.RegisterMessage(GetLogHierarchyRequest)

CanAccessLogHierarchyReply = _reflection.GeneratedProtocolMessageType('CanAccessLogHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSLOGHIERARCHYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanAccessLogHierarchyReply)
  ))
_sym_db.RegisterMessage(CanAccessLogHierarchyReply)

CanAccessLogHierarchyRequest = _reflection.GeneratedProtocolMessageType('CanAccessLogHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSLOGHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanAccessLogHierarchyRequest)
  ))
_sym_db.RegisterMessage(CanAccessLogHierarchyRequest)

GetRootLogIdsRequest = _reflection.GeneratedProtocolMessageType('GetRootLogIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETROOTLOGIDSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetRootLogIdsRequest)
  ))
_sym_db.RegisterMessage(GetRootLogIdsRequest)

GetRootLogsRequest = _reflection.GeneratedProtocolMessageType('GetRootLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETROOTLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetRootLogsRequest)
  ))
_sym_db.RegisterMessage(GetRootLogsRequest)

HasParentLogsReply = _reflection.GeneratedProtocolMessageType('HasParentLogsReply', (_message.Message,), dict(
  DESCRIPTOR = _HASPARENTLOGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.HasParentLogsReply)
  ))
_sym_db.RegisterMessage(HasParentLogsReply)

HasParentLogsRequest = _reflection.GeneratedProtocolMessageType('HasParentLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _HASPARENTLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.HasParentLogsRequest)
  ))
_sym_db.RegisterMessage(HasParentLogsRequest)

IsParentOfLogReply = _reflection.GeneratedProtocolMessageType('IsParentOfLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISPARENTOFLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsParentOfLogReply)
  ))
_sym_db.RegisterMessage(IsParentOfLogReply)

IsParentOfLogRequest = _reflection.GeneratedProtocolMessageType('IsParentOfLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISPARENTOFLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsParentOfLogRequest)
  ))
_sym_db.RegisterMessage(IsParentOfLogRequest)

GetParentLogIdsRequest = _reflection.GeneratedProtocolMessageType('GetParentLogIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPARENTLOGIDSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetParentLogIdsRequest)
  ))
_sym_db.RegisterMessage(GetParentLogIdsRequest)

GetParentLogsRequest = _reflection.GeneratedProtocolMessageType('GetParentLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPARENTLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetParentLogsRequest)
  ))
_sym_db.RegisterMessage(GetParentLogsRequest)

IsAncestorOfLogReply = _reflection.GeneratedProtocolMessageType('IsAncestorOfLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISANCESTOROFLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsAncestorOfLogReply)
  ))
_sym_db.RegisterMessage(IsAncestorOfLogReply)

IsAncestorOfLogRequest = _reflection.GeneratedProtocolMessageType('IsAncestorOfLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISANCESTOROFLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsAncestorOfLogRequest)
  ))
_sym_db.RegisterMessage(IsAncestorOfLogRequest)

HasChildLogsReply = _reflection.GeneratedProtocolMessageType('HasChildLogsReply', (_message.Message,), dict(
  DESCRIPTOR = _HASCHILDLOGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.HasChildLogsReply)
  ))
_sym_db.RegisterMessage(HasChildLogsReply)

HasChildLogsRequest = _reflection.GeneratedProtocolMessageType('HasChildLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _HASCHILDLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.HasChildLogsRequest)
  ))
_sym_db.RegisterMessage(HasChildLogsRequest)

IsChildOfLogReply = _reflection.GeneratedProtocolMessageType('IsChildOfLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISCHILDOFLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsChildOfLogReply)
  ))
_sym_db.RegisterMessage(IsChildOfLogReply)

IsChildOfLogRequest = _reflection.GeneratedProtocolMessageType('IsChildOfLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISCHILDOFLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsChildOfLogRequest)
  ))
_sym_db.RegisterMessage(IsChildOfLogRequest)

GetChildLogIdsRequest = _reflection.GeneratedProtocolMessageType('GetChildLogIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCHILDLOGIDSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetChildLogIdsRequest)
  ))
_sym_db.RegisterMessage(GetChildLogIdsRequest)

GetChildLogsRequest = _reflection.GeneratedProtocolMessageType('GetChildLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCHILDLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetChildLogsRequest)
  ))
_sym_db.RegisterMessage(GetChildLogsRequest)

IsDescendantOfLogReply = _reflection.GeneratedProtocolMessageType('IsDescendantOfLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISDESCENDANTOFLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsDescendantOfLogReply)
  ))
_sym_db.RegisterMessage(IsDescendantOfLogReply)

IsDescendantOfLogRequest = _reflection.GeneratedProtocolMessageType('IsDescendantOfLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISDESCENDANTOFLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.IsDescendantOfLogRequest)
  ))
_sym_db.RegisterMessage(IsDescendantOfLogRequest)

GetLogNodeIdsReply = _reflection.GeneratedProtocolMessageType('GetLogNodeIdsReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGNODEIDSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogNodeIdsReply)
  ))
_sym_db.RegisterMessage(GetLogNodeIdsReply)

GetLogNodeIdsRequest = _reflection.GeneratedProtocolMessageType('GetLogNodeIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGNODEIDSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogNodeIdsRequest)
  ))
_sym_db.RegisterMessage(GetLogNodeIdsRequest)

GetLogNodesReply = _reflection.GeneratedProtocolMessageType('GetLogNodesReply', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGNODESREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogNodesReply)
  ))
_sym_db.RegisterMessage(GetLogNodesReply)

GetLogNodesRequest = _reflection.GeneratedProtocolMessageType('GetLogNodesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETLOGNODESREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.GetLogNodesRequest)
  ))
_sym_db.RegisterMessage(GetLogNodesRequest)

CanModifyLogHierarchyReply = _reflection.GeneratedProtocolMessageType('CanModifyLogHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMODIFYLOGHIERARCHYREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanModifyLogHierarchyReply)
  ))
_sym_db.RegisterMessage(CanModifyLogHierarchyReply)

CanModifyLogHierarchyRequest = _reflection.GeneratedProtocolMessageType('CanModifyLogHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMODIFYLOGHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.CanModifyLogHierarchyRequest)
  ))
_sym_db.RegisterMessage(CanModifyLogHierarchyRequest)

AddRootLogReply = _reflection.GeneratedProtocolMessageType('AddRootLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDROOTLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AddRootLogReply)
  ))
_sym_db.RegisterMessage(AddRootLogReply)

AddRootLogRequest = _reflection.GeneratedProtocolMessageType('AddRootLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDROOTLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AddRootLogRequest)
  ))
_sym_db.RegisterMessage(AddRootLogRequest)

RemoveRootLogReply = _reflection.GeneratedProtocolMessageType('RemoveRootLogReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEROOTLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.RemoveRootLogReply)
  ))
_sym_db.RegisterMessage(RemoveRootLogReply)

RemoveRootLogRequest = _reflection.GeneratedProtocolMessageType('RemoveRootLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEROOTLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.RemoveRootLogRequest)
  ))
_sym_db.RegisterMessage(RemoveRootLogRequest)

AddChildLogReply = _reflection.GeneratedProtocolMessageType('AddChildLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDCHILDLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AddChildLogReply)
  ))
_sym_db.RegisterMessage(AddChildLogReply)

AddChildLogRequest = _reflection.GeneratedProtocolMessageType('AddChildLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDCHILDLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.AddChildLogRequest)
  ))
_sym_db.RegisterMessage(AddChildLogRequest)

RemoveChildLogReply = _reflection.GeneratedProtocolMessageType('RemoveChildLogReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDLOGREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.RemoveChildLogReply)
  ))
_sym_db.RegisterMessage(RemoveChildLogReply)

RemoveChildLogRequest = _reflection.GeneratedProtocolMessageType('RemoveChildLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDLOGREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.RemoveChildLogRequest)
  ))
_sym_db.RegisterMessage(RemoveChildLogRequest)

RemoveChildLogsReply = _reflection.GeneratedProtocolMessageType('RemoveChildLogsReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDLOGSREPLY,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.RemoveChildLogsReply)
  ))
_sym_db.RegisterMessage(RemoveChildLogsReply)

RemoveChildLogsRequest = _reflection.GeneratedProtocolMessageType('RemoveChildLogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDLOGSREQUEST,
  __module__ = 'dlkit.proto.logging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.logging.RemoveChildLogsRequest)
  ))
_sym_db.RegisterMessage(RemoveChildLogsRequest)



_LOGGINGSESSION = _descriptor.ServiceDescriptor(
  name='LoggingSession',
  full_name='dlkit.proto.logging.LoggingSession',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=11945,
  serialized_end=12604,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLogId',
    full_name='dlkit.proto.logging.LoggingSession.GetLogId',
    index=0,
    containing_service=None,
    input_type=_GETLOGIDREQUEST,
    output_type=_GETLOGIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLog',
    full_name='dlkit.proto.logging.LoggingSession.GetLog',
    index=1,
    containing_service=None,
    input_type=_GETLOGREQUEST,
    output_type=_GETLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanLog',
    full_name='dlkit.proto.logging.LoggingSession.CanLog',
    index=2,
    containing_service=None,
    input_type=_CANLOGREQUEST,
    output_type=_CANLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Log',
    full_name='dlkit.proto.logging.LoggingSession.Log',
    index=3,
    containing_service=None,
    input_type=_LOGREQUEST,
    output_type=_LOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='LogAtPriority',
    full_name='dlkit.proto.logging.LoggingSession.LogAtPriority',
    index=4,
    containing_service=None,
    input_type=_LOGATPRIORITYREQUEST,
    output_type=_LOGATPRIORITYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntryForm',
    full_name='dlkit.proto.logging.LoggingSession.GetLogEntryForm',
    index=5,
    containing_service=None,
    input_type=_GETLOGENTRYFORMREQUEST,
    output_type=_GETLOGENTRYFORMREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateLogEntry',
    full_name='dlkit.proto.logging.LoggingSession.CreateLogEntry',
    index=6,
    containing_service=None,
    input_type=_CREATELOGENTRYREQUEST,
    output_type=_CREATELOGENTRYREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGGINGSESSION)

DESCRIPTOR.services_by_name['LoggingSession'] = _LOGGINGSESSION


_LOGENTRYLOOKUPSESSION = _descriptor.ServiceDescriptor(
  name='LogEntryLookupSession',
  full_name='dlkit.proto.logging.LogEntryLookupSession',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=12607,
  serialized_end=14843,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLogId',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogId',
    index=0,
    containing_service=None,
    input_type=_GETLOGIDREQUEST,
    output_type=_GETLOGIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLog',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLog',
    index=1,
    containing_service=None,
    input_type=_GETLOGREQUEST,
    output_type=_GETLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanReadLog',
    full_name='dlkit.proto.logging.LogEntryLookupSession.CanReadLog',
    index=2,
    containing_service=None,
    input_type=_CANREADLOGREQUEST,
    output_type=_CANREADLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeLogEntryView',
    full_name='dlkit.proto.logging.LogEntryLookupSession.UseComparativeLogEntryView',
    index=3,
    containing_service=None,
    input_type=_USECOMPARATIVELOGENTRYVIEWREQUEST,
    output_type=_USECOMPARATIVELOGENTRYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryLogEntryView',
    full_name='dlkit.proto.logging.LogEntryLookupSession.UsePlenaryLogEntryView',
    index=4,
    containing_service=None,
    input_type=_USEPLENARYLOGENTRYVIEWREQUEST,
    output_type=_USEPLENARYLOGENTRYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedLogView',
    full_name='dlkit.proto.logging.LogEntryLookupSession.UseFederatedLogView',
    index=5,
    containing_service=None,
    input_type=_USEFEDERATEDLOGVIEWREQUEST,
    output_type=_USEFEDERATEDLOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedLogView',
    full_name='dlkit.proto.logging.LogEntryLookupSession.UseIsolatedLogView',
    index=6,
    containing_service=None,
    input_type=_USEISOLATEDLOGVIEWREQUEST,
    output_type=_USEISOLATEDLOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntry',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntry',
    index=7,
    containing_service=None,
    input_type=_GETLOGENTRYREQUEST,
    output_type=_GETLOGENTRYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByIds',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByIds',
    index=8,
    containing_service=None,
    input_type=_GETLOGENTRIESBYIDSREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByGenusType',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByGenusType',
    index=9,
    containing_service=None,
    input_type=_GETLOGENTRIESBYGENUSTYPEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByParentGenusType',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByParentGenusType',
    index=10,
    containing_service=None,
    input_type=_GETLOGENTRIESBYPARENTGENUSTYPEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByRecordType',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByRecordType',
    index=11,
    containing_service=None,
    input_type=_GETLOGENTRIESBYRECORDTYPEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByPriorityType',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByPriorityType',
    index=12,
    containing_service=None,
    input_type=_GETLOGENTRIESBYPRIORITYTYPEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByDate',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByDate',
    index=13,
    containing_service=None,
    input_type=_GETLOGENTRIESBYDATEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByPriorityTypeAndDate',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByPriorityTypeAndDate',
    index=14,
    containing_service=None,
    input_type=_GETLOGENTRIESBYPRIORITYTYPEANDDATEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesForResource',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesForResource',
    index=15,
    containing_service=None,
    input_type=_GETLOGENTRIESFORRESOURCEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByDateForResource',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByDateForResource',
    index=16,
    containing_service=None,
    input_type=_GETLOGENTRIESBYDATEFORRESOURCEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByPriorityTypeAndDateForResource',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntriesByPriorityTypeAndDateForResource',
    index=17,
    containing_service=None,
    input_type=_GETLOGENTRIESBYPRIORITYTYPEANDDATEFORRESOURCEREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntries',
    full_name='dlkit.proto.logging.LogEntryLookupSession.GetLogEntries',
    index=18,
    containing_service=None,
    input_type=_GETLOGENTRIESREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGENTRYLOOKUPSESSION)

DESCRIPTOR.services_by_name['LogEntryLookupSession'] = _LOGENTRYLOOKUPSESSION


_LOGENTRYQUERYSESSION = _descriptor.ServiceDescriptor(
  name='LogEntryQuerySession',
  full_name='dlkit.proto.logging.LogEntryQuerySession',
  file=DESCRIPTOR,
  index=2,
  options=None,
  serialized_start=14846,
  serialized_end=15619,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLogId',
    full_name='dlkit.proto.logging.LogEntryQuerySession.GetLogId',
    index=0,
    containing_service=None,
    input_type=_GETLOGIDREQUEST,
    output_type=_GETLOGIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLog',
    full_name='dlkit.proto.logging.LogEntryQuerySession.GetLog',
    index=1,
    containing_service=None,
    input_type=_GETLOGREQUEST,
    output_type=_GETLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanSearchLogEntries',
    full_name='dlkit.proto.logging.LogEntryQuerySession.CanSearchLogEntries',
    index=2,
    containing_service=None,
    input_type=_CANSEARCHLOGENTRIESREQUEST,
    output_type=_CANSEARCHLOGENTRIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedLogView',
    full_name='dlkit.proto.logging.LogEntryQuerySession.UseFederatedLogView',
    index=3,
    containing_service=None,
    input_type=_USEFEDERATEDLOGVIEWREQUEST,
    output_type=_USEFEDERATEDLOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedLogView',
    full_name='dlkit.proto.logging.LogEntryQuerySession.UseIsolatedLogView',
    index=4,
    containing_service=None,
    input_type=_USEISOLATEDLOGVIEWREQUEST,
    output_type=_USEISOLATEDLOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntryQuery',
    full_name='dlkit.proto.logging.LogEntryQuerySession.GetLogEntryQuery',
    index=5,
    containing_service=None,
    input_type=_GETLOGENTRYQUERYREQUEST,
    output_type=_GETLOGENTRYQUERYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByQuery',
    full_name='dlkit.proto.logging.LogEntryQuerySession.GetLogEntriesByQuery',
    index=6,
    containing_service=None,
    input_type=_GETLOGENTRIESBYQUERYREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGENTRYQUERYSESSION)

DESCRIPTOR.services_by_name['LogEntryQuerySession'] = _LOGENTRYQUERYSESSION


_LOGENTRYADMINSESSION = _descriptor.ServiceDescriptor(
  name='LogEntryAdminSession',
  full_name='dlkit.proto.logging.LogEntryAdminSession',
  file=DESCRIPTOR,
  index=3,
  options=None,
  serialized_start=15622,
  serialized_end=17170,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLogId',
    full_name='dlkit.proto.logging.LogEntryAdminSession.GetLogId',
    index=0,
    containing_service=None,
    input_type=_GETLOGIDREQUEST,
    output_type=_GETLOGIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLog',
    full_name='dlkit.proto.logging.LogEntryAdminSession.GetLog',
    index=1,
    containing_service=None,
    input_type=_GETLOGREQUEST,
    output_type=_GETLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateLogEntries',
    full_name='dlkit.proto.logging.LogEntryAdminSession.CanCreateLogEntries',
    index=2,
    containing_service=None,
    input_type=_CANCREATELOGENTRIESREQUEST,
    output_type=_CANCREATELOGENTRIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateLogEntryWithRecordTypes',
    full_name='dlkit.proto.logging.LogEntryAdminSession.CanCreateLogEntryWithRecordTypes',
    index=3,
    containing_service=None,
    input_type=_CANCREATELOGENTRYWITHRECORDTYPESREQUEST,
    output_type=_CANCREATELOGENTRYWITHRECORDTYPESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntryFormForCreate',
    full_name='dlkit.proto.logging.LogEntryAdminSession.GetLogEntryFormForCreate',
    index=4,
    containing_service=None,
    input_type=_GETLOGENTRYFORMFORCREATEREQUEST,
    output_type=_GETLOGENTRYFORMFORCREATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateLogEntry',
    full_name='dlkit.proto.logging.LogEntryAdminSession.CreateLogEntry',
    index=5,
    containing_service=None,
    input_type=_CREATELOGENTRYREQUEST,
    output_type=_CREATELOGENTRYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanUpdateLogEntries',
    full_name='dlkit.proto.logging.LogEntryAdminSession.CanUpdateLogEntries',
    index=6,
    containing_service=None,
    input_type=_CANUPDATELOGENTRIESREQUEST,
    output_type=_CANUPDATELOGENTRIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntryFormForUpdate',
    full_name='dlkit.proto.logging.LogEntryAdminSession.GetLogEntryFormForUpdate',
    index=7,
    containing_service=None,
    input_type=_GETLOGENTRYFORMFORUPDATEREQUEST,
    output_type=_GETLOGENTRYFORMFORUPDATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateLogEntry',
    full_name='dlkit.proto.logging.LogEntryAdminSession.UpdateLogEntry',
    index=8,
    containing_service=None,
    input_type=_UPDATELOGENTRYREQUEST,
    output_type=_UPDATELOGENTRYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanDeleteLogEntries',
    full_name='dlkit.proto.logging.LogEntryAdminSession.CanDeleteLogEntries',
    index=9,
    containing_service=None,
    input_type=_CANDELETELOGENTRIESREQUEST,
    output_type=_CANDELETELOGENTRIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteLogEntry',
    full_name='dlkit.proto.logging.LogEntryAdminSession.DeleteLogEntry',
    index=10,
    containing_service=None,
    input_type=_DELETELOGENTRYREQUEST,
    output_type=_DELETELOGENTRYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanManageLogEntryAliases',
    full_name='dlkit.proto.logging.LogEntryAdminSession.CanManageLogEntryAliases',
    index=11,
    containing_service=None,
    input_type=_CANMANAGELOGENTRYALIASESREQUEST,
    output_type=_CANMANAGELOGENTRYALIASESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AliasLogEntry',
    full_name='dlkit.proto.logging.LogEntryAdminSession.AliasLogEntry',
    index=12,
    containing_service=None,
    input_type=_ALIASLOGENTRYREQUEST,
    output_type=_ALIASLOGENTRYREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGENTRYADMINSESSION)

DESCRIPTOR.services_by_name['LogEntryAdminSession'] = _LOGENTRYADMINSESSION


_LOGENTRYLOGSESSION = _descriptor.ServiceDescriptor(
  name='LogEntryLogSession',
  full_name='dlkit.proto.logging.LogEntryLogSession',
  file=DESCRIPTOR,
  index=4,
  options=None,
  serialized_start=17173,
  serialized_end=18112,
  methods=[
  _descriptor.MethodDescriptor(
    name='UseComparativeLogView',
    full_name='dlkit.proto.logging.LogEntryLogSession.UseComparativeLogView',
    index=0,
    containing_service=None,
    input_type=_USECOMPARATIVELOGVIEWREQUEST,
    output_type=_USECOMPARATIVELOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryLogView',
    full_name='dlkit.proto.logging.LogEntryLogSession.UsePlenaryLogView',
    index=1,
    containing_service=None,
    input_type=_USEPLENARYLOGVIEWREQUEST,
    output_type=_USEPLENARYLOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanLookupLogEntryLogMappings',
    full_name='dlkit.proto.logging.LogEntryLogSession.CanLookupLogEntryLogMappings',
    index=2,
    containing_service=None,
    input_type=_CANLOOKUPLOGENTRYLOGMAPPINGSREQUEST,
    output_type=_CANLOOKUPLOGENTRYLOGMAPPINGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntryIdsByLog',
    full_name='dlkit.proto.logging.LogEntryLogSession.GetLogEntryIdsByLog',
    index=3,
    containing_service=None,
    input_type=_GETLOGENTRYIDSBYLOGREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntriesByLog',
    full_name='dlkit.proto.logging.LogEntryLogSession.GetLogEntriesByLog',
    index=4,
    containing_service=None,
    input_type=_GETLOGENTRIESBYLOGREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogEntrieByLog',
    full_name='dlkit.proto.logging.LogEntryLogSession.GetLogEntrieByLog',
    index=5,
    containing_service=None,
    input_type=_GETLOGENTRIEBYLOGREQUEST,
    output_type=_LOGENTRY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogIdsByLogEntry',
    full_name='dlkit.proto.logging.LogEntryLogSession.GetLogIdsByLogEntry',
    index=6,
    containing_service=None,
    input_type=_GETLOGIDSBYLOGENTRYREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogByLogEntry',
    full_name='dlkit.proto.logging.LogEntryLogSession.GetLogByLogEntry',
    index=7,
    containing_service=None,
    input_type=_GETLOGBYLOGENTRYREQUEST,
    output_type=_LOG,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGENTRYLOGSESSION)

DESCRIPTOR.services_by_name['LogEntryLogSession'] = _LOGENTRYLOGSESSION


_LOGENTRYLOGASSIGNMENTSESSION = _descriptor.ServiceDescriptor(
  name='LogEntryLogAssignmentSession',
  full_name='dlkit.proto.logging.LogEntryLogAssignmentSession',
  file=DESCRIPTOR,
  index=5,
  options=None,
  serialized_start=18115,
  serialized_end=19032,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanAssignLogEntries',
    full_name='dlkit.proto.logging.LogEntryLogAssignmentSession.CanAssignLogEntries',
    index=0,
    containing_service=None,
    input_type=_CANASSIGNLOGENTRIESREQUEST,
    output_type=_CANASSIGNLOGENTRIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanAssignLogEntriesToLog',
    full_name='dlkit.proto.logging.LogEntryLogAssignmentSession.CanAssignLogEntriesToLog',
    index=1,
    containing_service=None,
    input_type=_CANASSIGNLOGENTRIESTOLOGREQUEST,
    output_type=_CANASSIGNLOGENTRIESTOLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssignableLogIds',
    full_name='dlkit.proto.logging.LogEntryLogAssignmentSession.GetAssignableLogIds',
    index=2,
    containing_service=None,
    input_type=_GETASSIGNABLELOGIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssignableLogIdsForLogEntry',
    full_name='dlkit.proto.logging.LogEntryLogAssignmentSession.GetAssignableLogIdsForLogEntry',
    index=3,
    containing_service=None,
    input_type=_GETASSIGNABLELOGIDSFORLOGENTRYREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AssignLogEntryToLog',
    full_name='dlkit.proto.logging.LogEntryLogAssignmentSession.AssignLogEntryToLog',
    index=4,
    containing_service=None,
    input_type=_ASSIGNLOGENTRYTOLOGREQUEST,
    output_type=_ASSIGNLOGENTRYTOLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UnassignLogEntryFromLog',
    full_name='dlkit.proto.logging.LogEntryLogAssignmentSession.UnassignLogEntryFromLog',
    index=5,
    containing_service=None,
    input_type=_UNASSIGNLOGENTRYFROMLOGREQUEST,
    output_type=_UNASSIGNLOGENTRYFROMLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ReassignLogEntryToLog',
    full_name='dlkit.proto.logging.LogEntryLogAssignmentSession.ReassignLogEntryToLog',
    index=6,
    containing_service=None,
    input_type=_REASSIGNLOGENTRYTOLOGREQUEST,
    output_type=_REASSIGNLOGENTRYTOLOGREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGENTRYLOGASSIGNMENTSESSION)

DESCRIPTOR.services_by_name['LogEntryLogAssignmentSession'] = _LOGENTRYLOGASSIGNMENTSESSION


_LOGLOOKUPSESSION = _descriptor.ServiceDescriptor(
  name='LogLookupSession',
  full_name='dlkit.proto.logging.LogLookupSession',
  file=DESCRIPTOR,
  index=6,
  options=None,
  serialized_start=19035,
  serialized_end=20058,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanLookupLogs',
    full_name='dlkit.proto.logging.LogLookupSession.CanLookupLogs',
    index=0,
    containing_service=None,
    input_type=_CANLOOKUPLOGSREQUEST,
    output_type=_CANLOOKUPLOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeLogView',
    full_name='dlkit.proto.logging.LogLookupSession.UseComparativeLogView',
    index=1,
    containing_service=None,
    input_type=_USECOMPARATIVELOGVIEWREQUEST,
    output_type=_USECOMPARATIVELOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryLogView',
    full_name='dlkit.proto.logging.LogLookupSession.UsePlenaryLogView',
    index=2,
    containing_service=None,
    input_type=_USEPLENARYLOGVIEWREQUEST,
    output_type=_USEPLENARYLOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLog',
    full_name='dlkit.proto.logging.LogLookupSession.GetLog',
    index=3,
    containing_service=None,
    input_type=_GETLOGREQUEST,
    output_type=_GETLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogsByIds',
    full_name='dlkit.proto.logging.LogLookupSession.GetLogsByIds',
    index=4,
    containing_service=None,
    input_type=_GETLOGSBYIDSREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogsByGenusType',
    full_name='dlkit.proto.logging.LogLookupSession.GetLogsByGenusType',
    index=5,
    containing_service=None,
    input_type=_GETLOGSBYGENUSTYPEREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogsByParentGenusType',
    full_name='dlkit.proto.logging.LogLookupSession.GetLogsByParentGenusType',
    index=6,
    containing_service=None,
    input_type=_GETLOGSBYPARENTGENUSTYPEREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogsByRecordType',
    full_name='dlkit.proto.logging.LogLookupSession.GetLogsByRecordType',
    index=7,
    containing_service=None,
    input_type=_GETLOGSBYRECORDTYPEREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogsByProvider',
    full_name='dlkit.proto.logging.LogLookupSession.GetLogsByProvider',
    index=8,
    containing_service=None,
    input_type=_GETLOGSBYPROVIDERREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogs',
    full_name='dlkit.proto.logging.LogLookupSession.GetLogs',
    index=9,
    containing_service=None,
    input_type=_GETLOGSREQUEST,
    output_type=_LOG,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGLOOKUPSESSION)

DESCRIPTOR.services_by_name['LogLookupSession'] = _LOGLOOKUPSESSION


_LOGADMINSESSION = _descriptor.ServiceDescriptor(
  name='LogAdminSession',
  full_name='dlkit.proto.logging.LogAdminSession',
  file=DESCRIPTOR,
  index=7,
  options=None,
  serialized_start=20061,
  serialized_end=21257,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanCreateLogs',
    full_name='dlkit.proto.logging.LogAdminSession.CanCreateLogs',
    index=0,
    containing_service=None,
    input_type=_CANCREATELOGSREQUEST,
    output_type=_CANCREATELOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateLogWithRecordTypes',
    full_name='dlkit.proto.logging.LogAdminSession.CanCreateLogWithRecordTypes',
    index=1,
    containing_service=None,
    input_type=_CANCREATELOGWITHRECORDTYPESREQUEST,
    output_type=_CANCREATELOGWITHRECORDTYPESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogFormForCreate',
    full_name='dlkit.proto.logging.LogAdminSession.GetLogFormForCreate',
    index=2,
    containing_service=None,
    input_type=_GETLOGFORMFORCREATEREQUEST,
    output_type=_GETLOGFORMFORCREATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateLog',
    full_name='dlkit.proto.logging.LogAdminSession.CreateLog',
    index=3,
    containing_service=None,
    input_type=_CREATELOGREQUEST,
    output_type=_CREATELOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanUpdateLogs',
    full_name='dlkit.proto.logging.LogAdminSession.CanUpdateLogs',
    index=4,
    containing_service=None,
    input_type=_CANUPDATELOGSREQUEST,
    output_type=_CANUPDATELOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogFormForUpdate',
    full_name='dlkit.proto.logging.LogAdminSession.GetLogFormForUpdate',
    index=5,
    containing_service=None,
    input_type=_GETLOGFORMFORUPDATEREQUEST,
    output_type=_GETLOGFORMFORUPDATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateLog',
    full_name='dlkit.proto.logging.LogAdminSession.UpdateLog',
    index=6,
    containing_service=None,
    input_type=_UPDATELOGREQUEST,
    output_type=_UPDATELOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanDeleteLogs',
    full_name='dlkit.proto.logging.LogAdminSession.CanDeleteLogs',
    index=7,
    containing_service=None,
    input_type=_CANDELETELOGSREQUEST,
    output_type=_CANDELETELOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteLog',
    full_name='dlkit.proto.logging.LogAdminSession.DeleteLog',
    index=8,
    containing_service=None,
    input_type=_DELETELOGREQUEST,
    output_type=_DELETELOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanManageLogAliases',
    full_name='dlkit.proto.logging.LogAdminSession.CanManageLogAliases',
    index=9,
    containing_service=None,
    input_type=_CANMANAGELOGALIASESREQUEST,
    output_type=_CANMANAGELOGALIASESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AliasLog',
    full_name='dlkit.proto.logging.LogAdminSession.AliasLog',
    index=10,
    containing_service=None,
    input_type=_ALIASLOGREQUEST,
    output_type=_ALIASLOGREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGADMINSESSION)

DESCRIPTOR.services_by_name['LogAdminSession'] = _LOGADMINSESSION


_LOGHIERARCHYSESSION = _descriptor.ServiceDescriptor(
  name='LogHierarchySession',
  full_name='dlkit.proto.logging.LogHierarchySession',
  file=DESCRIPTOR,
  index=8,
  options=None,
  serialized_start=21260,
  serialized_end=23274,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLogHierarchyId',
    full_name='dlkit.proto.logging.LogHierarchySession.GetLogHierarchyId',
    index=0,
    containing_service=None,
    input_type=_GETLOGHIERARCHYIDREQUEST,
    output_type=_GETLOGHIERARCHYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogHierarchy',
    full_name='dlkit.proto.logging.LogHierarchySession.GetLogHierarchy',
    index=1,
    containing_service=None,
    input_type=_GETLOGHIERARCHYREQUEST,
    output_type=_GETLOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanAccessLogHierarchy',
    full_name='dlkit.proto.logging.LogHierarchySession.CanAccessLogHierarchy',
    index=2,
    containing_service=None,
    input_type=_CANACCESSLOGHIERARCHYREQUEST,
    output_type=_CANACCESSLOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeLogView',
    full_name='dlkit.proto.logging.LogHierarchySession.UseComparativeLogView',
    index=3,
    containing_service=None,
    input_type=_USECOMPARATIVELOGVIEWREQUEST,
    output_type=_USECOMPARATIVELOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryLogView',
    full_name='dlkit.proto.logging.LogHierarchySession.UsePlenaryLogView',
    index=4,
    containing_service=None,
    input_type=_USEPLENARYLOGVIEWREQUEST,
    output_type=_USEPLENARYLOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRootLogIds',
    full_name='dlkit.proto.logging.LogHierarchySession.GetRootLogIds',
    index=5,
    containing_service=None,
    input_type=_GETROOTLOGIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRootLogs',
    full_name='dlkit.proto.logging.LogHierarchySession.GetRootLogs',
    index=6,
    containing_service=None,
    input_type=_GETROOTLOGSREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HasParentLogs',
    full_name='dlkit.proto.logging.LogHierarchySession.HasParentLogs',
    index=7,
    containing_service=None,
    input_type=_HASPARENTLOGSREQUEST,
    output_type=_HASPARENTLOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsParentOfLog',
    full_name='dlkit.proto.logging.LogHierarchySession.IsParentOfLog',
    index=8,
    containing_service=None,
    input_type=_ISPARENTOFLOGREQUEST,
    output_type=_ISPARENTOFLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParentLogIds',
    full_name='dlkit.proto.logging.LogHierarchySession.GetParentLogIds',
    index=9,
    containing_service=None,
    input_type=_GETPARENTLOGIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParentLogs',
    full_name='dlkit.proto.logging.LogHierarchySession.GetParentLogs',
    index=10,
    containing_service=None,
    input_type=_GETPARENTLOGSREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsAncestorOfLog',
    full_name='dlkit.proto.logging.LogHierarchySession.IsAncestorOfLog',
    index=11,
    containing_service=None,
    input_type=_ISANCESTOROFLOGREQUEST,
    output_type=_ISANCESTOROFLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HasChildLogs',
    full_name='dlkit.proto.logging.LogHierarchySession.HasChildLogs',
    index=12,
    containing_service=None,
    input_type=_HASCHILDLOGSREQUEST,
    output_type=_HASCHILDLOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsChildOfLog',
    full_name='dlkit.proto.logging.LogHierarchySession.IsChildOfLog',
    index=13,
    containing_service=None,
    input_type=_ISCHILDOFLOGREQUEST,
    output_type=_ISCHILDOFLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetChildLogIds',
    full_name='dlkit.proto.logging.LogHierarchySession.GetChildLogIds',
    index=14,
    containing_service=None,
    input_type=_GETCHILDLOGIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetChildLogs',
    full_name='dlkit.proto.logging.LogHierarchySession.GetChildLogs',
    index=15,
    containing_service=None,
    input_type=_GETCHILDLOGSREQUEST,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsDescendantOfLog',
    full_name='dlkit.proto.logging.LogHierarchySession.IsDescendantOfLog',
    index=16,
    containing_service=None,
    input_type=_ISDESCENDANTOFLOGREQUEST,
    output_type=_ISDESCENDANTOFLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogNodeIds',
    full_name='dlkit.proto.logging.LogHierarchySession.GetLogNodeIds',
    index=17,
    containing_service=None,
    input_type=_GETLOGNODEIDSREQUEST,
    output_type=_GETLOGNODEIDSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogNodes',
    full_name='dlkit.proto.logging.LogHierarchySession.GetLogNodes',
    index=18,
    containing_service=None,
    input_type=_GETLOGNODESREQUEST,
    output_type=_GETLOGNODESREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGHIERARCHYSESSION)

DESCRIPTOR.services_by_name['LogHierarchySession'] = _LOGHIERARCHYSESSION


_LOGHIERARCHYDESIGNSESSION = _descriptor.ServiceDescriptor(
  name='LogHierarchyDesignSession',
  full_name='dlkit.proto.logging.LogHierarchyDesignSession',
  file=DESCRIPTOR,
  index=9,
  options=None,
  serialized_start=23277,
  serialized_end=24164,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLogHierarchyId',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.GetLogHierarchyId',
    index=0,
    containing_service=None,
    input_type=_GETLOGHIERARCHYIDREQUEST,
    output_type=_GETLOGHIERARCHYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetLogHierarchy',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.GetLogHierarchy',
    index=1,
    containing_service=None,
    input_type=_GETLOGHIERARCHYREQUEST,
    output_type=_GETLOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanModifyLogHierarchy',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.CanModifyLogHierarchy',
    index=2,
    containing_service=None,
    input_type=_CANMODIFYLOGHIERARCHYREQUEST,
    output_type=_CANMODIFYLOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddRootLog',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.AddRootLog',
    index=3,
    containing_service=None,
    input_type=_ADDROOTLOGREQUEST,
    output_type=_ADDROOTLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveRootLog',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.RemoveRootLog',
    index=4,
    containing_service=None,
    input_type=_REMOVEROOTLOGREQUEST,
    output_type=_REMOVEROOTLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddChildLog',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.AddChildLog',
    index=5,
    containing_service=None,
    input_type=_ADDCHILDLOGREQUEST,
    output_type=_ADDCHILDLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveChildLog',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.RemoveChildLog',
    index=6,
    containing_service=None,
    input_type=_REMOVECHILDLOGREQUEST,
    output_type=_REMOVECHILDLOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveChildLogs',
    full_name='dlkit.proto.logging.LogHierarchyDesignSession.RemoveChildLogs',
    index=7,
    containing_service=None,
    input_type=_REMOVECHILDLOGSREQUEST,
    output_type=_REMOVECHILDLOGSREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LOGHIERARCHYDESIGNSESSION)

DESCRIPTOR.services_by_name['LogHierarchyDesignSession'] = _LOGHIERARCHYDESIGNSESSION

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class LoggingSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetLogId = channel.unary_unary(
          '/dlkit.proto.logging.LoggingSession/GetLogId',
          request_serializer=GetLogIdRequest.SerializeToString,
          response_deserializer=GetLogIdReply.FromString,
          )
      self.GetLog = channel.unary_unary(
          '/dlkit.proto.logging.LoggingSession/GetLog',
          request_serializer=GetLogRequest.SerializeToString,
          response_deserializer=GetLogReply.FromString,
          )
      self.CanLog = channel.unary_unary(
          '/dlkit.proto.logging.LoggingSession/CanLog',
          request_serializer=CanLogRequest.SerializeToString,
          response_deserializer=CanLogReply.FromString,
          )
      self.Log = channel.unary_unary(
          '/dlkit.proto.logging.LoggingSession/Log',
          request_serializer=LogRequest.SerializeToString,
          response_deserializer=LogReply.FromString,
          )
      self.LogAtPriority = channel.unary_unary(
          '/dlkit.proto.logging.LoggingSession/LogAtPriority',
          request_serializer=LogAtPriorityRequest.SerializeToString,
          response_deserializer=LogAtPriorityReply.FromString,
          )
      self.GetLogEntryForm = channel.unary_unary(
          '/dlkit.proto.logging.LoggingSession/GetLogEntryForm',
          request_serializer=GetLogEntryFormRequest.SerializeToString,
          response_deserializer=GetLogEntryFormReply.FromString,
          )
      self.CreateLogEntry = channel.unary_unary(
          '/dlkit.proto.logging.LoggingSession/CreateLogEntry',
          request_serializer=CreateLogEntryRequest.SerializeToString,
          response_deserializer=CreateLogEntryReply.FromString,
          )


  class LoggingSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Log(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LogAtPriority(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntryForm(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LoggingSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetLogId': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogId,
            request_deserializer=GetLogIdRequest.FromString,
            response_serializer=GetLogIdReply.SerializeToString,
        ),
        'GetLog': grpc.unary_unary_rpc_method_handler(
            servicer.GetLog,
            request_deserializer=GetLogRequest.FromString,
            response_serializer=GetLogReply.SerializeToString,
        ),
        'CanLog': grpc.unary_unary_rpc_method_handler(
            servicer.CanLog,
            request_deserializer=CanLogRequest.FromString,
            response_serializer=CanLogReply.SerializeToString,
        ),
        'Log': grpc.unary_unary_rpc_method_handler(
            servicer.Log,
            request_deserializer=LogRequest.FromString,
            response_serializer=LogReply.SerializeToString,
        ),
        'LogAtPriority': grpc.unary_unary_rpc_method_handler(
            servicer.LogAtPriority,
            request_deserializer=LogAtPriorityRequest.FromString,
            response_serializer=LogAtPriorityReply.SerializeToString,
        ),
        'GetLogEntryForm': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogEntryForm,
            request_deserializer=GetLogEntryFormRequest.FromString,
            response_serializer=GetLogEntryFormReply.SerializeToString,
        ),
        'CreateLogEntry': grpc.unary_unary_rpc_method_handler(
            servicer.CreateLogEntry,
            request_deserializer=CreateLogEntryRequest.FromString,
            response_serializer=CreateLogEntryReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LoggingSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogEntryLookupSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetLogId = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogId',
          request_serializer=GetLogIdRequest.SerializeToString,
          response_deserializer=GetLogIdReply.FromString,
          )
      self.GetLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLog',
          request_serializer=GetLogRequest.SerializeToString,
          response_deserializer=GetLogReply.FromString,
          )
      self.CanReadLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/CanReadLog',
          request_serializer=CanReadLogRequest.SerializeToString,
          response_deserializer=CanReadLogReply.FromString,
          )
      self.UseComparativeLogEntryView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/UseComparativeLogEntryView',
          request_serializer=UseComparativeLogEntryViewRequest.SerializeToString,
          response_deserializer=UseComparativeLogEntryViewReply.FromString,
          )
      self.UsePlenaryLogEntryView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/UsePlenaryLogEntryView',
          request_serializer=UsePlenaryLogEntryViewRequest.SerializeToString,
          response_deserializer=UsePlenaryLogEntryViewReply.FromString,
          )
      self.UseFederatedLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/UseFederatedLogView',
          request_serializer=UseFederatedLogViewRequest.SerializeToString,
          response_deserializer=UseFederatedLogViewReply.FromString,
          )
      self.UseIsolatedLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/UseIsolatedLogView',
          request_serializer=UseIsolatedLogViewRequest.SerializeToString,
          response_deserializer=UseIsolatedLogViewReply.FromString,
          )
      self.GetLogEntry = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntry',
          request_serializer=GetLogEntryRequest.SerializeToString,
          response_deserializer=GetLogEntryReply.FromString,
          )
      self.GetLogEntriesByIds = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByIds',
          request_serializer=GetLogEntriesByIdsRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByGenusType = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByGenusType',
          request_serializer=GetLogEntriesByGenusTypeRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByParentGenusType = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByParentGenusType',
          request_serializer=GetLogEntriesByParentGenusTypeRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByRecordType = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByRecordType',
          request_serializer=GetLogEntriesByRecordTypeRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByPriorityType = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByPriorityType',
          request_serializer=GetLogEntriesByPriorityTypeRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByDate = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByDate',
          request_serializer=GetLogEntriesByDateRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByPriorityTypeAndDate = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByPriorityTypeAndDate',
          request_serializer=GetLogEntriesByPriorityTypeAndDateRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesForResource = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesForResource',
          request_serializer=GetLogEntriesForResourceRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByDateForResource = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByDateForResource',
          request_serializer=GetLogEntriesByDateForResourceRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntriesByPriorityTypeAndDateForResource = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntriesByPriorityTypeAndDateForResource',
          request_serializer=GetLogEntriesByPriorityTypeAndDateForResourceRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntries = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLookupSession/GetLogEntries',
          request_serializer=GetLogEntriesRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )


  class LogEntryLookupSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanReadLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeLogEntryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryLogEntryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByPriorityType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByPriorityTypeAndDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesForResource(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByDateForResource(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByPriorityTypeAndDateForResource(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogEntryLookupSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetLogId': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogId,
            request_deserializer=GetLogIdRequest.FromString,
            response_serializer=GetLogIdReply.SerializeToString,
        ),
        'GetLog': grpc.unary_unary_rpc_method_handler(
            servicer.GetLog,
            request_deserializer=GetLogRequest.FromString,
            response_serializer=GetLogReply.SerializeToString,
        ),
        'CanReadLog': grpc.unary_unary_rpc_method_handler(
            servicer.CanReadLog,
            request_deserializer=CanReadLogRequest.FromString,
            response_serializer=CanReadLogReply.SerializeToString,
        ),
        'UseComparativeLogEntryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeLogEntryView,
            request_deserializer=UseComparativeLogEntryViewRequest.FromString,
            response_serializer=UseComparativeLogEntryViewReply.SerializeToString,
        ),
        'UsePlenaryLogEntryView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryLogEntryView,
            request_deserializer=UsePlenaryLogEntryViewRequest.FromString,
            response_serializer=UsePlenaryLogEntryViewReply.SerializeToString,
        ),
        'UseFederatedLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedLogView,
            request_deserializer=UseFederatedLogViewRequest.FromString,
            response_serializer=UseFederatedLogViewReply.SerializeToString,
        ),
        'UseIsolatedLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedLogView,
            request_deserializer=UseIsolatedLogViewRequest.FromString,
            response_serializer=UseIsolatedLogViewReply.SerializeToString,
        ),
        'GetLogEntry': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogEntry,
            request_deserializer=GetLogEntryRequest.FromString,
            response_serializer=GetLogEntryReply.SerializeToString,
        ),
        'GetLogEntriesByIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByIds,
            request_deserializer=GetLogEntriesByIdsRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByGenusType,
            request_deserializer=GetLogEntriesByGenusTypeRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByParentGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByParentGenusType,
            request_deserializer=GetLogEntriesByParentGenusTypeRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByRecordType': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByRecordType,
            request_deserializer=GetLogEntriesByRecordTypeRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByPriorityType': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByPriorityType,
            request_deserializer=GetLogEntriesByPriorityTypeRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByDate': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByDate,
            request_deserializer=GetLogEntriesByDateRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByPriorityTypeAndDate': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByPriorityTypeAndDate,
            request_deserializer=GetLogEntriesByPriorityTypeAndDateRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesForResource': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesForResource,
            request_deserializer=GetLogEntriesForResourceRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByDateForResource': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByDateForResource,
            request_deserializer=GetLogEntriesByDateForResourceRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntriesByPriorityTypeAndDateForResource': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByPriorityTypeAndDateForResource,
            request_deserializer=GetLogEntriesByPriorityTypeAndDateForResourceRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntries': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntries,
            request_deserializer=GetLogEntriesRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogEntryLookupSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogEntryQuerySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetLogId = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryQuerySession/GetLogId',
          request_serializer=GetLogIdRequest.SerializeToString,
          response_deserializer=GetLogIdReply.FromString,
          )
      self.GetLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryQuerySession/GetLog',
          request_serializer=GetLogRequest.SerializeToString,
          response_deserializer=GetLogReply.FromString,
          )
      self.CanSearchLogEntries = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryQuerySession/CanSearchLogEntries',
          request_serializer=CanSearchLogEntriesRequest.SerializeToString,
          response_deserializer=CanSearchLogEntriesReply.FromString,
          )
      self.UseFederatedLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryQuerySession/UseFederatedLogView',
          request_serializer=UseFederatedLogViewRequest.SerializeToString,
          response_deserializer=UseFederatedLogViewReply.FromString,
          )
      self.UseIsolatedLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryQuerySession/UseIsolatedLogView',
          request_serializer=UseIsolatedLogViewRequest.SerializeToString,
          response_deserializer=UseIsolatedLogViewReply.FromString,
          )
      self.GetLogEntryQuery = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryQuerySession/GetLogEntryQuery',
          request_serializer=GetLogEntryQueryRequest.SerializeToString,
          response_deserializer=GetLogEntryQueryReply.FromString,
          )
      self.GetLogEntriesByQuery = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryQuerySession/GetLogEntriesByQuery',
          request_serializer=GetLogEntriesByQueryRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )


  class LogEntryQuerySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanSearchLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntryQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogEntryQuerySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetLogId': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogId,
            request_deserializer=GetLogIdRequest.FromString,
            response_serializer=GetLogIdReply.SerializeToString,
        ),
        'GetLog': grpc.unary_unary_rpc_method_handler(
            servicer.GetLog,
            request_deserializer=GetLogRequest.FromString,
            response_serializer=GetLogReply.SerializeToString,
        ),
        'CanSearchLogEntries': grpc.unary_unary_rpc_method_handler(
            servicer.CanSearchLogEntries,
            request_deserializer=CanSearchLogEntriesRequest.FromString,
            response_serializer=CanSearchLogEntriesReply.SerializeToString,
        ),
        'UseFederatedLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedLogView,
            request_deserializer=UseFederatedLogViewRequest.FromString,
            response_serializer=UseFederatedLogViewReply.SerializeToString,
        ),
        'UseIsolatedLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedLogView,
            request_deserializer=UseIsolatedLogViewRequest.FromString,
            response_serializer=UseIsolatedLogViewReply.SerializeToString,
        ),
        'GetLogEntryQuery': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogEntryQuery,
            request_deserializer=GetLogEntryQueryRequest.FromString,
            response_serializer=GetLogEntryQueryReply.SerializeToString,
        ),
        'GetLogEntriesByQuery': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByQuery,
            request_deserializer=GetLogEntriesByQueryRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogEntryQuerySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogEntryAdminSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetLogId = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/GetLogId',
          request_serializer=GetLogIdRequest.SerializeToString,
          response_deserializer=GetLogIdReply.FromString,
          )
      self.GetLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/GetLog',
          request_serializer=GetLogRequest.SerializeToString,
          response_deserializer=GetLogReply.FromString,
          )
      self.CanCreateLogEntries = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/CanCreateLogEntries',
          request_serializer=CanCreateLogEntriesRequest.SerializeToString,
          response_deserializer=CanCreateLogEntriesReply.FromString,
          )
      self.CanCreateLogEntryWithRecordTypes = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/CanCreateLogEntryWithRecordTypes',
          request_serializer=CanCreateLogEntryWithRecordTypesRequest.SerializeToString,
          response_deserializer=CanCreateLogEntryWithRecordTypesReply.FromString,
          )
      self.GetLogEntryFormForCreate = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/GetLogEntryFormForCreate',
          request_serializer=GetLogEntryFormForCreateRequest.SerializeToString,
          response_deserializer=GetLogEntryFormForCreateReply.FromString,
          )
      self.CreateLogEntry = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/CreateLogEntry',
          request_serializer=CreateLogEntryRequest.SerializeToString,
          response_deserializer=CreateLogEntryReply.FromString,
          )
      self.CanUpdateLogEntries = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/CanUpdateLogEntries',
          request_serializer=CanUpdateLogEntriesRequest.SerializeToString,
          response_deserializer=CanUpdateLogEntriesReply.FromString,
          )
      self.GetLogEntryFormForUpdate = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/GetLogEntryFormForUpdate',
          request_serializer=GetLogEntryFormForUpdateRequest.SerializeToString,
          response_deserializer=GetLogEntryFormForUpdateReply.FromString,
          )
      self.UpdateLogEntry = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/UpdateLogEntry',
          request_serializer=UpdateLogEntryRequest.SerializeToString,
          response_deserializer=UpdateLogEntryReply.FromString,
          )
      self.CanDeleteLogEntries = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/CanDeleteLogEntries',
          request_serializer=CanDeleteLogEntriesRequest.SerializeToString,
          response_deserializer=CanDeleteLogEntriesReply.FromString,
          )
      self.DeleteLogEntry = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/DeleteLogEntry',
          request_serializer=DeleteLogEntryRequest.SerializeToString,
          response_deserializer=DeleteLogEntryReply.FromString,
          )
      self.CanManageLogEntryAliases = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/CanManageLogEntryAliases',
          request_serializer=CanManageLogEntryAliasesRequest.SerializeToString,
          response_deserializer=CanManageLogEntryAliasesReply.FromString,
          )
      self.AliasLogEntry = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryAdminSession/AliasLogEntry',
          request_serializer=AliasLogEntryRequest.SerializeToString,
          response_deserializer=AliasLogEntryReply.FromString,
          )


  class LogEntryAdminSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateLogEntryWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntryFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanUpdateLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntryFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanDeleteLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanManageLogEntryAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AliasLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogEntryAdminSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetLogId': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogId,
            request_deserializer=GetLogIdRequest.FromString,
            response_serializer=GetLogIdReply.SerializeToString,
        ),
        'GetLog': grpc.unary_unary_rpc_method_handler(
            servicer.GetLog,
            request_deserializer=GetLogRequest.FromString,
            response_serializer=GetLogReply.SerializeToString,
        ),
        'CanCreateLogEntries': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateLogEntries,
            request_deserializer=CanCreateLogEntriesRequest.FromString,
            response_serializer=CanCreateLogEntriesReply.SerializeToString,
        ),
        'CanCreateLogEntryWithRecordTypes': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateLogEntryWithRecordTypes,
            request_deserializer=CanCreateLogEntryWithRecordTypesRequest.FromString,
            response_serializer=CanCreateLogEntryWithRecordTypesReply.SerializeToString,
        ),
        'GetLogEntryFormForCreate': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogEntryFormForCreate,
            request_deserializer=GetLogEntryFormForCreateRequest.FromString,
            response_serializer=GetLogEntryFormForCreateReply.SerializeToString,
        ),
        'CreateLogEntry': grpc.unary_unary_rpc_method_handler(
            servicer.CreateLogEntry,
            request_deserializer=CreateLogEntryRequest.FromString,
            response_serializer=CreateLogEntryReply.SerializeToString,
        ),
        'CanUpdateLogEntries': grpc.unary_unary_rpc_method_handler(
            servicer.CanUpdateLogEntries,
            request_deserializer=CanUpdateLogEntriesRequest.FromString,
            response_serializer=CanUpdateLogEntriesReply.SerializeToString,
        ),
        'GetLogEntryFormForUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogEntryFormForUpdate,
            request_deserializer=GetLogEntryFormForUpdateRequest.FromString,
            response_serializer=GetLogEntryFormForUpdateReply.SerializeToString,
        ),
        'UpdateLogEntry': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateLogEntry,
            request_deserializer=UpdateLogEntryRequest.FromString,
            response_serializer=UpdateLogEntryReply.SerializeToString,
        ),
        'CanDeleteLogEntries': grpc.unary_unary_rpc_method_handler(
            servicer.CanDeleteLogEntries,
            request_deserializer=CanDeleteLogEntriesRequest.FromString,
            response_serializer=CanDeleteLogEntriesReply.SerializeToString,
        ),
        'DeleteLogEntry': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteLogEntry,
            request_deserializer=DeleteLogEntryRequest.FromString,
            response_serializer=DeleteLogEntryReply.SerializeToString,
        ),
        'CanManageLogEntryAliases': grpc.unary_unary_rpc_method_handler(
            servicer.CanManageLogEntryAliases,
            request_deserializer=CanManageLogEntryAliasesRequest.FromString,
            response_serializer=CanManageLogEntryAliasesReply.SerializeToString,
        ),
        'AliasLogEntry': grpc.unary_unary_rpc_method_handler(
            servicer.AliasLogEntry,
            request_deserializer=AliasLogEntryRequest.FromString,
            response_serializer=AliasLogEntryReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogEntryAdminSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogEntryLogSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.UseComparativeLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogSession/UseComparativeLogView',
          request_serializer=UseComparativeLogViewRequest.SerializeToString,
          response_deserializer=UseComparativeLogViewReply.FromString,
          )
      self.UsePlenaryLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogSession/UsePlenaryLogView',
          request_serializer=UsePlenaryLogViewRequest.SerializeToString,
          response_deserializer=UsePlenaryLogViewReply.FromString,
          )
      self.CanLookupLogEntryLogMappings = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogSession/CanLookupLogEntryLogMappings',
          request_serializer=CanLookupLogEntryLogMappingsRequest.SerializeToString,
          response_deserializer=CanLookupLogEntryLogMappingsReply.FromString,
          )
      self.GetLogEntryIdsByLog = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLogSession/GetLogEntryIdsByLog',
          request_serializer=GetLogEntryIdsByLogRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetLogEntriesByLog = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLogSession/GetLogEntriesByLog',
          request_serializer=GetLogEntriesByLogRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogEntrieByLog = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLogSession/GetLogEntrieByLog',
          request_serializer=GetLogEntrieByLogRequest.SerializeToString,
          response_deserializer=LogEntry.FromString,
          )
      self.GetLogIdsByLogEntry = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLogSession/GetLogIdsByLogEntry',
          request_serializer=GetLogIdsByLogEntryRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetLogByLogEntry = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLogSession/GetLogByLogEntry',
          request_serializer=GetLogByLogEntryRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )


  class LogEntryLogSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def UseComparativeLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanLookupLogEntryLogMappings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntryIdsByLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntriesByLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogEntrieByLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogIdsByLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogByLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogEntryLogSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'UseComparativeLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeLogView,
            request_deserializer=UseComparativeLogViewRequest.FromString,
            response_serializer=UseComparativeLogViewReply.SerializeToString,
        ),
        'UsePlenaryLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryLogView,
            request_deserializer=UsePlenaryLogViewRequest.FromString,
            response_serializer=UsePlenaryLogViewReply.SerializeToString,
        ),
        'CanLookupLogEntryLogMappings': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupLogEntryLogMappings,
            request_deserializer=CanLookupLogEntryLogMappingsRequest.FromString,
            response_serializer=CanLookupLogEntryLogMappingsReply.SerializeToString,
        ),
        'GetLogEntryIdsByLog': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntryIdsByLog,
            request_deserializer=GetLogEntryIdsByLogRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetLogEntriesByLog': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntriesByLog,
            request_deserializer=GetLogEntriesByLogRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogEntrieByLog': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogEntrieByLog,
            request_deserializer=GetLogEntrieByLogRequest.FromString,
            response_serializer=LogEntry.SerializeToString,
        ),
        'GetLogIdsByLogEntry': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogIdsByLogEntry,
            request_deserializer=GetLogIdsByLogEntryRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetLogByLogEntry': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogByLogEntry,
            request_deserializer=GetLogByLogEntryRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogEntryLogSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogEntryLogAssignmentSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanAssignLogEntries = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogAssignmentSession/CanAssignLogEntries',
          request_serializer=CanAssignLogEntriesRequest.SerializeToString,
          response_deserializer=CanAssignLogEntriesReply.FromString,
          )
      self.CanAssignLogEntriesToLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogAssignmentSession/CanAssignLogEntriesToLog',
          request_serializer=CanAssignLogEntriesToLogRequest.SerializeToString,
          response_deserializer=CanAssignLogEntriesToLogReply.FromString,
          )
      self.GetAssignableLogIds = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLogAssignmentSession/GetAssignableLogIds',
          request_serializer=GetAssignableLogIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetAssignableLogIdsForLogEntry = channel.unary_stream(
          '/dlkit.proto.logging.LogEntryLogAssignmentSession/GetAssignableLogIdsForLogEntry',
          request_serializer=GetAssignableLogIdsForLogEntryRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.AssignLogEntryToLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogAssignmentSession/AssignLogEntryToLog',
          request_serializer=AssignLogEntryToLogRequest.SerializeToString,
          response_deserializer=AssignLogEntryToLogReply.FromString,
          )
      self.UnassignLogEntryFromLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogAssignmentSession/UnassignLogEntryFromLog',
          request_serializer=UnassignLogEntryFromLogRequest.SerializeToString,
          response_deserializer=UnassignLogEntryFromLogReply.FromString,
          )
      self.ReassignLogEntryToLog = channel.unary_unary(
          '/dlkit.proto.logging.LogEntryLogAssignmentSession/ReassignLogEntryToLog',
          request_serializer=ReassignLogEntryToLogRequest.SerializeToString,
          response_deserializer=ReassignLogEntryToLogReply.FromString,
          )


  class LogEntryLogAssignmentSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanAssignLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanAssignLogEntriesToLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssignableLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssignableLogIdsForLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AssignLogEntryToLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnassignLogEntryFromLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ReassignLogEntryToLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogEntryLogAssignmentSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanAssignLogEntries': grpc.unary_unary_rpc_method_handler(
            servicer.CanAssignLogEntries,
            request_deserializer=CanAssignLogEntriesRequest.FromString,
            response_serializer=CanAssignLogEntriesReply.SerializeToString,
        ),
        'CanAssignLogEntriesToLog': grpc.unary_unary_rpc_method_handler(
            servicer.CanAssignLogEntriesToLog,
            request_deserializer=CanAssignLogEntriesToLogRequest.FromString,
            response_serializer=CanAssignLogEntriesToLogReply.SerializeToString,
        ),
        'GetAssignableLogIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssignableLogIds,
            request_deserializer=GetAssignableLogIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetAssignableLogIdsForLogEntry': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssignableLogIdsForLogEntry,
            request_deserializer=GetAssignableLogIdsForLogEntryRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'AssignLogEntryToLog': grpc.unary_unary_rpc_method_handler(
            servicer.AssignLogEntryToLog,
            request_deserializer=AssignLogEntryToLogRequest.FromString,
            response_serializer=AssignLogEntryToLogReply.SerializeToString,
        ),
        'UnassignLogEntryFromLog': grpc.unary_unary_rpc_method_handler(
            servicer.UnassignLogEntryFromLog,
            request_deserializer=UnassignLogEntryFromLogRequest.FromString,
            response_serializer=UnassignLogEntryFromLogReply.SerializeToString,
        ),
        'ReassignLogEntryToLog': grpc.unary_unary_rpc_method_handler(
            servicer.ReassignLogEntryToLog,
            request_deserializer=ReassignLogEntryToLogRequest.FromString,
            response_serializer=ReassignLogEntryToLogReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogEntryLogAssignmentSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogLookupSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanLookupLogs = channel.unary_unary(
          '/dlkit.proto.logging.LogLookupSession/CanLookupLogs',
          request_serializer=CanLookupLogsRequest.SerializeToString,
          response_deserializer=CanLookupLogsReply.FromString,
          )
      self.UseComparativeLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogLookupSession/UseComparativeLogView',
          request_serializer=UseComparativeLogViewRequest.SerializeToString,
          response_deserializer=UseComparativeLogViewReply.FromString,
          )
      self.UsePlenaryLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogLookupSession/UsePlenaryLogView',
          request_serializer=UsePlenaryLogViewRequest.SerializeToString,
          response_deserializer=UsePlenaryLogViewReply.FromString,
          )
      self.GetLog = channel.unary_unary(
          '/dlkit.proto.logging.LogLookupSession/GetLog',
          request_serializer=GetLogRequest.SerializeToString,
          response_deserializer=GetLogReply.FromString,
          )
      self.GetLogsByIds = channel.unary_stream(
          '/dlkit.proto.logging.LogLookupSession/GetLogsByIds',
          request_serializer=GetLogsByIdsRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.GetLogsByGenusType = channel.unary_stream(
          '/dlkit.proto.logging.LogLookupSession/GetLogsByGenusType',
          request_serializer=GetLogsByGenusTypeRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.GetLogsByParentGenusType = channel.unary_stream(
          '/dlkit.proto.logging.LogLookupSession/GetLogsByParentGenusType',
          request_serializer=GetLogsByParentGenusTypeRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.GetLogsByRecordType = channel.unary_stream(
          '/dlkit.proto.logging.LogLookupSession/GetLogsByRecordType',
          request_serializer=GetLogsByRecordTypeRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.GetLogsByProvider = channel.unary_stream(
          '/dlkit.proto.logging.LogLookupSession/GetLogsByProvider',
          request_serializer=GetLogsByProviderRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.GetLogs = channel.unary_stream(
          '/dlkit.proto.logging.LogLookupSession/GetLogs',
          request_serializer=GetLogsRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )


  class LogLookupSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanLookupLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogLookupSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanLookupLogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupLogs,
            request_deserializer=CanLookupLogsRequest.FromString,
            response_serializer=CanLookupLogsReply.SerializeToString,
        ),
        'UseComparativeLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeLogView,
            request_deserializer=UseComparativeLogViewRequest.FromString,
            response_serializer=UseComparativeLogViewReply.SerializeToString,
        ),
        'UsePlenaryLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryLogView,
            request_deserializer=UsePlenaryLogViewRequest.FromString,
            response_serializer=UsePlenaryLogViewReply.SerializeToString,
        ),
        'GetLog': grpc.unary_unary_rpc_method_handler(
            servicer.GetLog,
            request_deserializer=GetLogRequest.FromString,
            response_serializer=GetLogReply.SerializeToString,
        ),
        'GetLogsByIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogsByIds,
            request_deserializer=GetLogsByIdsRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'GetLogsByGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogsByGenusType,
            request_deserializer=GetLogsByGenusTypeRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'GetLogsByParentGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogsByParentGenusType,
            request_deserializer=GetLogsByParentGenusTypeRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'GetLogsByRecordType': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogsByRecordType,
            request_deserializer=GetLogsByRecordTypeRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'GetLogsByProvider': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogsByProvider,
            request_deserializer=GetLogsByProviderRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'GetLogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetLogs,
            request_deserializer=GetLogsRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogLookupSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogAdminSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanCreateLogs = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/CanCreateLogs',
          request_serializer=CanCreateLogsRequest.SerializeToString,
          response_deserializer=CanCreateLogsReply.FromString,
          )
      self.CanCreateLogWithRecordTypes = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/CanCreateLogWithRecordTypes',
          request_serializer=CanCreateLogWithRecordTypesRequest.SerializeToString,
          response_deserializer=CanCreateLogWithRecordTypesReply.FromString,
          )
      self.GetLogFormForCreate = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/GetLogFormForCreate',
          request_serializer=GetLogFormForCreateRequest.SerializeToString,
          response_deserializer=GetLogFormForCreateReply.FromString,
          )
      self.CreateLog = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/CreateLog',
          request_serializer=CreateLogRequest.SerializeToString,
          response_deserializer=CreateLogReply.FromString,
          )
      self.CanUpdateLogs = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/CanUpdateLogs',
          request_serializer=CanUpdateLogsRequest.SerializeToString,
          response_deserializer=CanUpdateLogsReply.FromString,
          )
      self.GetLogFormForUpdate = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/GetLogFormForUpdate',
          request_serializer=GetLogFormForUpdateRequest.SerializeToString,
          response_deserializer=GetLogFormForUpdateReply.FromString,
          )
      self.UpdateLog = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/UpdateLog',
          request_serializer=UpdateLogRequest.SerializeToString,
          response_deserializer=UpdateLogReply.FromString,
          )
      self.CanDeleteLogs = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/CanDeleteLogs',
          request_serializer=CanDeleteLogsRequest.SerializeToString,
          response_deserializer=CanDeleteLogsReply.FromString,
          )
      self.DeleteLog = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/DeleteLog',
          request_serializer=DeleteLogRequest.SerializeToString,
          response_deserializer=DeleteLogReply.FromString,
          )
      self.CanManageLogAliases = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/CanManageLogAliases',
          request_serializer=CanManageLogAliasesRequest.SerializeToString,
          response_deserializer=CanManageLogAliasesReply.FromString,
          )
      self.AliasLog = channel.unary_unary(
          '/dlkit.proto.logging.LogAdminSession/AliasLog',
          request_serializer=AliasLogRequest.SerializeToString,
          response_deserializer=AliasLogReply.FromString,
          )


  class LogAdminSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanCreateLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateLogWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanUpdateLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanDeleteLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanManageLogAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AliasLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogAdminSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanCreateLogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateLogs,
            request_deserializer=CanCreateLogsRequest.FromString,
            response_serializer=CanCreateLogsReply.SerializeToString,
        ),
        'CanCreateLogWithRecordTypes': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateLogWithRecordTypes,
            request_deserializer=CanCreateLogWithRecordTypesRequest.FromString,
            response_serializer=CanCreateLogWithRecordTypesReply.SerializeToString,
        ),
        'GetLogFormForCreate': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogFormForCreate,
            request_deserializer=GetLogFormForCreateRequest.FromString,
            response_serializer=GetLogFormForCreateReply.SerializeToString,
        ),
        'CreateLog': grpc.unary_unary_rpc_method_handler(
            servicer.CreateLog,
            request_deserializer=CreateLogRequest.FromString,
            response_serializer=CreateLogReply.SerializeToString,
        ),
        'CanUpdateLogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanUpdateLogs,
            request_deserializer=CanUpdateLogsRequest.FromString,
            response_serializer=CanUpdateLogsReply.SerializeToString,
        ),
        'GetLogFormForUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogFormForUpdate,
            request_deserializer=GetLogFormForUpdateRequest.FromString,
            response_serializer=GetLogFormForUpdateReply.SerializeToString,
        ),
        'UpdateLog': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateLog,
            request_deserializer=UpdateLogRequest.FromString,
            response_serializer=UpdateLogReply.SerializeToString,
        ),
        'CanDeleteLogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanDeleteLogs,
            request_deserializer=CanDeleteLogsRequest.FromString,
            response_serializer=CanDeleteLogsReply.SerializeToString,
        ),
        'DeleteLog': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteLog,
            request_deserializer=DeleteLogRequest.FromString,
            response_serializer=DeleteLogReply.SerializeToString,
        ),
        'CanManageLogAliases': grpc.unary_unary_rpc_method_handler(
            servicer.CanManageLogAliases,
            request_deserializer=CanManageLogAliasesRequest.FromString,
            response_serializer=CanManageLogAliasesReply.SerializeToString,
        ),
        'AliasLog': grpc.unary_unary_rpc_method_handler(
            servicer.AliasLog,
            request_deserializer=AliasLogRequest.FromString,
            response_serializer=AliasLogReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogAdminSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogHierarchySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetLogHierarchyId = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/GetLogHierarchyId',
          request_serializer=GetLogHierarchyIdRequest.SerializeToString,
          response_deserializer=GetLogHierarchyIdReply.FromString,
          )
      self.GetLogHierarchy = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/GetLogHierarchy',
          request_serializer=GetLogHierarchyRequest.SerializeToString,
          response_deserializer=GetLogHierarchyReply.FromString,
          )
      self.CanAccessLogHierarchy = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/CanAccessLogHierarchy',
          request_serializer=CanAccessLogHierarchyRequest.SerializeToString,
          response_deserializer=CanAccessLogHierarchyReply.FromString,
          )
      self.UseComparativeLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/UseComparativeLogView',
          request_serializer=UseComparativeLogViewRequest.SerializeToString,
          response_deserializer=UseComparativeLogViewReply.FromString,
          )
      self.UsePlenaryLogView = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/UsePlenaryLogView',
          request_serializer=UsePlenaryLogViewRequest.SerializeToString,
          response_deserializer=UsePlenaryLogViewReply.FromString,
          )
      self.GetRootLogIds = channel.unary_stream(
          '/dlkit.proto.logging.LogHierarchySession/GetRootLogIds',
          request_serializer=GetRootLogIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetRootLogs = channel.unary_stream(
          '/dlkit.proto.logging.LogHierarchySession/GetRootLogs',
          request_serializer=GetRootLogsRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.HasParentLogs = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/HasParentLogs',
          request_serializer=HasParentLogsRequest.SerializeToString,
          response_deserializer=HasParentLogsReply.FromString,
          )
      self.IsParentOfLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/IsParentOfLog',
          request_serializer=IsParentOfLogRequest.SerializeToString,
          response_deserializer=IsParentOfLogReply.FromString,
          )
      self.GetParentLogIds = channel.unary_stream(
          '/dlkit.proto.logging.LogHierarchySession/GetParentLogIds',
          request_serializer=GetParentLogIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetParentLogs = channel.unary_stream(
          '/dlkit.proto.logging.LogHierarchySession/GetParentLogs',
          request_serializer=GetParentLogsRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.IsAncestorOfLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/IsAncestorOfLog',
          request_serializer=IsAncestorOfLogRequest.SerializeToString,
          response_deserializer=IsAncestorOfLogReply.FromString,
          )
      self.HasChildLogs = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/HasChildLogs',
          request_serializer=HasChildLogsRequest.SerializeToString,
          response_deserializer=HasChildLogsReply.FromString,
          )
      self.IsChildOfLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/IsChildOfLog',
          request_serializer=IsChildOfLogRequest.SerializeToString,
          response_deserializer=IsChildOfLogReply.FromString,
          )
      self.GetChildLogIds = channel.unary_stream(
          '/dlkit.proto.logging.LogHierarchySession/GetChildLogIds',
          request_serializer=GetChildLogIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetChildLogs = channel.unary_stream(
          '/dlkit.proto.logging.LogHierarchySession/GetChildLogs',
          request_serializer=GetChildLogsRequest.SerializeToString,
          response_deserializer=Log.FromString,
          )
      self.IsDescendantOfLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/IsDescendantOfLog',
          request_serializer=IsDescendantOfLogRequest.SerializeToString,
          response_deserializer=IsDescendantOfLogReply.FromString,
          )
      self.GetLogNodeIds = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/GetLogNodeIds',
          request_serializer=GetLogNodeIdsRequest.SerializeToString,
          response_deserializer=GetLogNodeIdsReply.FromString,
          )
      self.GetLogNodes = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchySession/GetLogNodes',
          request_serializer=GetLogNodesRequest.SerializeToString,
          response_deserializer=GetLogNodesReply.FromString,
          )


  class LogHierarchySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetLogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanAccessLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRootLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRootLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HasParentLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsParentOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParentLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParentLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsAncestorOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HasChildLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsChildOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetChildLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetChildLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsDescendantOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogNodeIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogNodes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogHierarchySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetLogHierarchyId': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogHierarchyId,
            request_deserializer=GetLogHierarchyIdRequest.FromString,
            response_serializer=GetLogHierarchyIdReply.SerializeToString,
        ),
        'GetLogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogHierarchy,
            request_deserializer=GetLogHierarchyRequest.FromString,
            response_serializer=GetLogHierarchyReply.SerializeToString,
        ),
        'CanAccessLogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.CanAccessLogHierarchy,
            request_deserializer=CanAccessLogHierarchyRequest.FromString,
            response_serializer=CanAccessLogHierarchyReply.SerializeToString,
        ),
        'UseComparativeLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeLogView,
            request_deserializer=UseComparativeLogViewRequest.FromString,
            response_serializer=UseComparativeLogViewReply.SerializeToString,
        ),
        'UsePlenaryLogView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryLogView,
            request_deserializer=UsePlenaryLogViewRequest.FromString,
            response_serializer=UsePlenaryLogViewReply.SerializeToString,
        ),
        'GetRootLogIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetRootLogIds,
            request_deserializer=GetRootLogIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetRootLogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetRootLogs,
            request_deserializer=GetRootLogsRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'HasParentLogs': grpc.unary_unary_rpc_method_handler(
            servicer.HasParentLogs,
            request_deserializer=HasParentLogsRequest.FromString,
            response_serializer=HasParentLogsReply.SerializeToString,
        ),
        'IsParentOfLog': grpc.unary_unary_rpc_method_handler(
            servicer.IsParentOfLog,
            request_deserializer=IsParentOfLogRequest.FromString,
            response_serializer=IsParentOfLogReply.SerializeToString,
        ),
        'GetParentLogIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetParentLogIds,
            request_deserializer=GetParentLogIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetParentLogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetParentLogs,
            request_deserializer=GetParentLogsRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'IsAncestorOfLog': grpc.unary_unary_rpc_method_handler(
            servicer.IsAncestorOfLog,
            request_deserializer=IsAncestorOfLogRequest.FromString,
            response_serializer=IsAncestorOfLogReply.SerializeToString,
        ),
        'HasChildLogs': grpc.unary_unary_rpc_method_handler(
            servicer.HasChildLogs,
            request_deserializer=HasChildLogsRequest.FromString,
            response_serializer=HasChildLogsReply.SerializeToString,
        ),
        'IsChildOfLog': grpc.unary_unary_rpc_method_handler(
            servicer.IsChildOfLog,
            request_deserializer=IsChildOfLogRequest.FromString,
            response_serializer=IsChildOfLogReply.SerializeToString,
        ),
        'GetChildLogIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetChildLogIds,
            request_deserializer=GetChildLogIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetChildLogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetChildLogs,
            request_deserializer=GetChildLogsRequest.FromString,
            response_serializer=Log.SerializeToString,
        ),
        'IsDescendantOfLog': grpc.unary_unary_rpc_method_handler(
            servicer.IsDescendantOfLog,
            request_deserializer=IsDescendantOfLogRequest.FromString,
            response_serializer=IsDescendantOfLogReply.SerializeToString,
        ),
        'GetLogNodeIds': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogNodeIds,
            request_deserializer=GetLogNodeIdsRequest.FromString,
            response_serializer=GetLogNodeIdsReply.SerializeToString,
        ),
        'GetLogNodes': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogNodes,
            request_deserializer=GetLogNodesRequest.FromString,
            response_serializer=GetLogNodesReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogHierarchySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LogHierarchyDesignSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetLogHierarchyId = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/GetLogHierarchyId',
          request_serializer=GetLogHierarchyIdRequest.SerializeToString,
          response_deserializer=GetLogHierarchyIdReply.FromString,
          )
      self.GetLogHierarchy = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/GetLogHierarchy',
          request_serializer=GetLogHierarchyRequest.SerializeToString,
          response_deserializer=GetLogHierarchyReply.FromString,
          )
      self.CanModifyLogHierarchy = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/CanModifyLogHierarchy',
          request_serializer=CanModifyLogHierarchyRequest.SerializeToString,
          response_deserializer=CanModifyLogHierarchyReply.FromString,
          )
      self.AddRootLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/AddRootLog',
          request_serializer=AddRootLogRequest.SerializeToString,
          response_deserializer=AddRootLogReply.FromString,
          )
      self.RemoveRootLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/RemoveRootLog',
          request_serializer=RemoveRootLogRequest.SerializeToString,
          response_deserializer=RemoveRootLogReply.FromString,
          )
      self.AddChildLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/AddChildLog',
          request_serializer=AddChildLogRequest.SerializeToString,
          response_deserializer=AddChildLogReply.FromString,
          )
      self.RemoveChildLog = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/RemoveChildLog',
          request_serializer=RemoveChildLogRequest.SerializeToString,
          response_deserializer=RemoveChildLogReply.FromString,
          )
      self.RemoveChildLogs = channel.unary_unary(
          '/dlkit.proto.logging.LogHierarchyDesignSession/RemoveChildLogs',
          request_serializer=RemoveChildLogsRequest.SerializeToString,
          response_deserializer=RemoveChildLogsReply.FromString,
          )


  class LogHierarchyDesignSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetLogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanModifyLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddRootLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveRootLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddChildLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveChildLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveChildLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LogHierarchyDesignSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetLogHierarchyId': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogHierarchyId,
            request_deserializer=GetLogHierarchyIdRequest.FromString,
            response_serializer=GetLogHierarchyIdReply.SerializeToString,
        ),
        'GetLogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.GetLogHierarchy,
            request_deserializer=GetLogHierarchyRequest.FromString,
            response_serializer=GetLogHierarchyReply.SerializeToString,
        ),
        'CanModifyLogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.CanModifyLogHierarchy,
            request_deserializer=CanModifyLogHierarchyRequest.FromString,
            response_serializer=CanModifyLogHierarchyReply.SerializeToString,
        ),
        'AddRootLog': grpc.unary_unary_rpc_method_handler(
            servicer.AddRootLog,
            request_deserializer=AddRootLogRequest.FromString,
            response_serializer=AddRootLogReply.SerializeToString,
        ),
        'RemoveRootLog': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveRootLog,
            request_deserializer=RemoveRootLogRequest.FromString,
            response_serializer=RemoveRootLogReply.SerializeToString,
        ),
        'AddChildLog': grpc.unary_unary_rpc_method_handler(
            servicer.AddChildLog,
            request_deserializer=AddChildLogRequest.FromString,
            response_serializer=AddChildLogReply.SerializeToString,
        ),
        'RemoveChildLog': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveChildLog,
            request_deserializer=RemoveChildLogRequest.FromString,
            response_serializer=RemoveChildLogReply.SerializeToString,
        ),
        'RemoveChildLogs': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveChildLogs,
            request_deserializer=RemoveChildLogsRequest.FromString,
            response_serializer=RemoveChildLogsReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.logging.LogHierarchyDesignSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaLoggingSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Log(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LogAtPriority(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntryForm(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLoggingSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogId.future = None
    def GetLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLog.future = None
    def CanLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLog.future = None
    def Log(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Log.future = None
    def LogAtPriority(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    LogAtPriority.future = None
    def GetLogEntryForm(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogEntryForm.future = None
    def CreateLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateLogEntry.future = None


  def beta_create_LoggingSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LoggingSession', 'CanLog'): CanLogRequest.FromString,
      ('dlkit.proto.logging.LoggingSession', 'CreateLogEntry'): CreateLogEntryRequest.FromString,
      ('dlkit.proto.logging.LoggingSession', 'GetLog'): GetLogRequest.FromString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogEntryForm'): GetLogEntryFormRequest.FromString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogId'): GetLogIdRequest.FromString,
      ('dlkit.proto.logging.LoggingSession', 'Log'): LogRequest.FromString,
      ('dlkit.proto.logging.LoggingSession', 'LogAtPriority'): LogAtPriorityRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LoggingSession', 'CanLog'): CanLogReply.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'CreateLogEntry'): CreateLogEntryReply.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'GetLog'): GetLogReply.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogEntryForm'): GetLogEntryFormReply.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogId'): GetLogIdReply.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'Log'): LogReply.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'LogAtPriority'): LogAtPriorityReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LoggingSession', 'CanLog'): face_utilities.unary_unary_inline(servicer.CanLog),
      ('dlkit.proto.logging.LoggingSession', 'CreateLogEntry'): face_utilities.unary_unary_inline(servicer.CreateLogEntry),
      ('dlkit.proto.logging.LoggingSession', 'GetLog'): face_utilities.unary_unary_inline(servicer.GetLog),
      ('dlkit.proto.logging.LoggingSession', 'GetLogEntryForm'): face_utilities.unary_unary_inline(servicer.GetLogEntryForm),
      ('dlkit.proto.logging.LoggingSession', 'GetLogId'): face_utilities.unary_unary_inline(servicer.GetLogId),
      ('dlkit.proto.logging.LoggingSession', 'Log'): face_utilities.unary_unary_inline(servicer.Log),
      ('dlkit.proto.logging.LoggingSession', 'LogAtPriority'): face_utilities.unary_unary_inline(servicer.LogAtPriority),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LoggingSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LoggingSession', 'CanLog'): CanLogRequest.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'CreateLogEntry'): CreateLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'GetLog'): GetLogRequest.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogEntryForm'): GetLogEntryFormRequest.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogId'): GetLogIdRequest.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'Log'): LogRequest.SerializeToString,
      ('dlkit.proto.logging.LoggingSession', 'LogAtPriority'): LogAtPriorityRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LoggingSession', 'CanLog'): CanLogReply.FromString,
      ('dlkit.proto.logging.LoggingSession', 'CreateLogEntry'): CreateLogEntryReply.FromString,
      ('dlkit.proto.logging.LoggingSession', 'GetLog'): GetLogReply.FromString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogEntryForm'): GetLogEntryFormReply.FromString,
      ('dlkit.proto.logging.LoggingSession', 'GetLogId'): GetLogIdReply.FromString,
      ('dlkit.proto.logging.LoggingSession', 'Log'): LogReply.FromString,
      ('dlkit.proto.logging.LoggingSession', 'LogAtPriority'): LogAtPriorityReply.FromString,
    }
    cardinalities = {
      'CanLog': cardinality.Cardinality.UNARY_UNARY,
      'CreateLogEntry': cardinality.Cardinality.UNARY_UNARY,
      'GetLog': cardinality.Cardinality.UNARY_UNARY,
      'GetLogEntryForm': cardinality.Cardinality.UNARY_UNARY,
      'GetLogId': cardinality.Cardinality.UNARY_UNARY,
      'Log': cardinality.Cardinality.UNARY_UNARY,
      'LogAtPriority': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LoggingSession', cardinalities, options=stub_options)


  class BetaLogEntryLookupSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanReadLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeLogEntryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryLogEntryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByPriorityType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByPriorityTypeAndDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesForResource(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByDateForResource(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByPriorityTypeAndDateForResource(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogEntryLookupSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogId.future = None
    def GetLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLog.future = None
    def CanReadLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanReadLog.future = None
    def UseComparativeLogEntryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeLogEntryView.future = None
    def UsePlenaryLogEntryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryLogEntryView.future = None
    def UseFederatedLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedLogView.future = None
    def UseIsolatedLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedLogView.future = None
    def GetLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogEntry.future = None
    def GetLogEntriesByIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByParentGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByRecordType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByPriorityType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByDate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByPriorityTypeAndDate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesForResource(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByDateForResource(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByPriorityTypeAndDateForResource(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntries(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_LogEntryLookupSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogEntryLookupSession', 'CanReadLog'): CanReadLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLog'): GetLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntries'): GetLogEntriesRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDate'): GetLogEntriesByDateRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDateForResource'): GetLogEntriesByDateForResourceRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByGenusType'): GetLogEntriesByGenusTypeRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByIds'): GetLogEntriesByIdsRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByParentGenusType'): GetLogEntriesByParentGenusTypeRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityType'): GetLogEntriesByPriorityTypeRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDate'): GetLogEntriesByPriorityTypeAndDateRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDateForResource'): GetLogEntriesByPriorityTypeAndDateForResourceRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByRecordType'): GetLogEntriesByRecordTypeRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesForResource'): GetLogEntriesForResourceRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntry'): GetLogEntryRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogId'): GetLogIdRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseComparativeLogEntryView'): UseComparativeLogEntryViewRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseFederatedLogView'): UseFederatedLogViewRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseIsolatedLogView'): UseIsolatedLogViewRequest.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UsePlenaryLogEntryView'): UsePlenaryLogEntryViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogEntryLookupSession', 'CanReadLog'): CanReadLogReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLog'): GetLogReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntries'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDate'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDateForResource'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByGenusType'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByIds'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByParentGenusType'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityType'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDate'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDateForResource'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByRecordType'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesForResource'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntry'): GetLogEntryReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogId'): GetLogIdReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseComparativeLogEntryView'): UseComparativeLogEntryViewReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseFederatedLogView'): UseFederatedLogViewReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseIsolatedLogView'): UseIsolatedLogViewReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UsePlenaryLogEntryView'): UsePlenaryLogEntryViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogEntryLookupSession', 'CanReadLog'): face_utilities.unary_unary_inline(servicer.CanReadLog),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLog'): face_utilities.unary_unary_inline(servicer.GetLog),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntries'): face_utilities.unary_stream_inline(servicer.GetLogEntries),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDate'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByDate),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDateForResource'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByDateForResource),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByGenusType'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByGenusType),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByIds'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByIds),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByParentGenusType'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByParentGenusType),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityType'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByPriorityType),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDate'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByPriorityTypeAndDate),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDateForResource'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByPriorityTypeAndDateForResource),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByRecordType'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByRecordType),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesForResource'): face_utilities.unary_stream_inline(servicer.GetLogEntriesForResource),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntry'): face_utilities.unary_unary_inline(servicer.GetLogEntry),
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogId'): face_utilities.unary_unary_inline(servicer.GetLogId),
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseComparativeLogEntryView'): face_utilities.unary_unary_inline(servicer.UseComparativeLogEntryView),
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseFederatedLogView'): face_utilities.unary_unary_inline(servicer.UseFederatedLogView),
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseIsolatedLogView'): face_utilities.unary_unary_inline(servicer.UseIsolatedLogView),
      ('dlkit.proto.logging.LogEntryLookupSession', 'UsePlenaryLogEntryView'): face_utilities.unary_unary_inline(servicer.UsePlenaryLogEntryView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogEntryLookupSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogEntryLookupSession', 'CanReadLog'): CanReadLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLog'): GetLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntries'): GetLogEntriesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDate'): GetLogEntriesByDateRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDateForResource'): GetLogEntriesByDateForResourceRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByGenusType'): GetLogEntriesByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByIds'): GetLogEntriesByIdsRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByParentGenusType'): GetLogEntriesByParentGenusTypeRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityType'): GetLogEntriesByPriorityTypeRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDate'): GetLogEntriesByPriorityTypeAndDateRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDateForResource'): GetLogEntriesByPriorityTypeAndDateForResourceRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByRecordType'): GetLogEntriesByRecordTypeRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesForResource'): GetLogEntriesForResourceRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntry'): GetLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogId'): GetLogIdRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseComparativeLogEntryView'): UseComparativeLogEntryViewRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseFederatedLogView'): UseFederatedLogViewRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseIsolatedLogView'): UseIsolatedLogViewRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UsePlenaryLogEntryView'): UsePlenaryLogEntryViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogEntryLookupSession', 'CanReadLog'): CanReadLogReply.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLog'): GetLogReply.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntries'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDate'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByDateForResource'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByGenusType'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByIds'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByParentGenusType'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityType'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDate'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByPriorityTypeAndDateForResource'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesByRecordType'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntriesForResource'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogEntry'): GetLogEntryReply.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'GetLogId'): GetLogIdReply.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseComparativeLogEntryView'): UseComparativeLogEntryViewReply.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseFederatedLogView'): UseFederatedLogViewReply.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UseIsolatedLogView'): UseIsolatedLogViewReply.FromString,
      ('dlkit.proto.logging.LogEntryLookupSession', 'UsePlenaryLogEntryView'): UsePlenaryLogEntryViewReply.FromString,
    }
    cardinalities = {
      'CanReadLog': cardinality.Cardinality.UNARY_UNARY,
      'GetLog': cardinality.Cardinality.UNARY_UNARY,
      'GetLogEntries': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByDate': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByDateForResource': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByIds': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByParentGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByPriorityType': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByPriorityTypeAndDate': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByPriorityTypeAndDateForResource': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByRecordType': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesForResource': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntry': cardinality.Cardinality.UNARY_UNARY,
      'GetLogId': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeLogEntryView': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedLogView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedLogView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryLogEntryView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogEntryLookupSession', cardinalities, options=stub_options)


  class BetaLogEntryQuerySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanSearchLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntryQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogEntryQuerySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogId.future = None
    def GetLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLog.future = None
    def CanSearchLogEntries(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanSearchLogEntries.future = None
    def UseFederatedLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedLogView.future = None
    def UseIsolatedLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedLogView.future = None
    def GetLogEntryQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogEntryQuery.future = None
    def GetLogEntriesByQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_LogEntryQuerySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogEntryQuerySession', 'CanSearchLogEntries'): CanSearchLogEntriesRequest.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLog'): GetLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntriesByQuery'): GetLogEntriesByQueryRequest.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntryQuery'): GetLogEntryQueryRequest.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogId'): GetLogIdRequest.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseFederatedLogView'): UseFederatedLogViewRequest.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseIsolatedLogView'): UseIsolatedLogViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogEntryQuerySession', 'CanSearchLogEntries'): CanSearchLogEntriesReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLog'): GetLogReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntriesByQuery'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntryQuery'): GetLogEntryQueryReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogId'): GetLogIdReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseFederatedLogView'): UseFederatedLogViewReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseIsolatedLogView'): UseIsolatedLogViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogEntryQuerySession', 'CanSearchLogEntries'): face_utilities.unary_unary_inline(servicer.CanSearchLogEntries),
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLog'): face_utilities.unary_unary_inline(servicer.GetLog),
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntriesByQuery'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByQuery),
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntryQuery'): face_utilities.unary_unary_inline(servicer.GetLogEntryQuery),
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogId'): face_utilities.unary_unary_inline(servicer.GetLogId),
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseFederatedLogView'): face_utilities.unary_unary_inline(servicer.UseFederatedLogView),
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseIsolatedLogView'): face_utilities.unary_unary_inline(servicer.UseIsolatedLogView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogEntryQuerySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogEntryQuerySession', 'CanSearchLogEntries'): CanSearchLogEntriesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLog'): GetLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntriesByQuery'): GetLogEntriesByQueryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntryQuery'): GetLogEntryQueryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogId'): GetLogIdRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseFederatedLogView'): UseFederatedLogViewRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseIsolatedLogView'): UseIsolatedLogViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogEntryQuerySession', 'CanSearchLogEntries'): CanSearchLogEntriesReply.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLog'): GetLogReply.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntriesByQuery'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogEntryQuery'): GetLogEntryQueryReply.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'GetLogId'): GetLogIdReply.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseFederatedLogView'): UseFederatedLogViewReply.FromString,
      ('dlkit.proto.logging.LogEntryQuerySession', 'UseIsolatedLogView'): UseIsolatedLogViewReply.FromString,
    }
    cardinalities = {
      'CanSearchLogEntries': cardinality.Cardinality.UNARY_UNARY,
      'GetLog': cardinality.Cardinality.UNARY_UNARY,
      'GetLogEntriesByQuery': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntryQuery': cardinality.Cardinality.UNARY_UNARY,
      'GetLogId': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedLogView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedLogView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogEntryQuerySession', cardinalities, options=stub_options)


  class BetaLogEntryAdminSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateLogEntryWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntryFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanUpdateLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntryFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanDeleteLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanManageLogEntryAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AliasLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogEntryAdminSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogId.future = None
    def GetLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLog.future = None
    def CanCreateLogEntries(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateLogEntries.future = None
    def CanCreateLogEntryWithRecordTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateLogEntryWithRecordTypes.future = None
    def GetLogEntryFormForCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogEntryFormForCreate.future = None
    def CreateLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateLogEntry.future = None
    def CanUpdateLogEntries(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanUpdateLogEntries.future = None
    def GetLogEntryFormForUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogEntryFormForUpdate.future = None
    def UpdateLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpdateLogEntry.future = None
    def CanDeleteLogEntries(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanDeleteLogEntries.future = None
    def DeleteLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteLogEntry.future = None
    def CanManageLogEntryAliases(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanManageLogEntryAliases.future = None
    def AliasLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AliasLogEntry.future = None


  def beta_create_LogEntryAdminSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogEntryAdminSession', 'AliasLogEntry'): AliasLogEntryRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntries'): CanCreateLogEntriesRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntryWithRecordTypes'): CanCreateLogEntryWithRecordTypesRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanDeleteLogEntries'): CanDeleteLogEntriesRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanManageLogEntryAliases'): CanManageLogEntryAliasesRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanUpdateLogEntries'): CanUpdateLogEntriesRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CreateLogEntry'): CreateLogEntryRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'DeleteLogEntry'): DeleteLogEntryRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLog'): GetLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForCreate'): GetLogEntryFormForCreateRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForUpdate'): GetLogEntryFormForUpdateRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogId'): GetLogIdRequest.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'UpdateLogEntry'): UpdateLogEntryRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogEntryAdminSession', 'AliasLogEntry'): AliasLogEntryReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntries'): CanCreateLogEntriesReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntryWithRecordTypes'): CanCreateLogEntryWithRecordTypesReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanDeleteLogEntries'): CanDeleteLogEntriesReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanManageLogEntryAliases'): CanManageLogEntryAliasesReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanUpdateLogEntries'): CanUpdateLogEntriesReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CreateLogEntry'): CreateLogEntryReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'DeleteLogEntry'): DeleteLogEntryReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLog'): GetLogReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForCreate'): GetLogEntryFormForCreateReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForUpdate'): GetLogEntryFormForUpdateReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogId'): GetLogIdReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'UpdateLogEntry'): UpdateLogEntryReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogEntryAdminSession', 'AliasLogEntry'): face_utilities.unary_unary_inline(servicer.AliasLogEntry),
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntries'): face_utilities.unary_unary_inline(servicer.CanCreateLogEntries),
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntryWithRecordTypes'): face_utilities.unary_unary_inline(servicer.CanCreateLogEntryWithRecordTypes),
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanDeleteLogEntries'): face_utilities.unary_unary_inline(servicer.CanDeleteLogEntries),
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanManageLogEntryAliases'): face_utilities.unary_unary_inline(servicer.CanManageLogEntryAliases),
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanUpdateLogEntries'): face_utilities.unary_unary_inline(servicer.CanUpdateLogEntries),
      ('dlkit.proto.logging.LogEntryAdminSession', 'CreateLogEntry'): face_utilities.unary_unary_inline(servicer.CreateLogEntry),
      ('dlkit.proto.logging.LogEntryAdminSession', 'DeleteLogEntry'): face_utilities.unary_unary_inline(servicer.DeleteLogEntry),
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLog'): face_utilities.unary_unary_inline(servicer.GetLog),
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForCreate'): face_utilities.unary_unary_inline(servicer.GetLogEntryFormForCreate),
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForUpdate'): face_utilities.unary_unary_inline(servicer.GetLogEntryFormForUpdate),
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogId'): face_utilities.unary_unary_inline(servicer.GetLogId),
      ('dlkit.proto.logging.LogEntryAdminSession', 'UpdateLogEntry'): face_utilities.unary_unary_inline(servicer.UpdateLogEntry),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogEntryAdminSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogEntryAdminSession', 'AliasLogEntry'): AliasLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntries'): CanCreateLogEntriesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntryWithRecordTypes'): CanCreateLogEntryWithRecordTypesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanDeleteLogEntries'): CanDeleteLogEntriesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanManageLogEntryAliases'): CanManageLogEntryAliasesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanUpdateLogEntries'): CanUpdateLogEntriesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CreateLogEntry'): CreateLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'DeleteLogEntry'): DeleteLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLog'): GetLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForCreate'): GetLogEntryFormForCreateRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForUpdate'): GetLogEntryFormForUpdateRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogId'): GetLogIdRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'UpdateLogEntry'): UpdateLogEntryRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogEntryAdminSession', 'AliasLogEntry'): AliasLogEntryReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntries'): CanCreateLogEntriesReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanCreateLogEntryWithRecordTypes'): CanCreateLogEntryWithRecordTypesReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanDeleteLogEntries'): CanDeleteLogEntriesReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanManageLogEntryAliases'): CanManageLogEntryAliasesReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CanUpdateLogEntries'): CanUpdateLogEntriesReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'CreateLogEntry'): CreateLogEntryReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'DeleteLogEntry'): DeleteLogEntryReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLog'): GetLogReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForCreate'): GetLogEntryFormForCreateReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogEntryFormForUpdate'): GetLogEntryFormForUpdateReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'GetLogId'): GetLogIdReply.FromString,
      ('dlkit.proto.logging.LogEntryAdminSession', 'UpdateLogEntry'): UpdateLogEntryReply.FromString,
    }
    cardinalities = {
      'AliasLogEntry': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateLogEntries': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateLogEntryWithRecordTypes': cardinality.Cardinality.UNARY_UNARY,
      'CanDeleteLogEntries': cardinality.Cardinality.UNARY_UNARY,
      'CanManageLogEntryAliases': cardinality.Cardinality.UNARY_UNARY,
      'CanUpdateLogEntries': cardinality.Cardinality.UNARY_UNARY,
      'CreateLogEntry': cardinality.Cardinality.UNARY_UNARY,
      'DeleteLogEntry': cardinality.Cardinality.UNARY_UNARY,
      'GetLog': cardinality.Cardinality.UNARY_UNARY,
      'GetLogEntryFormForCreate': cardinality.Cardinality.UNARY_UNARY,
      'GetLogEntryFormForUpdate': cardinality.Cardinality.UNARY_UNARY,
      'GetLogId': cardinality.Cardinality.UNARY_UNARY,
      'UpdateLogEntry': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogEntryAdminSession', cardinalities, options=stub_options)


  class BetaLogEntryLogSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def UseComparativeLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanLookupLogEntryLogMappings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntryIdsByLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntriesByLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogEntrieByLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogIdsByLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogByLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogEntryLogSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def UseComparativeLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeLogView.future = None
    def UsePlenaryLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryLogView.future = None
    def CanLookupLogEntryLogMappings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupLogEntryLogMappings.future = None
    def GetLogEntryIdsByLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntriesByLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogEntrieByLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogIdsByLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogByLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_LogEntryLogSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogEntryLogSession', 'CanLookupLogEntryLogMappings'): CanLookupLogEntryLogMappingsRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogByLogEntry'): GetLogByLogEntryRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntrieByLog'): GetLogEntrieByLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntriesByLog'): GetLogEntriesByLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntryIdsByLog'): GetLogEntryIdsByLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogIdsByLogEntry'): GetLogIdsByLogEntryRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UseComparativeLogView'): UseComparativeLogViewRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UsePlenaryLogView'): UsePlenaryLogViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogEntryLogSession', 'CanLookupLogEntryLogMappings'): CanLookupLogEntryLogMappingsReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogByLogEntry'): Log.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntrieByLog'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntriesByLog'): LogEntry.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntryIdsByLog'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogIdsByLogEntry'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UseComparativeLogView'): UseComparativeLogViewReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UsePlenaryLogView'): UsePlenaryLogViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogEntryLogSession', 'CanLookupLogEntryLogMappings'): face_utilities.unary_unary_inline(servicer.CanLookupLogEntryLogMappings),
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogByLogEntry'): face_utilities.unary_stream_inline(servicer.GetLogByLogEntry),
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntrieByLog'): face_utilities.unary_stream_inline(servicer.GetLogEntrieByLog),
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntriesByLog'): face_utilities.unary_stream_inline(servicer.GetLogEntriesByLog),
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntryIdsByLog'): face_utilities.unary_stream_inline(servicer.GetLogEntryIdsByLog),
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogIdsByLogEntry'): face_utilities.unary_stream_inline(servicer.GetLogIdsByLogEntry),
      ('dlkit.proto.logging.LogEntryLogSession', 'UseComparativeLogView'): face_utilities.unary_unary_inline(servicer.UseComparativeLogView),
      ('dlkit.proto.logging.LogEntryLogSession', 'UsePlenaryLogView'): face_utilities.unary_unary_inline(servicer.UsePlenaryLogView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogEntryLogSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogEntryLogSession', 'CanLookupLogEntryLogMappings'): CanLookupLogEntryLogMappingsRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogByLogEntry'): GetLogByLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntrieByLog'): GetLogEntrieByLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntriesByLog'): GetLogEntriesByLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntryIdsByLog'): GetLogEntryIdsByLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogIdsByLogEntry'): GetLogIdsByLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UseComparativeLogView'): UseComparativeLogViewRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UsePlenaryLogView'): UsePlenaryLogViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogEntryLogSession', 'CanLookupLogEntryLogMappings'): CanLookupLogEntryLogMappingsReply.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogByLogEntry'): Log.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntrieByLog'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntriesByLog'): LogEntry.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogEntryIdsByLog'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'GetLogIdsByLogEntry'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UseComparativeLogView'): UseComparativeLogViewReply.FromString,
      ('dlkit.proto.logging.LogEntryLogSession', 'UsePlenaryLogView'): UsePlenaryLogViewReply.FromString,
    }
    cardinalities = {
      'CanLookupLogEntryLogMappings': cardinality.Cardinality.UNARY_UNARY,
      'GetLogByLogEntry': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntrieByLog': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntriesByLog': cardinality.Cardinality.UNARY_STREAM,
      'GetLogEntryIdsByLog': cardinality.Cardinality.UNARY_STREAM,
      'GetLogIdsByLogEntry': cardinality.Cardinality.UNARY_STREAM,
      'UseComparativeLogView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryLogView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogEntryLogSession', cardinalities, options=stub_options)


  class BetaLogEntryLogAssignmentSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanAssignLogEntries(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanAssignLogEntriesToLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssignableLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssignableLogIdsForLogEntry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AssignLogEntryToLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnassignLogEntryFromLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ReassignLogEntryToLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogEntryLogAssignmentSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanAssignLogEntries(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAssignLogEntries.future = None
    def CanAssignLogEntriesToLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAssignLogEntriesToLog.future = None
    def GetAssignableLogIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssignableLogIdsForLogEntry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def AssignLogEntryToLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AssignLogEntryToLog.future = None
    def UnassignLogEntryFromLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UnassignLogEntryFromLog.future = None
    def ReassignLogEntryToLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ReassignLogEntryToLog.future = None


  def beta_create_LogEntryLogAssignmentSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'AssignLogEntryToLog'): AssignLogEntryToLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntries'): CanAssignLogEntriesRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntriesToLog'): CanAssignLogEntriesToLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIds'): GetAssignableLogIdsRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIdsForLogEntry'): GetAssignableLogIdsForLogEntryRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'ReassignLogEntryToLog'): ReassignLogEntryToLogRequest.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'UnassignLogEntryFromLog'): UnassignLogEntryFromLogRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'AssignLogEntryToLog'): AssignLogEntryToLogReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntries'): CanAssignLogEntriesReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntriesToLog'): CanAssignLogEntriesToLogReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIdsForLogEntry'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'ReassignLogEntryToLog'): ReassignLogEntryToLogReply.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'UnassignLogEntryFromLog'): UnassignLogEntryFromLogReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'AssignLogEntryToLog'): face_utilities.unary_unary_inline(servicer.AssignLogEntryToLog),
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntries'): face_utilities.unary_unary_inline(servicer.CanAssignLogEntries),
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntriesToLog'): face_utilities.unary_unary_inline(servicer.CanAssignLogEntriesToLog),
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIds'): face_utilities.unary_stream_inline(servicer.GetAssignableLogIds),
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIdsForLogEntry'): face_utilities.unary_stream_inline(servicer.GetAssignableLogIdsForLogEntry),
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'ReassignLogEntryToLog'): face_utilities.unary_unary_inline(servicer.ReassignLogEntryToLog),
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'UnassignLogEntryFromLog'): face_utilities.unary_unary_inline(servicer.UnassignLogEntryFromLog),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogEntryLogAssignmentSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'AssignLogEntryToLog'): AssignLogEntryToLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntries'): CanAssignLogEntriesRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntriesToLog'): CanAssignLogEntriesToLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIds'): GetAssignableLogIdsRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIdsForLogEntry'): GetAssignableLogIdsForLogEntryRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'ReassignLogEntryToLog'): ReassignLogEntryToLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'UnassignLogEntryFromLog'): UnassignLogEntryFromLogRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'AssignLogEntryToLog'): AssignLogEntryToLogReply.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntries'): CanAssignLogEntriesReply.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'CanAssignLogEntriesToLog'): CanAssignLogEntriesToLogReply.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'GetAssignableLogIdsForLogEntry'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'ReassignLogEntryToLog'): ReassignLogEntryToLogReply.FromString,
      ('dlkit.proto.logging.LogEntryLogAssignmentSession', 'UnassignLogEntryFromLog'): UnassignLogEntryFromLogReply.FromString,
    }
    cardinalities = {
      'AssignLogEntryToLog': cardinality.Cardinality.UNARY_UNARY,
      'CanAssignLogEntries': cardinality.Cardinality.UNARY_UNARY,
      'CanAssignLogEntriesToLog': cardinality.Cardinality.UNARY_UNARY,
      'GetAssignableLogIds': cardinality.Cardinality.UNARY_STREAM,
      'GetAssignableLogIdsForLogEntry': cardinality.Cardinality.UNARY_STREAM,
      'ReassignLogEntryToLog': cardinality.Cardinality.UNARY_UNARY,
      'UnassignLogEntryFromLog': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogEntryLogAssignmentSession', cardinalities, options=stub_options)


  class BetaLogLookupSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogLookupSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupLogs.future = None
    def UseComparativeLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeLogView.future = None
    def UsePlenaryLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryLogView.future = None
    def GetLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLog.future = None
    def GetLogsByIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogsByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogsByParentGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogsByRecordType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogsByProvider(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_LogLookupSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogLookupSession', 'CanLookupLogs'): CanLookupLogsRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLog'): GetLogRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogs'): GetLogsRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByGenusType'): GetLogsByGenusTypeRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByIds'): GetLogsByIdsRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByParentGenusType'): GetLogsByParentGenusTypeRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByProvider'): GetLogsByProviderRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByRecordType'): GetLogsByRecordTypeRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'UseComparativeLogView'): UseComparativeLogViewRequest.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'UsePlenaryLogView'): UsePlenaryLogViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogLookupSession', 'CanLookupLogs'): CanLookupLogsReply.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLog'): GetLogReply.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogs'): Log.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByGenusType'): Log.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByIds'): Log.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByParentGenusType'): Log.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByProvider'): Log.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByRecordType'): Log.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'UseComparativeLogView'): UseComparativeLogViewReply.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'UsePlenaryLogView'): UsePlenaryLogViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogLookupSession', 'CanLookupLogs'): face_utilities.unary_unary_inline(servicer.CanLookupLogs),
      ('dlkit.proto.logging.LogLookupSession', 'GetLog'): face_utilities.unary_unary_inline(servicer.GetLog),
      ('dlkit.proto.logging.LogLookupSession', 'GetLogs'): face_utilities.unary_stream_inline(servicer.GetLogs),
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByGenusType'): face_utilities.unary_stream_inline(servicer.GetLogsByGenusType),
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByIds'): face_utilities.unary_stream_inline(servicer.GetLogsByIds),
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByParentGenusType'): face_utilities.unary_stream_inline(servicer.GetLogsByParentGenusType),
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByProvider'): face_utilities.unary_stream_inline(servicer.GetLogsByProvider),
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByRecordType'): face_utilities.unary_stream_inline(servicer.GetLogsByRecordType),
      ('dlkit.proto.logging.LogLookupSession', 'UseComparativeLogView'): face_utilities.unary_unary_inline(servicer.UseComparativeLogView),
      ('dlkit.proto.logging.LogLookupSession', 'UsePlenaryLogView'): face_utilities.unary_unary_inline(servicer.UsePlenaryLogView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogLookupSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogLookupSession', 'CanLookupLogs'): CanLookupLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLog'): GetLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogs'): GetLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByGenusType'): GetLogsByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByIds'): GetLogsByIdsRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByParentGenusType'): GetLogsByParentGenusTypeRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByProvider'): GetLogsByProviderRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByRecordType'): GetLogsByRecordTypeRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'UseComparativeLogView'): UseComparativeLogViewRequest.SerializeToString,
      ('dlkit.proto.logging.LogLookupSession', 'UsePlenaryLogView'): UsePlenaryLogViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogLookupSession', 'CanLookupLogs'): CanLookupLogsReply.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLog'): GetLogReply.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogs'): Log.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByGenusType'): Log.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByIds'): Log.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByParentGenusType'): Log.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByProvider'): Log.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'GetLogsByRecordType'): Log.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'UseComparativeLogView'): UseComparativeLogViewReply.FromString,
      ('dlkit.proto.logging.LogLookupSession', 'UsePlenaryLogView'): UsePlenaryLogViewReply.FromString,
    }
    cardinalities = {
      'CanLookupLogs': cardinality.Cardinality.UNARY_UNARY,
      'GetLog': cardinality.Cardinality.UNARY_UNARY,
      'GetLogs': cardinality.Cardinality.UNARY_STREAM,
      'GetLogsByGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetLogsByIds': cardinality.Cardinality.UNARY_STREAM,
      'GetLogsByParentGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetLogsByProvider': cardinality.Cardinality.UNARY_STREAM,
      'GetLogsByRecordType': cardinality.Cardinality.UNARY_STREAM,
      'UseComparativeLogView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryLogView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogLookupSession', cardinalities, options=stub_options)


  class BetaLogAdminSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanCreateLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateLogWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanUpdateLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanDeleteLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanManageLogAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AliasLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogAdminSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanCreateLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateLogs.future = None
    def CanCreateLogWithRecordTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateLogWithRecordTypes.future = None
    def GetLogFormForCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogFormForCreate.future = None
    def CreateLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateLog.future = None
    def CanUpdateLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanUpdateLogs.future = None
    def GetLogFormForUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogFormForUpdate.future = None
    def UpdateLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpdateLog.future = None
    def CanDeleteLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanDeleteLogs.future = None
    def DeleteLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteLog.future = None
    def CanManageLogAliases(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanManageLogAliases.future = None
    def AliasLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AliasLog.future = None


  def beta_create_LogAdminSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogAdminSession', 'AliasLog'): AliasLogRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogWithRecordTypes'): CanCreateLogWithRecordTypesRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogs'): CanCreateLogsRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanDeleteLogs'): CanDeleteLogsRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanManageLogAliases'): CanManageLogAliasesRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanUpdateLogs'): CanUpdateLogsRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CreateLog'): CreateLogRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'DeleteLog'): DeleteLogRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForCreate'): GetLogFormForCreateRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForUpdate'): GetLogFormForUpdateRequest.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'UpdateLog'): UpdateLogRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogAdminSession', 'AliasLog'): AliasLogReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogWithRecordTypes'): CanCreateLogWithRecordTypesReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogs'): CanCreateLogsReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanDeleteLogs'): CanDeleteLogsReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanManageLogAliases'): CanManageLogAliasesReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanUpdateLogs'): CanUpdateLogsReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CreateLog'): CreateLogReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'DeleteLog'): DeleteLogReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForCreate'): GetLogFormForCreateReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForUpdate'): GetLogFormForUpdateReply.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'UpdateLog'): UpdateLogReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogAdminSession', 'AliasLog'): face_utilities.unary_unary_inline(servicer.AliasLog),
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogWithRecordTypes'): face_utilities.unary_unary_inline(servicer.CanCreateLogWithRecordTypes),
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogs'): face_utilities.unary_unary_inline(servicer.CanCreateLogs),
      ('dlkit.proto.logging.LogAdminSession', 'CanDeleteLogs'): face_utilities.unary_unary_inline(servicer.CanDeleteLogs),
      ('dlkit.proto.logging.LogAdminSession', 'CanManageLogAliases'): face_utilities.unary_unary_inline(servicer.CanManageLogAliases),
      ('dlkit.proto.logging.LogAdminSession', 'CanUpdateLogs'): face_utilities.unary_unary_inline(servicer.CanUpdateLogs),
      ('dlkit.proto.logging.LogAdminSession', 'CreateLog'): face_utilities.unary_unary_inline(servicer.CreateLog),
      ('dlkit.proto.logging.LogAdminSession', 'DeleteLog'): face_utilities.unary_unary_inline(servicer.DeleteLog),
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForCreate'): face_utilities.unary_unary_inline(servicer.GetLogFormForCreate),
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForUpdate'): face_utilities.unary_unary_inline(servicer.GetLogFormForUpdate),
      ('dlkit.proto.logging.LogAdminSession', 'UpdateLog'): face_utilities.unary_unary_inline(servicer.UpdateLog),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogAdminSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogAdminSession', 'AliasLog'): AliasLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogWithRecordTypes'): CanCreateLogWithRecordTypesRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogs'): CanCreateLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanDeleteLogs'): CanDeleteLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanManageLogAliases'): CanManageLogAliasesRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CanUpdateLogs'): CanUpdateLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'CreateLog'): CreateLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'DeleteLog'): DeleteLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForCreate'): GetLogFormForCreateRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForUpdate'): GetLogFormForUpdateRequest.SerializeToString,
      ('dlkit.proto.logging.LogAdminSession', 'UpdateLog'): UpdateLogRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogAdminSession', 'AliasLog'): AliasLogReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogWithRecordTypes'): CanCreateLogWithRecordTypesReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanCreateLogs'): CanCreateLogsReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanDeleteLogs'): CanDeleteLogsReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanManageLogAliases'): CanManageLogAliasesReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CanUpdateLogs'): CanUpdateLogsReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'CreateLog'): CreateLogReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'DeleteLog'): DeleteLogReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForCreate'): GetLogFormForCreateReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'GetLogFormForUpdate'): GetLogFormForUpdateReply.FromString,
      ('dlkit.proto.logging.LogAdminSession', 'UpdateLog'): UpdateLogReply.FromString,
    }
    cardinalities = {
      'AliasLog': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateLogWithRecordTypes': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateLogs': cardinality.Cardinality.UNARY_UNARY,
      'CanDeleteLogs': cardinality.Cardinality.UNARY_UNARY,
      'CanManageLogAliases': cardinality.Cardinality.UNARY_UNARY,
      'CanUpdateLogs': cardinality.Cardinality.UNARY_UNARY,
      'CreateLog': cardinality.Cardinality.UNARY_UNARY,
      'DeleteLog': cardinality.Cardinality.UNARY_UNARY,
      'GetLogFormForCreate': cardinality.Cardinality.UNARY_UNARY,
      'GetLogFormForUpdate': cardinality.Cardinality.UNARY_UNARY,
      'UpdateLog': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogAdminSession', cardinalities, options=stub_options)


  class BetaLogHierarchySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanAccessLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryLogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRootLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRootLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HasParentLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsParentOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParentLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParentLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsAncestorOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HasChildLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsChildOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetChildLogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetChildLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsDescendantOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogNodeIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogNodes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogHierarchySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogHierarchyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogHierarchyId.future = None
    def GetLogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogHierarchy.future = None
    def CanAccessLogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAccessLogHierarchy.future = None
    def UseComparativeLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeLogView.future = None
    def UsePlenaryLogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryLogView.future = None
    def GetRootLogIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRootLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def HasParentLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HasParentLogs.future = None
    def IsParentOfLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsParentOfLog.future = None
    def GetParentLogIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetParentLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def IsAncestorOfLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsAncestorOfLog.future = None
    def HasChildLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HasChildLogs.future = None
    def IsChildOfLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsChildOfLog.future = None
    def GetChildLogIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetChildLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def IsDescendantOfLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsDescendantOfLog.future = None
    def GetLogNodeIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogNodeIds.future = None
    def GetLogNodes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogNodes.future = None


  def beta_create_LogHierarchySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogHierarchySession', 'CanAccessLogHierarchy'): CanAccessLogHierarchyRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogIds'): GetChildLogIdsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogs'): GetChildLogsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchy'): GetLogHierarchyRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchyId'): GetLogHierarchyIdRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodeIds'): GetLogNodeIdsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodes'): GetLogNodesRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogIds'): GetParentLogIdsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogs'): GetParentLogsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogIds'): GetRootLogIdsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogs'): GetRootLogsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasChildLogs'): HasChildLogsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasParentLogs'): HasParentLogsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsAncestorOfLog'): IsAncestorOfLogRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsChildOfLog'): IsChildOfLogRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsDescendantOfLog'): IsDescendantOfLogRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsParentOfLog'): IsParentOfLogRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'UseComparativeLogView'): UseComparativeLogViewRequest.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'UsePlenaryLogView'): UsePlenaryLogViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogHierarchySession', 'CanAccessLogHierarchy'): CanAccessLogHierarchyReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogs'): Log.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchy'): GetLogHierarchyReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchyId'): GetLogHierarchyIdReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodeIds'): GetLogNodeIdsReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodes'): GetLogNodesReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogs'): Log.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogs'): Log.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasChildLogs'): HasChildLogsReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasParentLogs'): HasParentLogsReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsAncestorOfLog'): IsAncestorOfLogReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsChildOfLog'): IsChildOfLogReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsDescendantOfLog'): IsDescendantOfLogReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsParentOfLog'): IsParentOfLogReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'UseComparativeLogView'): UseComparativeLogViewReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'UsePlenaryLogView'): UsePlenaryLogViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogHierarchySession', 'CanAccessLogHierarchy'): face_utilities.unary_unary_inline(servicer.CanAccessLogHierarchy),
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogIds'): face_utilities.unary_stream_inline(servicer.GetChildLogIds),
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogs'): face_utilities.unary_stream_inline(servicer.GetChildLogs),
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchy'): face_utilities.unary_unary_inline(servicer.GetLogHierarchy),
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchyId'): face_utilities.unary_unary_inline(servicer.GetLogHierarchyId),
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodeIds'): face_utilities.unary_unary_inline(servicer.GetLogNodeIds),
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodes'): face_utilities.unary_unary_inline(servicer.GetLogNodes),
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogIds'): face_utilities.unary_stream_inline(servicer.GetParentLogIds),
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogs'): face_utilities.unary_stream_inline(servicer.GetParentLogs),
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogIds'): face_utilities.unary_stream_inline(servicer.GetRootLogIds),
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogs'): face_utilities.unary_stream_inline(servicer.GetRootLogs),
      ('dlkit.proto.logging.LogHierarchySession', 'HasChildLogs'): face_utilities.unary_unary_inline(servicer.HasChildLogs),
      ('dlkit.proto.logging.LogHierarchySession', 'HasParentLogs'): face_utilities.unary_unary_inline(servicer.HasParentLogs),
      ('dlkit.proto.logging.LogHierarchySession', 'IsAncestorOfLog'): face_utilities.unary_unary_inline(servicer.IsAncestorOfLog),
      ('dlkit.proto.logging.LogHierarchySession', 'IsChildOfLog'): face_utilities.unary_unary_inline(servicer.IsChildOfLog),
      ('dlkit.proto.logging.LogHierarchySession', 'IsDescendantOfLog'): face_utilities.unary_unary_inline(servicer.IsDescendantOfLog),
      ('dlkit.proto.logging.LogHierarchySession', 'IsParentOfLog'): face_utilities.unary_unary_inline(servicer.IsParentOfLog),
      ('dlkit.proto.logging.LogHierarchySession', 'UseComparativeLogView'): face_utilities.unary_unary_inline(servicer.UseComparativeLogView),
      ('dlkit.proto.logging.LogHierarchySession', 'UsePlenaryLogView'): face_utilities.unary_unary_inline(servicer.UsePlenaryLogView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogHierarchySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogHierarchySession', 'CanAccessLogHierarchy'): CanAccessLogHierarchyRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogIds'): GetChildLogIdsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogs'): GetChildLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchy'): GetLogHierarchyRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchyId'): GetLogHierarchyIdRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodeIds'): GetLogNodeIdsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodes'): GetLogNodesRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogIds'): GetParentLogIdsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogs'): GetParentLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogIds'): GetRootLogIdsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogs'): GetRootLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasChildLogs'): HasChildLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasParentLogs'): HasParentLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsAncestorOfLog'): IsAncestorOfLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsChildOfLog'): IsChildOfLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsDescendantOfLog'): IsDescendantOfLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsParentOfLog'): IsParentOfLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'UseComparativeLogView'): UseComparativeLogViewRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchySession', 'UsePlenaryLogView'): UsePlenaryLogViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogHierarchySession', 'CanAccessLogHierarchy'): CanAccessLogHierarchyReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetChildLogs'): Log.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchy'): GetLogHierarchyReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogHierarchyId'): GetLogHierarchyIdReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodeIds'): GetLogNodeIdsReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetLogNodes'): GetLogNodesReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetParentLogs'): Log.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'GetRootLogs'): Log.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasChildLogs'): HasChildLogsReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'HasParentLogs'): HasParentLogsReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsAncestorOfLog'): IsAncestorOfLogReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsChildOfLog'): IsChildOfLogReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsDescendantOfLog'): IsDescendantOfLogReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'IsParentOfLog'): IsParentOfLogReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'UseComparativeLogView'): UseComparativeLogViewReply.FromString,
      ('dlkit.proto.logging.LogHierarchySession', 'UsePlenaryLogView'): UsePlenaryLogViewReply.FromString,
    }
    cardinalities = {
      'CanAccessLogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetChildLogIds': cardinality.Cardinality.UNARY_STREAM,
      'GetChildLogs': cardinality.Cardinality.UNARY_STREAM,
      'GetLogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetLogHierarchyId': cardinality.Cardinality.UNARY_UNARY,
      'GetLogNodeIds': cardinality.Cardinality.UNARY_UNARY,
      'GetLogNodes': cardinality.Cardinality.UNARY_UNARY,
      'GetParentLogIds': cardinality.Cardinality.UNARY_STREAM,
      'GetParentLogs': cardinality.Cardinality.UNARY_STREAM,
      'GetRootLogIds': cardinality.Cardinality.UNARY_STREAM,
      'GetRootLogs': cardinality.Cardinality.UNARY_STREAM,
      'HasChildLogs': cardinality.Cardinality.UNARY_UNARY,
      'HasParentLogs': cardinality.Cardinality.UNARY_UNARY,
      'IsAncestorOfLog': cardinality.Cardinality.UNARY_UNARY,
      'IsChildOfLog': cardinality.Cardinality.UNARY_UNARY,
      'IsDescendantOfLog': cardinality.Cardinality.UNARY_UNARY,
      'IsParentOfLog': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeLogView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryLogView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogHierarchySession', cardinalities, options=stub_options)


  class BetaLogHierarchyDesignSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanModifyLogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddRootLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveRootLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddChildLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveChildLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveChildLogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLogHierarchyDesignSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetLogHierarchyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogHierarchyId.future = None
    def GetLogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetLogHierarchy.future = None
    def CanModifyLogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanModifyLogHierarchy.future = None
    def AddRootLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddRootLog.future = None
    def RemoveRootLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveRootLog.future = None
    def AddChildLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddChildLog.future = None
    def RemoveChildLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveChildLog.future = None
    def RemoveChildLogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveChildLogs.future = None


  def beta_create_LogHierarchyDesignSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddChildLog'): AddChildLogRequest.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddRootLog'): AddRootLogRequest.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'CanModifyLogHierarchy'): CanModifyLogHierarchyRequest.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchy'): GetLogHierarchyRequest.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchyId'): GetLogHierarchyIdRequest.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLog'): RemoveChildLogRequest.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLogs'): RemoveChildLogsRequest.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveRootLog'): RemoveRootLogRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddChildLog'): AddChildLogReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddRootLog'): AddRootLogReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'CanModifyLogHierarchy'): CanModifyLogHierarchyReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchy'): GetLogHierarchyReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchyId'): GetLogHierarchyIdReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLog'): RemoveChildLogReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLogs'): RemoveChildLogsReply.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveRootLog'): RemoveRootLogReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddChildLog'): face_utilities.unary_unary_inline(servicer.AddChildLog),
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddRootLog'): face_utilities.unary_unary_inline(servicer.AddRootLog),
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'CanModifyLogHierarchy'): face_utilities.unary_unary_inline(servicer.CanModifyLogHierarchy),
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchy'): face_utilities.unary_unary_inline(servicer.GetLogHierarchy),
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchyId'): face_utilities.unary_unary_inline(servicer.GetLogHierarchyId),
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLog'): face_utilities.unary_unary_inline(servicer.RemoveChildLog),
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLogs'): face_utilities.unary_unary_inline(servicer.RemoveChildLogs),
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveRootLog'): face_utilities.unary_unary_inline(servicer.RemoveRootLog),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LogHierarchyDesignSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddChildLog'): AddChildLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddRootLog'): AddRootLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'CanModifyLogHierarchy'): CanModifyLogHierarchyRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchy'): GetLogHierarchyRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchyId'): GetLogHierarchyIdRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLog'): RemoveChildLogRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLogs'): RemoveChildLogsRequest.SerializeToString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveRootLog'): RemoveRootLogRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddChildLog'): AddChildLogReply.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'AddRootLog'): AddRootLogReply.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'CanModifyLogHierarchy'): CanModifyLogHierarchyReply.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchy'): GetLogHierarchyReply.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'GetLogHierarchyId'): GetLogHierarchyIdReply.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLog'): RemoveChildLogReply.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveChildLogs'): RemoveChildLogsReply.FromString,
      ('dlkit.proto.logging.LogHierarchyDesignSession', 'RemoveRootLog'): RemoveRootLogReply.FromString,
    }
    cardinalities = {
      'AddChildLog': cardinality.Cardinality.UNARY_UNARY,
      'AddRootLog': cardinality.Cardinality.UNARY_UNARY,
      'CanModifyLogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetLogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetLogHierarchyId': cardinality.Cardinality.UNARY_UNARY,
      'RemoveChildLog': cardinality.Cardinality.UNARY_UNARY,
      'RemoveChildLogs': cardinality.Cardinality.UNARY_UNARY,
      'RemoveRootLog': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.logging.LogHierarchyDesignSession', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
