# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dlkit/proto/cataloging.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dlkit.primordium.id import primitives_pb2 as dlkit_dot_primordium_dot_id_dot_primitives__pb2
from dlkit.primordium.locale import primitives_pb2 as dlkit_dot_primordium_dot_locale_dot_primitives__pb2
from dlkit.primordium.type import primitives_pb2 as dlkit_dot_primordium_dot_type_dot_primitives__pb2
from dlkit.proto import hierarchy_pb2 as dlkit_dot_proto_dot_hierarchy__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dlkit/proto/cataloging.proto',
  package='dlkit.proto.cataloging',
  syntax='proto3',
  serialized_pb=_b('\n\x1c\x64lkit/proto/cataloging.proto\x12\x16\x64lkit.proto.cataloging\x1a$dlkit/primordium/id/primitives.proto\x1a(dlkit/primordium/locale/primitives.proto\x1a&dlkit/primordium/type/primitives.proto\x1a\x1b\x64lkit/proto/hierarchy.proto\"\xc1\x02\n\x07\x43\x61talog\x12\x44\n\x0b\x64\x65scription\x18\x01 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x44\n\x0b\x64isplayName\x18\x02 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12;\n\x0bgenusTypeId\x18\x03 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12.\n\x02id\x18\x04 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12=\n\rrecordTypeIds\x18\x05 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"\x0e\n\x0c\x43\x61talogQuery\"\x17\n\x15\x43\x61talogQueryInspector\"\r\n\x0b\x43\x61talogForm\"\x14\n\x12\x43\x61talogSearchOrder\"\x0f\n\rCatalogSearch\"\x16\n\x14\x43\x61talogSearchResults\"@\n\x0b\x43\x61talogList\x12\x31\n\x08\x63\x61talogs\x18\x01 \x03(\x0b\x32\x1f.dlkit.proto.cataloging.Catalog\"\r\n\x0b\x43\x61talogNode\"M\n\x0f\x43\x61talogNodeList\x12:\n\rcatalog_nodes\x18\x01 \x03(\x0b\x32#.dlkit.proto.cataloging.CatalogNode\"5\n\x16\x43\x61nLookupCatalogsReply\x12\x1b\n\x13\x63\x61n_lookup_catalogs\x18\x01 \x01(\x08\"\x1a\n\x18\x43\x61nLookupCatalogsRequest\" \n\x1eUseComparativeCatalogViewReply\"\"\n UseComparativeCatalogViewRequest\"\x1c\n\x1aUsePlenaryCatalogViewReply\"\x1e\n\x1cUsePlenaryCatalogViewRequest\"C\n\x0fGetCatalogReply\x12\x30\n\x07\x63\x61talog\x18\x01 \x01(\x0b\x32\x1f.dlkit.proto.cataloging.Catalog\"K\n\x11GetCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"R\n\x17GetCatalogsByIdsRequest\x12\x37\n\x0b\x63\x61talog_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"c\n\x1dGetCatalogsByGenusTypeRequest\x12\x42\n\x12\x63\x61talog_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"i\n#GetCatalogsByParentGenusTypeRequest\x12\x42\n\x12\x63\x61talog_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"e\n\x1eGetCatalogsByRecordTypeRequest\x12\x43\n\x13\x63\x61talog_record_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"W\n\x1cGetCatalogsByProviderRequest\x12\x37\n\x0bresource_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x14\n\x12GetCatalogsRequest\"5\n\x16\x43\x61nSearchCatalogsReply\x12\x1b\n\x13\x63\x61n_search_catalogs\x18\x01 \x01(\x08\"\x1a\n\x18\x43\x61nSearchCatalogsRequest\"S\n\x14GetCatalogQueryReply\x12;\n\rcatalog_query\x18\x01 \x01(\x0b\x32$.dlkit.proto.cataloging.CatalogQuery\"\x18\n\x16GetCatalogQueryRequest\"X\n\x19GetCatalogsByQueryRequest\x12;\n\rcatalog_query\x18\x01 \x01(\x0b\x32$.dlkit.proto.cataloging.CatalogQuery\"5\n\x16\x43\x61nCreateCatalogsReply\x12\x1b\n\x13\x63\x61n_create_catalogs\x18\x01 \x01(\x08\"\x1a\n\x18\x43\x61nCreateCatalogsRequest\"T\n$CanCreateCatalogWithRecordTypesReply\x12,\n$can_create_catalog_with_record_types\x18\x01 \x01(\x08\"n\n&CanCreateCatalogWithRecordTypesRequest\x12\x44\n\x14\x63\x61talog_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"Y\n\x1cGetCatalogFormForCreateReply\x12\x39\n\x0c\x63\x61talog_form\x18\x01 \x01(\x0b\x32#.dlkit.proto.cataloging.CatalogForm\"f\n\x1eGetCatalogFormForCreateRequest\x12\x44\n\x14\x63\x61talog_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"F\n\x12\x43reateCatalogReply\x12\x30\n\x07\x63\x61talog\x18\x01 \x01(\x0b\x32\x1f.dlkit.proto.cataloging.Catalog\"Q\n\x14\x43reateCatalogRequest\x12\x39\n\x0c\x63\x61talog_form\x18\x01 \x01(\x0b\x32#.dlkit.proto.cataloging.CatalogForm\"5\n\x16\x43\x61nUpdateCatalogsReply\x12\x1b\n\x13\x63\x61n_update_catalogs\x18\x01 \x01(\x08\"\x1a\n\x18\x43\x61nUpdateCatalogsRequest\"Y\n\x1cGetCatalogFormForUpdateReply\x12\x39\n\x0c\x63\x61talog_form\x18\x01 \x01(\x0b\x32#.dlkit.proto.cataloging.CatalogForm\"X\n\x1eGetCatalogFormForUpdateRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x14\n\x12UpdateCatalogReply\"Q\n\x14UpdateCatalogRequest\x12\x39\n\x0c\x63\x61talog_form\x18\x01 \x01(\x0b\x32#.dlkit.proto.cataloging.CatalogForm\"5\n\x16\x43\x61nDeleteCatalogsReply\x12\x1b\n\x13\x63\x61n_delete_catalogs\x18\x01 \x01(\x08\"\x1a\n\x18\x43\x61nDeleteCatalogsRequest\"\x14\n\x12\x44\x65leteCatalogReply\"N\n\x14\x44\x65leteCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"B\n\x1c\x43\x61nManageCatalogAliasesReply\x12\"\n\x1a\x63\x61n_manage_catalog_aliases\x18\x01 \x01(\x08\" \n\x1e\x43\x61nManageCatalogAliasesRequest\"\x13\n\x11\x41liasCatalogReply\"\x83\x01\n\x13\x41liasCatalogRequest\x12\x34\n\x08\x61lias_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x36\n\ncatalog_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"L\n\x1aGetCatalogHierarchyIdReply\x12.\n\x02id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1e\n\x1cGetCatalogHierarchyIdRequest\"O\n\x18GetCatalogHierarchyReply\x12\x33\n\thierarchy\x18\x01 \x01(\x0b\x32 .dlkit.proto.hierarchy.Hierarchy\"\x1c\n\x1aGetCatalogHierarchyRequest\"F\n\x1e\x43\x61nAccessCatalogHierarchyReply\x12$\n\x1c\x63\x61n_access_catalog_hierarchy\x18\x01 \x01(\x08\"\"\n CanAccessCatalogHierarchyRequest\"\x1a\n\x18GetRootCatalogIdsRequest\"\x18\n\x16GetRootCatalogsRequest\"5\n\x16HasParentCatalogsReply\x12\x1b\n\x13has_parent_catalogs\x18\x01 \x01(\x08\"R\n\x18HasParentCatalogsRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"6\n\x16IsParentOfCatalogReply\x12\x1c\n\x14is_parent_of_catalog\x18\x01 \x01(\x08\"\x83\x01\n\x18IsParentOfCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12/\n\x03id_\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"T\n\x1aGetParentCatalogIdsRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"R\n\x18GetParentCatalogsRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\":\n\x18IsAncestorOfCatalogReply\x12\x1e\n\x16is_ancestor_of_catalog\x18\x01 \x01(\x08\"\x85\x01\n\x1aIsAncestorOfCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12/\n\x03id_\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"3\n\x15HasChildCatalogsReply\x12\x1a\n\x12has_child_catalogs\x18\x01 \x01(\x08\"Q\n\x17HasChildCatalogsRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"4\n\x15IsChildOfCatalogReply\x12\x1b\n\x13is_child_of_catalog\x18\x01 \x01(\x08\"\x82\x01\n\x17IsChildOfCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12/\n\x03id_\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"S\n\x19GetChildCatalogIdsRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"Q\n\x17GetChildCatalogsRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\">\n\x1aIsDescendantOfCatalogReply\x12 \n\x18is_descendant_of_catalog\x18\x01 \x01(\x08\"\x87\x01\n\x1cIsDescendantOfCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12/\n\x03id_\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"C\n\x16GetCatalogNodeIdsReply\x12)\n\x04node\x18\x01 \x01(\x0b\x32\x1b.dlkit.proto.hierarchy.Node\"\xa0\x01\n\x18GetCatalogNodeIdsRequest\x12\x17\n\x0f\x61ncestor_levels\x18\x01 \x01(\x11\x12\x36\n\ncatalog_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x19\n\x11\x64\x65scendant_levels\x18\x03 \x01(\x11\x12\x18\n\x10include_siblings\x18\x04 \x01(\x08\"Q\n\x14GetCatalogNodesReply\x12\x39\n\x0c\x63\x61talog_node\x18\x01 \x01(\x0b\x32#.dlkit.proto.cataloging.CatalogNode\"\x9e\x01\n\x16GetCatalogNodesRequest\x12\x17\n\x0f\x61ncestor_levels\x18\x01 \x01(\x11\x12\x36\n\ncatalog_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x19\n\x11\x64\x65scendant_levels\x18\x03 \x01(\x11\x12\x18\n\x10include_siblings\x18\x04 \x01(\x08\"F\n\x1e\x43\x61nModifyCatalogHierarchyReply\x12$\n\x1c\x63\x61n_modify_catalog_hierarchy\x18\x01 \x01(\x08\"\"\n CanModifyCatalogHierarchyRequest\"\x15\n\x13\x41\x64\x64RootCatalogReply\"O\n\x15\x41\x64\x64RootCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x18\n\x16RemoveRootCatalogReply\"R\n\x18RemoveRootCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x16\n\x14\x41\x64\x64\x43hildCatalogReply\"\x86\x01\n\x16\x41\x64\x64\x43hildCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x34\n\x08\x63hild_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x19\n\x17RemoveChildCatalogReply\"\x89\x01\n\x19RemoveChildCatalogRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x34\n\x08\x63hild_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1a\n\x18RemoveChildCatalogsReply\"T\n\x1aRemoveChildCatalogsRequest\x12\x36\n\ncatalog_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id2\xba\t\n\x14\x43\x61talogLookupSession\x12w\n\x11\x43\x61nLookupCatalogs\x12\x30.dlkit.proto.cataloging.CanLookupCatalogsRequest\x1a..dlkit.proto.cataloging.CanLookupCatalogsReply\"\x00\x12\x8f\x01\n\x19UseComparativeCatalogView\x12\x38.dlkit.proto.cataloging.UseComparativeCatalogViewRequest\x1a\x36.dlkit.proto.cataloging.UseComparativeCatalogViewReply\"\x00\x12\x83\x01\n\x15UsePlenaryCatalogView\x12\x34.dlkit.proto.cataloging.UsePlenaryCatalogViewRequest\x1a\x32.dlkit.proto.cataloging.UsePlenaryCatalogViewReply\"\x00\x12\x62\n\nGetCatalog\x12).dlkit.proto.cataloging.GetCatalogRequest\x1a\'.dlkit.proto.cataloging.GetCatalogReply\"\x00\x12h\n\x10GetCatalogsByIds\x12/.dlkit.proto.cataloging.GetCatalogsByIdsRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12t\n\x16GetCatalogsByGenusType\x12\x35.dlkit.proto.cataloging.GetCatalogsByGenusTypeRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12\x80\x01\n\x1cGetCatalogsByParentGenusType\x12;.dlkit.proto.cataloging.GetCatalogsByParentGenusTypeRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12v\n\x17GetCatalogsByRecordType\x12\x36.dlkit.proto.cataloging.GetCatalogsByRecordTypeRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12r\n\x15GetCatalogsByProvider\x12\x34.dlkit.proto.cataloging.GetCatalogsByProviderRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12^\n\x0bGetCatalogs\x12*.dlkit.proto.cataloging.GetCatalogsRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x32\xef\x02\n\x13\x43\x61talogQuerySession\x12w\n\x11\x43\x61nSearchCatalogs\x12\x30.dlkit.proto.cataloging.CanSearchCatalogsRequest\x1a..dlkit.proto.cataloging.CanSearchCatalogsReply\"\x00\x12q\n\x0fGetCatalogQuery\x12..dlkit.proto.cataloging.GetCatalogQueryRequest\x1a,.dlkit.proto.cataloging.GetCatalogQueryReply\"\x00\x12l\n\x12GetCatalogsByQuery\x12\x31.dlkit.proto.cataloging.GetCatalogsByQueryRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x32\xf9\n\n\x13\x43\x61talogAdminSession\x12w\n\x11\x43\x61nCreateCatalogs\x12\x30.dlkit.proto.cataloging.CanCreateCatalogsRequest\x1a..dlkit.proto.cataloging.CanCreateCatalogsReply\"\x00\x12\xa1\x01\n\x1f\x43\x61nCreateCatalogWithRecordTypes\x12>.dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesRequest\x1a<.dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesReply\"\x00\x12\x89\x01\n\x17GetCatalogFormForCreate\x12\x36.dlkit.proto.cataloging.GetCatalogFormForCreateRequest\x1a\x34.dlkit.proto.cataloging.GetCatalogFormForCreateReply\"\x00\x12k\n\rCreateCatalog\x12,.dlkit.proto.cataloging.CreateCatalogRequest\x1a*.dlkit.proto.cataloging.CreateCatalogReply\"\x00\x12w\n\x11\x43\x61nUpdateCatalogs\x12\x30.dlkit.proto.cataloging.CanUpdateCatalogsRequest\x1a..dlkit.proto.cataloging.CanUpdateCatalogsReply\"\x00\x12\x89\x01\n\x17GetCatalogFormForUpdate\x12\x36.dlkit.proto.cataloging.GetCatalogFormForUpdateRequest\x1a\x34.dlkit.proto.cataloging.GetCatalogFormForUpdateReply\"\x00\x12k\n\rUpdateCatalog\x12,.dlkit.proto.cataloging.UpdateCatalogRequest\x1a*.dlkit.proto.cataloging.UpdateCatalogReply\"\x00\x12w\n\x11\x43\x61nDeleteCatalogs\x12\x30.dlkit.proto.cataloging.CanDeleteCatalogsRequest\x1a..dlkit.proto.cataloging.CanDeleteCatalogsReply\"\x00\x12k\n\rDeleteCatalog\x12,.dlkit.proto.cataloging.DeleteCatalogRequest\x1a*.dlkit.proto.cataloging.DeleteCatalogReply\"\x00\x12\x89\x01\n\x17\x43\x61nManageCatalogAliases\x12\x36.dlkit.proto.cataloging.CanManageCatalogAliasesRequest\x1a\x34.dlkit.proto.cataloging.CanManageCatalogAliasesReply\"\x00\x12h\n\x0c\x41liasCatalog\x12+.dlkit.proto.cataloging.AliasCatalogRequest\x1a).dlkit.proto.cataloging.AliasCatalogReply\"\x00\x32\xa8\x12\n\x17\x43\x61talogHierarchySession\x12\x83\x01\n\x15GetCatalogHierarchyId\x12\x34.dlkit.proto.cataloging.GetCatalogHierarchyIdRequest\x1a\x32.dlkit.proto.cataloging.GetCatalogHierarchyIdReply\"\x00\x12}\n\x13GetCatalogHierarchy\x12\x32.dlkit.proto.cataloging.GetCatalogHierarchyRequest\x1a\x30.dlkit.proto.cataloging.GetCatalogHierarchyReply\"\x00\x12\x8f\x01\n\x19\x43\x61nAccessCatalogHierarchy\x12\x38.dlkit.proto.cataloging.CanAccessCatalogHierarchyRequest\x1a\x36.dlkit.proto.cataloging.CanAccessCatalogHierarchyReply\"\x00\x12\x8f\x01\n\x19UseComparativeCatalogView\x12\x38.dlkit.proto.cataloging.UseComparativeCatalogViewRequest\x1a\x36.dlkit.proto.cataloging.UseComparativeCatalogViewReply\"\x00\x12\x83\x01\n\x15UsePlenaryCatalogView\x12\x34.dlkit.proto.cataloging.UsePlenaryCatalogViewRequest\x1a\x32.dlkit.proto.cataloging.UsePlenaryCatalogViewReply\"\x00\x12m\n\x11GetRootCatalogIds\x12\x30.dlkit.proto.cataloging.GetRootCatalogIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x66\n\x0fGetRootCatalogs\x12..dlkit.proto.cataloging.GetRootCatalogsRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12w\n\x11HasParentCatalogs\x12\x30.dlkit.proto.cataloging.HasParentCatalogsRequest\x1a..dlkit.proto.cataloging.HasParentCatalogsReply\"\x00\x12w\n\x11IsParentOfCatalog\x12\x30.dlkit.proto.cataloging.IsParentOfCatalogRequest\x1a..dlkit.proto.cataloging.IsParentOfCatalogReply\"\x00\x12q\n\x13GetParentCatalogIds\x12\x32.dlkit.proto.cataloging.GetParentCatalogIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12j\n\x11GetParentCatalogs\x12\x30.dlkit.proto.cataloging.GetParentCatalogsRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12}\n\x13IsAncestorOfCatalog\x12\x32.dlkit.proto.cataloging.IsAncestorOfCatalogRequest\x1a\x30.dlkit.proto.cataloging.IsAncestorOfCatalogReply\"\x00\x12t\n\x10HasChildCatalogs\x12/.dlkit.proto.cataloging.HasChildCatalogsRequest\x1a-.dlkit.proto.cataloging.HasChildCatalogsReply\"\x00\x12t\n\x10IsChildOfCatalog\x12/.dlkit.proto.cataloging.IsChildOfCatalogRequest\x1a-.dlkit.proto.cataloging.IsChildOfCatalogReply\"\x00\x12o\n\x12GetChildCatalogIds\x12\x31.dlkit.proto.cataloging.GetChildCatalogIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12h\n\x10GetChildCatalogs\x12/.dlkit.proto.cataloging.GetChildCatalogsRequest\x1a\x1f.dlkit.proto.cataloging.Catalog\"\x00\x30\x01\x12\x83\x01\n\x15IsDescendantOfCatalog\x12\x34.dlkit.proto.cataloging.IsDescendantOfCatalogRequest\x1a\x32.dlkit.proto.cataloging.IsDescendantOfCatalogReply\"\x00\x12w\n\x11GetCatalogNodeIds\x12\x30.dlkit.proto.cataloging.GetCatalogNodeIdsRequest\x1a..dlkit.proto.cataloging.GetCatalogNodeIdsReply\"\x00\x12q\n\x0fGetCatalogNodes\x12..dlkit.proto.cataloging.GetCatalogNodesRequest\x1a,.dlkit.proto.cataloging.GetCatalogNodesReply\"\x00\x32\x8d\x08\n\x1d\x43\x61talogHierarchyDesignSession\x12\x83\x01\n\x15GetCatalogHierarchyId\x12\x34.dlkit.proto.cataloging.GetCatalogHierarchyIdRequest\x1a\x32.dlkit.proto.cataloging.GetCatalogHierarchyIdReply\"\x00\x12}\n\x13GetCatalogHierarchy\x12\x32.dlkit.proto.cataloging.GetCatalogHierarchyRequest\x1a\x30.dlkit.proto.cataloging.GetCatalogHierarchyReply\"\x00\x12\x8f\x01\n\x19\x43\x61nModifyCatalogHierarchy\x12\x38.dlkit.proto.cataloging.CanModifyCatalogHierarchyRequest\x1a\x36.dlkit.proto.cataloging.CanModifyCatalogHierarchyReply\"\x00\x12n\n\x0e\x41\x64\x64RootCatalog\x12-.dlkit.proto.cataloging.AddRootCatalogRequest\x1a+.dlkit.proto.cataloging.AddRootCatalogReply\"\x00\x12w\n\x11RemoveRootCatalog\x12\x30.dlkit.proto.cataloging.RemoveRootCatalogRequest\x1a..dlkit.proto.cataloging.RemoveRootCatalogReply\"\x00\x12q\n\x0f\x41\x64\x64\x43hildCatalog\x12..dlkit.proto.cataloging.AddChildCatalogRequest\x1a,.dlkit.proto.cataloging.AddChildCatalogReply\"\x00\x12z\n\x12RemoveChildCatalog\x12\x31.dlkit.proto.cataloging.RemoveChildCatalogRequest\x1a/.dlkit.proto.cataloging.RemoveChildCatalogReply\"\x00\x12}\n\x13RemoveChildCatalogs\x12\x32.dlkit.proto.cataloging.RemoveChildCatalogsRequest\x1a\x30.dlkit.proto.cataloging.RemoveChildCatalogsReply\"\x00\x62\x06proto3')
  ,
  dependencies=[dlkit_dot_primordium_dot_id_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_primordium_dot_locale_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_primordium_dot_type_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_proto_dot_hierarchy__pb2.DESCRIPTOR,])




_CATALOG = _descriptor.Descriptor(
  name='Catalog',
  full_name='dlkit.proto.cataloging.Catalog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='dlkit.proto.cataloging.Catalog.description', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='displayName', full_name='dlkit.proto.cataloging.Catalog.displayName', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='genusTypeId', full_name='dlkit.proto.cataloging.Catalog.genusTypeId', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.cataloging.Catalog.id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recordTypeIds', full_name='dlkit.proto.cataloging.Catalog.recordTypeIds', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=527,
)


_CATALOGQUERY = _descriptor.Descriptor(
  name='CatalogQuery',
  full_name='dlkit.proto.cataloging.CatalogQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=529,
  serialized_end=543,
)


_CATALOGQUERYINSPECTOR = _descriptor.Descriptor(
  name='CatalogQueryInspector',
  full_name='dlkit.proto.cataloging.CatalogQueryInspector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=545,
  serialized_end=568,
)


_CATALOGFORM = _descriptor.Descriptor(
  name='CatalogForm',
  full_name='dlkit.proto.cataloging.CatalogForm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=570,
  serialized_end=583,
)


_CATALOGSEARCHORDER = _descriptor.Descriptor(
  name='CatalogSearchOrder',
  full_name='dlkit.proto.cataloging.CatalogSearchOrder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=585,
  serialized_end=605,
)


_CATALOGSEARCH = _descriptor.Descriptor(
  name='CatalogSearch',
  full_name='dlkit.proto.cataloging.CatalogSearch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=607,
  serialized_end=622,
)


_CATALOGSEARCHRESULTS = _descriptor.Descriptor(
  name='CatalogSearchResults',
  full_name='dlkit.proto.cataloging.CatalogSearchResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=624,
  serialized_end=646,
)


_CATALOGLIST = _descriptor.Descriptor(
  name='CatalogList',
  full_name='dlkit.proto.cataloging.CatalogList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalogs', full_name='dlkit.proto.cataloging.CatalogList.catalogs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=648,
  serialized_end=712,
)


_CATALOGNODE = _descriptor.Descriptor(
  name='CatalogNode',
  full_name='dlkit.proto.cataloging.CatalogNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=714,
  serialized_end=727,
)


_CATALOGNODELIST = _descriptor.Descriptor(
  name='CatalogNodeList',
  full_name='dlkit.proto.cataloging.CatalogNodeList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_nodes', full_name='dlkit.proto.cataloging.CatalogNodeList.catalog_nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=729,
  serialized_end=806,
)


_CANLOOKUPCATALOGSREPLY = _descriptor.Descriptor(
  name='CanLookupCatalogsReply',
  full_name='dlkit.proto.cataloging.CanLookupCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_catalogs', full_name='dlkit.proto.cataloging.CanLookupCatalogsReply.can_lookup_catalogs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=808,
  serialized_end=861,
)


_CANLOOKUPCATALOGSREQUEST = _descriptor.Descriptor(
  name='CanLookupCatalogsRequest',
  full_name='dlkit.proto.cataloging.CanLookupCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=863,
  serialized_end=889,
)


_USECOMPARATIVECATALOGVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeCatalogViewReply',
  full_name='dlkit.proto.cataloging.UseComparativeCatalogViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=891,
  serialized_end=923,
)


_USECOMPARATIVECATALOGVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeCatalogViewRequest',
  full_name='dlkit.proto.cataloging.UseComparativeCatalogViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=925,
  serialized_end=959,
)


_USEPLENARYCATALOGVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryCatalogViewReply',
  full_name='dlkit.proto.cataloging.UsePlenaryCatalogViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=961,
  serialized_end=989,
)


_USEPLENARYCATALOGVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryCatalogViewRequest',
  full_name='dlkit.proto.cataloging.UsePlenaryCatalogViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=991,
  serialized_end=1021,
)


_GETCATALOGREPLY = _descriptor.Descriptor(
  name='GetCatalogReply',
  full_name='dlkit.proto.cataloging.GetCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog', full_name='dlkit.proto.cataloging.GetCatalogReply.catalog', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1023,
  serialized_end=1090,
)


_GETCATALOGREQUEST = _descriptor.Descriptor(
  name='GetCatalogRequest',
  full_name='dlkit.proto.cataloging.GetCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1092,
  serialized_end=1167,
)


_GETCATALOGSBYIDSREQUEST = _descriptor.Descriptor(
  name='GetCatalogsByIdsRequest',
  full_name='dlkit.proto.cataloging.GetCatalogsByIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_ids', full_name='dlkit.proto.cataloging.GetCatalogsByIdsRequest.catalog_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1169,
  serialized_end=1251,
)


_GETCATALOGSBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetCatalogsByGenusTypeRequest',
  full_name='dlkit.proto.cataloging.GetCatalogsByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_genus_type', full_name='dlkit.proto.cataloging.GetCatalogsByGenusTypeRequest.catalog_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1253,
  serialized_end=1352,
)


_GETCATALOGSBYPARENTGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetCatalogsByParentGenusTypeRequest',
  full_name='dlkit.proto.cataloging.GetCatalogsByParentGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_genus_type', full_name='dlkit.proto.cataloging.GetCatalogsByParentGenusTypeRequest.catalog_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1354,
  serialized_end=1459,
)


_GETCATALOGSBYRECORDTYPEREQUEST = _descriptor.Descriptor(
  name='GetCatalogsByRecordTypeRequest',
  full_name='dlkit.proto.cataloging.GetCatalogsByRecordTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_record_type', full_name='dlkit.proto.cataloging.GetCatalogsByRecordTypeRequest.catalog_record_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1461,
  serialized_end=1562,
)


_GETCATALOGSBYPROVIDERREQUEST = _descriptor.Descriptor(
  name='GetCatalogsByProviderRequest',
  full_name='dlkit.proto.cataloging.GetCatalogsByProviderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.cataloging.GetCatalogsByProviderRequest.resource_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1564,
  serialized_end=1651,
)


_GETCATALOGSREQUEST = _descriptor.Descriptor(
  name='GetCatalogsRequest',
  full_name='dlkit.proto.cataloging.GetCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1653,
  serialized_end=1673,
)


_CANSEARCHCATALOGSREPLY = _descriptor.Descriptor(
  name='CanSearchCatalogsReply',
  full_name='dlkit.proto.cataloging.CanSearchCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_search_catalogs', full_name='dlkit.proto.cataloging.CanSearchCatalogsReply.can_search_catalogs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1675,
  serialized_end=1728,
)


_CANSEARCHCATALOGSREQUEST = _descriptor.Descriptor(
  name='CanSearchCatalogsRequest',
  full_name='dlkit.proto.cataloging.CanSearchCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1730,
  serialized_end=1756,
)


_GETCATALOGQUERYREPLY = _descriptor.Descriptor(
  name='GetCatalogQueryReply',
  full_name='dlkit.proto.cataloging.GetCatalogQueryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_query', full_name='dlkit.proto.cataloging.GetCatalogQueryReply.catalog_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1758,
  serialized_end=1841,
)


_GETCATALOGQUERYREQUEST = _descriptor.Descriptor(
  name='GetCatalogQueryRequest',
  full_name='dlkit.proto.cataloging.GetCatalogQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1843,
  serialized_end=1867,
)


_GETCATALOGSBYQUERYREQUEST = _descriptor.Descriptor(
  name='GetCatalogsByQueryRequest',
  full_name='dlkit.proto.cataloging.GetCatalogsByQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_query', full_name='dlkit.proto.cataloging.GetCatalogsByQueryRequest.catalog_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1869,
  serialized_end=1957,
)


_CANCREATECATALOGSREPLY = _descriptor.Descriptor(
  name='CanCreateCatalogsReply',
  full_name='dlkit.proto.cataloging.CanCreateCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_catalogs', full_name='dlkit.proto.cataloging.CanCreateCatalogsReply.can_create_catalogs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1959,
  serialized_end=2012,
)


_CANCREATECATALOGSREQUEST = _descriptor.Descriptor(
  name='CanCreateCatalogsRequest',
  full_name='dlkit.proto.cataloging.CanCreateCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2014,
  serialized_end=2040,
)


_CANCREATECATALOGWITHRECORDTYPESREPLY = _descriptor.Descriptor(
  name='CanCreateCatalogWithRecordTypesReply',
  full_name='dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_catalog_with_record_types', full_name='dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesReply.can_create_catalog_with_record_types', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2042,
  serialized_end=2126,
)


_CANCREATECATALOGWITHRECORDTYPESREQUEST = _descriptor.Descriptor(
  name='CanCreateCatalogWithRecordTypesRequest',
  full_name='dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_record_types', full_name='dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesRequest.catalog_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2128,
  serialized_end=2238,
)


_GETCATALOGFORMFORCREATEREPLY = _descriptor.Descriptor(
  name='GetCatalogFormForCreateReply',
  full_name='dlkit.proto.cataloging.GetCatalogFormForCreateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_form', full_name='dlkit.proto.cataloging.GetCatalogFormForCreateReply.catalog_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2240,
  serialized_end=2329,
)


_GETCATALOGFORMFORCREATEREQUEST = _descriptor.Descriptor(
  name='GetCatalogFormForCreateRequest',
  full_name='dlkit.proto.cataloging.GetCatalogFormForCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_record_types', full_name='dlkit.proto.cataloging.GetCatalogFormForCreateRequest.catalog_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2331,
  serialized_end=2433,
)


_CREATECATALOGREPLY = _descriptor.Descriptor(
  name='CreateCatalogReply',
  full_name='dlkit.proto.cataloging.CreateCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog', full_name='dlkit.proto.cataloging.CreateCatalogReply.catalog', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2435,
  serialized_end=2505,
)


_CREATECATALOGREQUEST = _descriptor.Descriptor(
  name='CreateCatalogRequest',
  full_name='dlkit.proto.cataloging.CreateCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_form', full_name='dlkit.proto.cataloging.CreateCatalogRequest.catalog_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2507,
  serialized_end=2588,
)


_CANUPDATECATALOGSREPLY = _descriptor.Descriptor(
  name='CanUpdateCatalogsReply',
  full_name='dlkit.proto.cataloging.CanUpdateCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_update_catalogs', full_name='dlkit.proto.cataloging.CanUpdateCatalogsReply.can_update_catalogs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2590,
  serialized_end=2643,
)


_CANUPDATECATALOGSREQUEST = _descriptor.Descriptor(
  name='CanUpdateCatalogsRequest',
  full_name='dlkit.proto.cataloging.CanUpdateCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2645,
  serialized_end=2671,
)


_GETCATALOGFORMFORUPDATEREPLY = _descriptor.Descriptor(
  name='GetCatalogFormForUpdateReply',
  full_name='dlkit.proto.cataloging.GetCatalogFormForUpdateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_form', full_name='dlkit.proto.cataloging.GetCatalogFormForUpdateReply.catalog_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2673,
  serialized_end=2762,
)


_GETCATALOGFORMFORUPDATEREQUEST = _descriptor.Descriptor(
  name='GetCatalogFormForUpdateRequest',
  full_name='dlkit.proto.cataloging.GetCatalogFormForUpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetCatalogFormForUpdateRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2764,
  serialized_end=2852,
)


_UPDATECATALOGREPLY = _descriptor.Descriptor(
  name='UpdateCatalogReply',
  full_name='dlkit.proto.cataloging.UpdateCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2854,
  serialized_end=2874,
)


_UPDATECATALOGREQUEST = _descriptor.Descriptor(
  name='UpdateCatalogRequest',
  full_name='dlkit.proto.cataloging.UpdateCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_form', full_name='dlkit.proto.cataloging.UpdateCatalogRequest.catalog_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2876,
  serialized_end=2957,
)


_CANDELETECATALOGSREPLY = _descriptor.Descriptor(
  name='CanDeleteCatalogsReply',
  full_name='dlkit.proto.cataloging.CanDeleteCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_delete_catalogs', full_name='dlkit.proto.cataloging.CanDeleteCatalogsReply.can_delete_catalogs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2959,
  serialized_end=3012,
)


_CANDELETECATALOGSREQUEST = _descriptor.Descriptor(
  name='CanDeleteCatalogsRequest',
  full_name='dlkit.proto.cataloging.CanDeleteCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3014,
  serialized_end=3040,
)


_DELETECATALOGREPLY = _descriptor.Descriptor(
  name='DeleteCatalogReply',
  full_name='dlkit.proto.cataloging.DeleteCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3042,
  serialized_end=3062,
)


_DELETECATALOGREQUEST = _descriptor.Descriptor(
  name='DeleteCatalogRequest',
  full_name='dlkit.proto.cataloging.DeleteCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.DeleteCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3064,
  serialized_end=3142,
)


_CANMANAGECATALOGALIASESREPLY = _descriptor.Descriptor(
  name='CanManageCatalogAliasesReply',
  full_name='dlkit.proto.cataloging.CanManageCatalogAliasesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_manage_catalog_aliases', full_name='dlkit.proto.cataloging.CanManageCatalogAliasesReply.can_manage_catalog_aliases', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3144,
  serialized_end=3210,
)


_CANMANAGECATALOGALIASESREQUEST = _descriptor.Descriptor(
  name='CanManageCatalogAliasesRequest',
  full_name='dlkit.proto.cataloging.CanManageCatalogAliasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3212,
  serialized_end=3244,
)


_ALIASCATALOGREPLY = _descriptor.Descriptor(
  name='AliasCatalogReply',
  full_name='dlkit.proto.cataloging.AliasCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3246,
  serialized_end=3265,
)


_ALIASCATALOGREQUEST = _descriptor.Descriptor(
  name='AliasCatalogRequest',
  full_name='dlkit.proto.cataloging.AliasCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias_id', full_name='dlkit.proto.cataloging.AliasCatalogRequest.alias_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.AliasCatalogRequest.catalog_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3268,
  serialized_end=3399,
)


_GETCATALOGHIERARCHYIDREPLY = _descriptor.Descriptor(
  name='GetCatalogHierarchyIdReply',
  full_name='dlkit.proto.cataloging.GetCatalogHierarchyIdReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.cataloging.GetCatalogHierarchyIdReply.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3401,
  serialized_end=3477,
)


_GETCATALOGHIERARCHYIDREQUEST = _descriptor.Descriptor(
  name='GetCatalogHierarchyIdRequest',
  full_name='dlkit.proto.cataloging.GetCatalogHierarchyIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3479,
  serialized_end=3509,
)


_GETCATALOGHIERARCHYREPLY = _descriptor.Descriptor(
  name='GetCatalogHierarchyReply',
  full_name='dlkit.proto.cataloging.GetCatalogHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hierarchy', full_name='dlkit.proto.cataloging.GetCatalogHierarchyReply.hierarchy', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3511,
  serialized_end=3590,
)


_GETCATALOGHIERARCHYREQUEST = _descriptor.Descriptor(
  name='GetCatalogHierarchyRequest',
  full_name='dlkit.proto.cataloging.GetCatalogHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3592,
  serialized_end=3620,
)


_CANACCESSCATALOGHIERARCHYREPLY = _descriptor.Descriptor(
  name='CanAccessCatalogHierarchyReply',
  full_name='dlkit.proto.cataloging.CanAccessCatalogHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_access_catalog_hierarchy', full_name='dlkit.proto.cataloging.CanAccessCatalogHierarchyReply.can_access_catalog_hierarchy', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3622,
  serialized_end=3692,
)


_CANACCESSCATALOGHIERARCHYREQUEST = _descriptor.Descriptor(
  name='CanAccessCatalogHierarchyRequest',
  full_name='dlkit.proto.cataloging.CanAccessCatalogHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3694,
  serialized_end=3728,
)


_GETROOTCATALOGIDSREQUEST = _descriptor.Descriptor(
  name='GetRootCatalogIdsRequest',
  full_name='dlkit.proto.cataloging.GetRootCatalogIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3730,
  serialized_end=3756,
)


_GETROOTCATALOGSREQUEST = _descriptor.Descriptor(
  name='GetRootCatalogsRequest',
  full_name='dlkit.proto.cataloging.GetRootCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3758,
  serialized_end=3782,
)


_HASPARENTCATALOGSREPLY = _descriptor.Descriptor(
  name='HasParentCatalogsReply',
  full_name='dlkit.proto.cataloging.HasParentCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='has_parent_catalogs', full_name='dlkit.proto.cataloging.HasParentCatalogsReply.has_parent_catalogs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3784,
  serialized_end=3837,
)


_HASPARENTCATALOGSREQUEST = _descriptor.Descriptor(
  name='HasParentCatalogsRequest',
  full_name='dlkit.proto.cataloging.HasParentCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.HasParentCatalogsRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3839,
  serialized_end=3921,
)


_ISPARENTOFCATALOGREPLY = _descriptor.Descriptor(
  name='IsParentOfCatalogReply',
  full_name='dlkit.proto.cataloging.IsParentOfCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_parent_of_catalog', full_name='dlkit.proto.cataloging.IsParentOfCatalogReply.is_parent_of_catalog', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3923,
  serialized_end=3977,
)


_ISPARENTOFCATALOGREQUEST = _descriptor.Descriptor(
  name='IsParentOfCatalogRequest',
  full_name='dlkit.proto.cataloging.IsParentOfCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.IsParentOfCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.cataloging.IsParentOfCatalogRequest.id_', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3980,
  serialized_end=4111,
)


_GETPARENTCATALOGIDSREQUEST = _descriptor.Descriptor(
  name='GetParentCatalogIdsRequest',
  full_name='dlkit.proto.cataloging.GetParentCatalogIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetParentCatalogIdsRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4113,
  serialized_end=4197,
)


_GETPARENTCATALOGSREQUEST = _descriptor.Descriptor(
  name='GetParentCatalogsRequest',
  full_name='dlkit.proto.cataloging.GetParentCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetParentCatalogsRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4199,
  serialized_end=4281,
)


_ISANCESTOROFCATALOGREPLY = _descriptor.Descriptor(
  name='IsAncestorOfCatalogReply',
  full_name='dlkit.proto.cataloging.IsAncestorOfCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_ancestor_of_catalog', full_name='dlkit.proto.cataloging.IsAncestorOfCatalogReply.is_ancestor_of_catalog', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4283,
  serialized_end=4341,
)


_ISANCESTOROFCATALOGREQUEST = _descriptor.Descriptor(
  name='IsAncestorOfCatalogRequest',
  full_name='dlkit.proto.cataloging.IsAncestorOfCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.IsAncestorOfCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.cataloging.IsAncestorOfCatalogRequest.id_', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4344,
  serialized_end=4477,
)


_HASCHILDCATALOGSREPLY = _descriptor.Descriptor(
  name='HasChildCatalogsReply',
  full_name='dlkit.proto.cataloging.HasChildCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='has_child_catalogs', full_name='dlkit.proto.cataloging.HasChildCatalogsReply.has_child_catalogs', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4479,
  serialized_end=4530,
)


_HASCHILDCATALOGSREQUEST = _descriptor.Descriptor(
  name='HasChildCatalogsRequest',
  full_name='dlkit.proto.cataloging.HasChildCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.HasChildCatalogsRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4532,
  serialized_end=4613,
)


_ISCHILDOFCATALOGREPLY = _descriptor.Descriptor(
  name='IsChildOfCatalogReply',
  full_name='dlkit.proto.cataloging.IsChildOfCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_child_of_catalog', full_name='dlkit.proto.cataloging.IsChildOfCatalogReply.is_child_of_catalog', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4615,
  serialized_end=4667,
)


_ISCHILDOFCATALOGREQUEST = _descriptor.Descriptor(
  name='IsChildOfCatalogRequest',
  full_name='dlkit.proto.cataloging.IsChildOfCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.IsChildOfCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.cataloging.IsChildOfCatalogRequest.id_', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4670,
  serialized_end=4800,
)


_GETCHILDCATALOGIDSREQUEST = _descriptor.Descriptor(
  name='GetChildCatalogIdsRequest',
  full_name='dlkit.proto.cataloging.GetChildCatalogIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetChildCatalogIdsRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4802,
  serialized_end=4885,
)


_GETCHILDCATALOGSREQUEST = _descriptor.Descriptor(
  name='GetChildCatalogsRequest',
  full_name='dlkit.proto.cataloging.GetChildCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetChildCatalogsRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4887,
  serialized_end=4968,
)


_ISDESCENDANTOFCATALOGREPLY = _descriptor.Descriptor(
  name='IsDescendantOfCatalogReply',
  full_name='dlkit.proto.cataloging.IsDescendantOfCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_descendant_of_catalog', full_name='dlkit.proto.cataloging.IsDescendantOfCatalogReply.is_descendant_of_catalog', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4970,
  serialized_end=5032,
)


_ISDESCENDANTOFCATALOGREQUEST = _descriptor.Descriptor(
  name='IsDescendantOfCatalogRequest',
  full_name='dlkit.proto.cataloging.IsDescendantOfCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.IsDescendantOfCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.cataloging.IsDescendantOfCatalogRequest.id_', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5035,
  serialized_end=5170,
)


_GETCATALOGNODEIDSREPLY = _descriptor.Descriptor(
  name='GetCatalogNodeIdsReply',
  full_name='dlkit.proto.cataloging.GetCatalogNodeIdsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='dlkit.proto.cataloging.GetCatalogNodeIdsReply.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5172,
  serialized_end=5239,
)


_GETCATALOGNODEIDSREQUEST = _descriptor.Descriptor(
  name='GetCatalogNodeIdsRequest',
  full_name='dlkit.proto.cataloging.GetCatalogNodeIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ancestor_levels', full_name='dlkit.proto.cataloging.GetCatalogNodeIdsRequest.ancestor_levels', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetCatalogNodeIdsRequest.catalog_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='descendant_levels', full_name='dlkit.proto.cataloging.GetCatalogNodeIdsRequest.descendant_levels', index=2,
      number=3, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include_siblings', full_name='dlkit.proto.cataloging.GetCatalogNodeIdsRequest.include_siblings', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5242,
  serialized_end=5402,
)


_GETCATALOGNODESREPLY = _descriptor.Descriptor(
  name='GetCatalogNodesReply',
  full_name='dlkit.proto.cataloging.GetCatalogNodesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_node', full_name='dlkit.proto.cataloging.GetCatalogNodesReply.catalog_node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5404,
  serialized_end=5485,
)


_GETCATALOGNODESREQUEST = _descriptor.Descriptor(
  name='GetCatalogNodesRequest',
  full_name='dlkit.proto.cataloging.GetCatalogNodesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ancestor_levels', full_name='dlkit.proto.cataloging.GetCatalogNodesRequest.ancestor_levels', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.GetCatalogNodesRequest.catalog_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='descendant_levels', full_name='dlkit.proto.cataloging.GetCatalogNodesRequest.descendant_levels', index=2,
      number=3, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include_siblings', full_name='dlkit.proto.cataloging.GetCatalogNodesRequest.include_siblings', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5488,
  serialized_end=5646,
)


_CANMODIFYCATALOGHIERARCHYREPLY = _descriptor.Descriptor(
  name='CanModifyCatalogHierarchyReply',
  full_name='dlkit.proto.cataloging.CanModifyCatalogHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_modify_catalog_hierarchy', full_name='dlkit.proto.cataloging.CanModifyCatalogHierarchyReply.can_modify_catalog_hierarchy', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5648,
  serialized_end=5718,
)


_CANMODIFYCATALOGHIERARCHYREQUEST = _descriptor.Descriptor(
  name='CanModifyCatalogHierarchyRequest',
  full_name='dlkit.proto.cataloging.CanModifyCatalogHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5720,
  serialized_end=5754,
)


_ADDROOTCATALOGREPLY = _descriptor.Descriptor(
  name='AddRootCatalogReply',
  full_name='dlkit.proto.cataloging.AddRootCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5756,
  serialized_end=5777,
)


_ADDROOTCATALOGREQUEST = _descriptor.Descriptor(
  name='AddRootCatalogRequest',
  full_name='dlkit.proto.cataloging.AddRootCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.AddRootCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5779,
  serialized_end=5858,
)


_REMOVEROOTCATALOGREPLY = _descriptor.Descriptor(
  name='RemoveRootCatalogReply',
  full_name='dlkit.proto.cataloging.RemoveRootCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5860,
  serialized_end=5884,
)


_REMOVEROOTCATALOGREQUEST = _descriptor.Descriptor(
  name='RemoveRootCatalogRequest',
  full_name='dlkit.proto.cataloging.RemoveRootCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.RemoveRootCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5886,
  serialized_end=5968,
)


_ADDCHILDCATALOGREPLY = _descriptor.Descriptor(
  name='AddChildCatalogReply',
  full_name='dlkit.proto.cataloging.AddChildCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5970,
  serialized_end=5992,
)


_ADDCHILDCATALOGREQUEST = _descriptor.Descriptor(
  name='AddChildCatalogRequest',
  full_name='dlkit.proto.cataloging.AddChildCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.AddChildCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='child_id', full_name='dlkit.proto.cataloging.AddChildCatalogRequest.child_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5995,
  serialized_end=6129,
)


_REMOVECHILDCATALOGREPLY = _descriptor.Descriptor(
  name='RemoveChildCatalogReply',
  full_name='dlkit.proto.cataloging.RemoveChildCatalogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6131,
  serialized_end=6156,
)


_REMOVECHILDCATALOGREQUEST = _descriptor.Descriptor(
  name='RemoveChildCatalogRequest',
  full_name='dlkit.proto.cataloging.RemoveChildCatalogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.RemoveChildCatalogRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='child_id', full_name='dlkit.proto.cataloging.RemoveChildCatalogRequest.child_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6159,
  serialized_end=6296,
)


_REMOVECHILDCATALOGSREPLY = _descriptor.Descriptor(
  name='RemoveChildCatalogsReply',
  full_name='dlkit.proto.cataloging.RemoveChildCatalogsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6298,
  serialized_end=6324,
)


_REMOVECHILDCATALOGSREQUEST = _descriptor.Descriptor(
  name='RemoveChildCatalogsRequest',
  full_name='dlkit.proto.cataloging.RemoveChildCatalogsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='catalog_id', full_name='dlkit.proto.cataloging.RemoveChildCatalogsRequest.catalog_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6326,
  serialized_end=6410,
)

_CATALOG.fields_by_name['description'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_CATALOG.fields_by_name['displayName'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_CATALOG.fields_by_name['genusTypeId'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_CATALOG.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_CATALOG.fields_by_name['recordTypeIds'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_CATALOGLIST.fields_by_name['catalogs'].message_type = _CATALOG
_CATALOGNODELIST.fields_by_name['catalog_nodes'].message_type = _CATALOGNODE
_GETCATALOGREPLY.fields_by_name['catalog'].message_type = _CATALOG
_GETCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCATALOGSBYIDSREQUEST.fields_by_name['catalog_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCATALOGSBYGENUSTYPEREQUEST.fields_by_name['catalog_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCATALOGSBYPARENTGENUSTYPEREQUEST.fields_by_name['catalog_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCATALOGSBYRECORDTYPEREQUEST.fields_by_name['catalog_record_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCATALOGSBYPROVIDERREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCATALOGQUERYREPLY.fields_by_name['catalog_query'].message_type = _CATALOGQUERY
_GETCATALOGSBYQUERYREQUEST.fields_by_name['catalog_query'].message_type = _CATALOGQUERY
_CANCREATECATALOGWITHRECORDTYPESREQUEST.fields_by_name['catalog_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCATALOGFORMFORCREATEREPLY.fields_by_name['catalog_form'].message_type = _CATALOGFORM
_GETCATALOGFORMFORCREATEREQUEST.fields_by_name['catalog_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_CREATECATALOGREPLY.fields_by_name['catalog'].message_type = _CATALOG
_CREATECATALOGREQUEST.fields_by_name['catalog_form'].message_type = _CATALOGFORM
_GETCATALOGFORMFORUPDATEREPLY.fields_by_name['catalog_form'].message_type = _CATALOGFORM
_GETCATALOGFORMFORUPDATEREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UPDATECATALOGREQUEST.fields_by_name['catalog_form'].message_type = _CATALOGFORM
_DELETECATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASCATALOGREQUEST.fields_by_name['alias_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCATALOGHIERARCHYIDREPLY.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCATALOGHIERARCHYREPLY.fields_by_name['hierarchy'].message_type = dlkit_dot_proto_dot_hierarchy__pb2._HIERARCHY
_HASPARENTCATALOGSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISPARENTOFCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISPARENTOFCATALOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETPARENTCATALOGIDSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETPARENTCATALOGSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISANCESTOROFCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISANCESTOROFCATALOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_HASCHILDCATALOGSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISCHILDOFCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISCHILDOFCATALOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCHILDCATALOGIDSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCHILDCATALOGSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISDESCENDANTOFCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISDESCENDANTOFCATALOGREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCATALOGNODEIDSREPLY.fields_by_name['node'].message_type = dlkit_dot_proto_dot_hierarchy__pb2._NODE
_GETCATALOGNODEIDSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCATALOGNODESREPLY.fields_by_name['catalog_node'].message_type = _CATALOGNODE
_GETCATALOGNODESREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDROOTCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVEROOTCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCHILDCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCHILDCATALOGREQUEST.fields_by_name['child_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDCATALOGREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDCATALOGREQUEST.fields_by_name['child_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDCATALOGSREQUEST.fields_by_name['catalog_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
DESCRIPTOR.message_types_by_name['Catalog'] = _CATALOG
DESCRIPTOR.message_types_by_name['CatalogQuery'] = _CATALOGQUERY
DESCRIPTOR.message_types_by_name['CatalogQueryInspector'] = _CATALOGQUERYINSPECTOR
DESCRIPTOR.message_types_by_name['CatalogForm'] = _CATALOGFORM
DESCRIPTOR.message_types_by_name['CatalogSearchOrder'] = _CATALOGSEARCHORDER
DESCRIPTOR.message_types_by_name['CatalogSearch'] = _CATALOGSEARCH
DESCRIPTOR.message_types_by_name['CatalogSearchResults'] = _CATALOGSEARCHRESULTS
DESCRIPTOR.message_types_by_name['CatalogList'] = _CATALOGLIST
DESCRIPTOR.message_types_by_name['CatalogNode'] = _CATALOGNODE
DESCRIPTOR.message_types_by_name['CatalogNodeList'] = _CATALOGNODELIST
DESCRIPTOR.message_types_by_name['CanLookupCatalogsReply'] = _CANLOOKUPCATALOGSREPLY
DESCRIPTOR.message_types_by_name['CanLookupCatalogsRequest'] = _CANLOOKUPCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeCatalogViewReply'] = _USECOMPARATIVECATALOGVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeCatalogViewRequest'] = _USECOMPARATIVECATALOGVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryCatalogViewReply'] = _USEPLENARYCATALOGVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryCatalogViewRequest'] = _USEPLENARYCATALOGVIEWREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogReply'] = _GETCATALOGREPLY
DESCRIPTOR.message_types_by_name['GetCatalogRequest'] = _GETCATALOGREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogsByIdsRequest'] = _GETCATALOGSBYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogsByGenusTypeRequest'] = _GETCATALOGSBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogsByParentGenusTypeRequest'] = _GETCATALOGSBYPARENTGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogsByRecordTypeRequest'] = _GETCATALOGSBYRECORDTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogsByProviderRequest'] = _GETCATALOGSBYPROVIDERREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogsRequest'] = _GETCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['CanSearchCatalogsReply'] = _CANSEARCHCATALOGSREPLY
DESCRIPTOR.message_types_by_name['CanSearchCatalogsRequest'] = _CANSEARCHCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogQueryReply'] = _GETCATALOGQUERYREPLY
DESCRIPTOR.message_types_by_name['GetCatalogQueryRequest'] = _GETCATALOGQUERYREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogsByQueryRequest'] = _GETCATALOGSBYQUERYREQUEST
DESCRIPTOR.message_types_by_name['CanCreateCatalogsReply'] = _CANCREATECATALOGSREPLY
DESCRIPTOR.message_types_by_name['CanCreateCatalogsRequest'] = _CANCREATECATALOGSREQUEST
DESCRIPTOR.message_types_by_name['CanCreateCatalogWithRecordTypesReply'] = _CANCREATECATALOGWITHRECORDTYPESREPLY
DESCRIPTOR.message_types_by_name['CanCreateCatalogWithRecordTypesRequest'] = _CANCREATECATALOGWITHRECORDTYPESREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogFormForCreateReply'] = _GETCATALOGFORMFORCREATEREPLY
DESCRIPTOR.message_types_by_name['GetCatalogFormForCreateRequest'] = _GETCATALOGFORMFORCREATEREQUEST
DESCRIPTOR.message_types_by_name['CreateCatalogReply'] = _CREATECATALOGREPLY
DESCRIPTOR.message_types_by_name['CreateCatalogRequest'] = _CREATECATALOGREQUEST
DESCRIPTOR.message_types_by_name['CanUpdateCatalogsReply'] = _CANUPDATECATALOGSREPLY
DESCRIPTOR.message_types_by_name['CanUpdateCatalogsRequest'] = _CANUPDATECATALOGSREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogFormForUpdateReply'] = _GETCATALOGFORMFORUPDATEREPLY
DESCRIPTOR.message_types_by_name['GetCatalogFormForUpdateRequest'] = _GETCATALOGFORMFORUPDATEREQUEST
DESCRIPTOR.message_types_by_name['UpdateCatalogReply'] = _UPDATECATALOGREPLY
DESCRIPTOR.message_types_by_name['UpdateCatalogRequest'] = _UPDATECATALOGREQUEST
DESCRIPTOR.message_types_by_name['CanDeleteCatalogsReply'] = _CANDELETECATALOGSREPLY
DESCRIPTOR.message_types_by_name['CanDeleteCatalogsRequest'] = _CANDELETECATALOGSREQUEST
DESCRIPTOR.message_types_by_name['DeleteCatalogReply'] = _DELETECATALOGREPLY
DESCRIPTOR.message_types_by_name['DeleteCatalogRequest'] = _DELETECATALOGREQUEST
DESCRIPTOR.message_types_by_name['CanManageCatalogAliasesReply'] = _CANMANAGECATALOGALIASESREPLY
DESCRIPTOR.message_types_by_name['CanManageCatalogAliasesRequest'] = _CANMANAGECATALOGALIASESREQUEST
DESCRIPTOR.message_types_by_name['AliasCatalogReply'] = _ALIASCATALOGREPLY
DESCRIPTOR.message_types_by_name['AliasCatalogRequest'] = _ALIASCATALOGREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogHierarchyIdReply'] = _GETCATALOGHIERARCHYIDREPLY
DESCRIPTOR.message_types_by_name['GetCatalogHierarchyIdRequest'] = _GETCATALOGHIERARCHYIDREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogHierarchyReply'] = _GETCATALOGHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['GetCatalogHierarchyRequest'] = _GETCATALOGHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['CanAccessCatalogHierarchyReply'] = _CANACCESSCATALOGHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['CanAccessCatalogHierarchyRequest'] = _CANACCESSCATALOGHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['GetRootCatalogIdsRequest'] = _GETROOTCATALOGIDSREQUEST
DESCRIPTOR.message_types_by_name['GetRootCatalogsRequest'] = _GETROOTCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['HasParentCatalogsReply'] = _HASPARENTCATALOGSREPLY
DESCRIPTOR.message_types_by_name['HasParentCatalogsRequest'] = _HASPARENTCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['IsParentOfCatalogReply'] = _ISPARENTOFCATALOGREPLY
DESCRIPTOR.message_types_by_name['IsParentOfCatalogRequest'] = _ISPARENTOFCATALOGREQUEST
DESCRIPTOR.message_types_by_name['GetParentCatalogIdsRequest'] = _GETPARENTCATALOGIDSREQUEST
DESCRIPTOR.message_types_by_name['GetParentCatalogsRequest'] = _GETPARENTCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['IsAncestorOfCatalogReply'] = _ISANCESTOROFCATALOGREPLY
DESCRIPTOR.message_types_by_name['IsAncestorOfCatalogRequest'] = _ISANCESTOROFCATALOGREQUEST
DESCRIPTOR.message_types_by_name['HasChildCatalogsReply'] = _HASCHILDCATALOGSREPLY
DESCRIPTOR.message_types_by_name['HasChildCatalogsRequest'] = _HASCHILDCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['IsChildOfCatalogReply'] = _ISCHILDOFCATALOGREPLY
DESCRIPTOR.message_types_by_name['IsChildOfCatalogRequest'] = _ISCHILDOFCATALOGREQUEST
DESCRIPTOR.message_types_by_name['GetChildCatalogIdsRequest'] = _GETCHILDCATALOGIDSREQUEST
DESCRIPTOR.message_types_by_name['GetChildCatalogsRequest'] = _GETCHILDCATALOGSREQUEST
DESCRIPTOR.message_types_by_name['IsDescendantOfCatalogReply'] = _ISDESCENDANTOFCATALOGREPLY
DESCRIPTOR.message_types_by_name['IsDescendantOfCatalogRequest'] = _ISDESCENDANTOFCATALOGREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogNodeIdsReply'] = _GETCATALOGNODEIDSREPLY
DESCRIPTOR.message_types_by_name['GetCatalogNodeIdsRequest'] = _GETCATALOGNODEIDSREQUEST
DESCRIPTOR.message_types_by_name['GetCatalogNodesReply'] = _GETCATALOGNODESREPLY
DESCRIPTOR.message_types_by_name['GetCatalogNodesRequest'] = _GETCATALOGNODESREQUEST
DESCRIPTOR.message_types_by_name['CanModifyCatalogHierarchyReply'] = _CANMODIFYCATALOGHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['CanModifyCatalogHierarchyRequest'] = _CANMODIFYCATALOGHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['AddRootCatalogReply'] = _ADDROOTCATALOGREPLY
DESCRIPTOR.message_types_by_name['AddRootCatalogRequest'] = _ADDROOTCATALOGREQUEST
DESCRIPTOR.message_types_by_name['RemoveRootCatalogReply'] = _REMOVEROOTCATALOGREPLY
DESCRIPTOR.message_types_by_name['RemoveRootCatalogRequest'] = _REMOVEROOTCATALOGREQUEST
DESCRIPTOR.message_types_by_name['AddChildCatalogReply'] = _ADDCHILDCATALOGREPLY
DESCRIPTOR.message_types_by_name['AddChildCatalogRequest'] = _ADDCHILDCATALOGREQUEST
DESCRIPTOR.message_types_by_name['RemoveChildCatalogReply'] = _REMOVECHILDCATALOGREPLY
DESCRIPTOR.message_types_by_name['RemoveChildCatalogRequest'] = _REMOVECHILDCATALOGREQUEST
DESCRIPTOR.message_types_by_name['RemoveChildCatalogsReply'] = _REMOVECHILDCATALOGSREPLY
DESCRIPTOR.message_types_by_name['RemoveChildCatalogsRequest'] = _REMOVECHILDCATALOGSREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Catalog = _reflection.GeneratedProtocolMessageType('Catalog', (_message.Message,), dict(
  DESCRIPTOR = _CATALOG,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.Catalog)
  ))
_sym_db.RegisterMessage(Catalog)

CatalogQuery = _reflection.GeneratedProtocolMessageType('CatalogQuery', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGQUERY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogQuery)
  ))
_sym_db.RegisterMessage(CatalogQuery)

CatalogQueryInspector = _reflection.GeneratedProtocolMessageType('CatalogQueryInspector', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGQUERYINSPECTOR,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogQueryInspector)
  ))
_sym_db.RegisterMessage(CatalogQueryInspector)

CatalogForm = _reflection.GeneratedProtocolMessageType('CatalogForm', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGFORM,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogForm)
  ))
_sym_db.RegisterMessage(CatalogForm)

CatalogSearchOrder = _reflection.GeneratedProtocolMessageType('CatalogSearchOrder', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGSEARCHORDER,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogSearchOrder)
  ))
_sym_db.RegisterMessage(CatalogSearchOrder)

CatalogSearch = _reflection.GeneratedProtocolMessageType('CatalogSearch', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGSEARCH,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogSearch)
  ))
_sym_db.RegisterMessage(CatalogSearch)

CatalogSearchResults = _reflection.GeneratedProtocolMessageType('CatalogSearchResults', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGSEARCHRESULTS,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogSearchResults)
  ))
_sym_db.RegisterMessage(CatalogSearchResults)

CatalogList = _reflection.GeneratedProtocolMessageType('CatalogList', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGLIST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogList)
  ))
_sym_db.RegisterMessage(CatalogList)

CatalogNode = _reflection.GeneratedProtocolMessageType('CatalogNode', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGNODE,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogNode)
  ))
_sym_db.RegisterMessage(CatalogNode)

CatalogNodeList = _reflection.GeneratedProtocolMessageType('CatalogNodeList', (_message.Message,), dict(
  DESCRIPTOR = _CATALOGNODELIST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CatalogNodeList)
  ))
_sym_db.RegisterMessage(CatalogNodeList)

CanLookupCatalogsReply = _reflection.GeneratedProtocolMessageType('CanLookupCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPCATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanLookupCatalogsReply)
  ))
_sym_db.RegisterMessage(CanLookupCatalogsReply)

CanLookupCatalogsRequest = _reflection.GeneratedProtocolMessageType('CanLookupCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanLookupCatalogsRequest)
  ))
_sym_db.RegisterMessage(CanLookupCatalogsRequest)

UseComparativeCatalogViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeCatalogViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVECATALOGVIEWREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.UseComparativeCatalogViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeCatalogViewReply)

UseComparativeCatalogViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeCatalogViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVECATALOGVIEWREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.UseComparativeCatalogViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeCatalogViewRequest)

UsePlenaryCatalogViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryCatalogViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYCATALOGVIEWREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.UsePlenaryCatalogViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryCatalogViewReply)

UsePlenaryCatalogViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryCatalogViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYCATALOGVIEWREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.UsePlenaryCatalogViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryCatalogViewRequest)

GetCatalogReply = _reflection.GeneratedProtocolMessageType('GetCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogReply)
  ))
_sym_db.RegisterMessage(GetCatalogReply)

GetCatalogRequest = _reflection.GeneratedProtocolMessageType('GetCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogRequest)
  ))
_sym_db.RegisterMessage(GetCatalogRequest)

GetCatalogsByIdsRequest = _reflection.GeneratedProtocolMessageType('GetCatalogsByIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGSBYIDSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogsByIdsRequest)
  ))
_sym_db.RegisterMessage(GetCatalogsByIdsRequest)

GetCatalogsByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetCatalogsByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGSBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogsByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetCatalogsByGenusTypeRequest)

GetCatalogsByParentGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetCatalogsByParentGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGSBYPARENTGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogsByParentGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetCatalogsByParentGenusTypeRequest)

GetCatalogsByRecordTypeRequest = _reflection.GeneratedProtocolMessageType('GetCatalogsByRecordTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGSBYRECORDTYPEREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogsByRecordTypeRequest)
  ))
_sym_db.RegisterMessage(GetCatalogsByRecordTypeRequest)

GetCatalogsByProviderRequest = _reflection.GeneratedProtocolMessageType('GetCatalogsByProviderRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGSBYPROVIDERREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogsByProviderRequest)
  ))
_sym_db.RegisterMessage(GetCatalogsByProviderRequest)

GetCatalogsRequest = _reflection.GeneratedProtocolMessageType('GetCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogsRequest)
  ))
_sym_db.RegisterMessage(GetCatalogsRequest)

CanSearchCatalogsReply = _reflection.GeneratedProtocolMessageType('CanSearchCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHCATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanSearchCatalogsReply)
  ))
_sym_db.RegisterMessage(CanSearchCatalogsReply)

CanSearchCatalogsRequest = _reflection.GeneratedProtocolMessageType('CanSearchCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanSearchCatalogsRequest)
  ))
_sym_db.RegisterMessage(CanSearchCatalogsRequest)

GetCatalogQueryReply = _reflection.GeneratedProtocolMessageType('GetCatalogQueryReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGQUERYREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogQueryReply)
  ))
_sym_db.RegisterMessage(GetCatalogQueryReply)

GetCatalogQueryRequest = _reflection.GeneratedProtocolMessageType('GetCatalogQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGQUERYREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogQueryRequest)
  ))
_sym_db.RegisterMessage(GetCatalogQueryRequest)

GetCatalogsByQueryRequest = _reflection.GeneratedProtocolMessageType('GetCatalogsByQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGSBYQUERYREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogsByQueryRequest)
  ))
_sym_db.RegisterMessage(GetCatalogsByQueryRequest)

CanCreateCatalogsReply = _reflection.GeneratedProtocolMessageType('CanCreateCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanCreateCatalogsReply)
  ))
_sym_db.RegisterMessage(CanCreateCatalogsReply)

CanCreateCatalogsRequest = _reflection.GeneratedProtocolMessageType('CanCreateCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanCreateCatalogsRequest)
  ))
_sym_db.RegisterMessage(CanCreateCatalogsRequest)

CanCreateCatalogWithRecordTypesReply = _reflection.GeneratedProtocolMessageType('CanCreateCatalogWithRecordTypesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECATALOGWITHRECORDTYPESREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesReply)
  ))
_sym_db.RegisterMessage(CanCreateCatalogWithRecordTypesReply)

CanCreateCatalogWithRecordTypesRequest = _reflection.GeneratedProtocolMessageType('CanCreateCatalogWithRecordTypesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECATALOGWITHRECORDTYPESREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanCreateCatalogWithRecordTypesRequest)
  ))
_sym_db.RegisterMessage(CanCreateCatalogWithRecordTypesRequest)

GetCatalogFormForCreateReply = _reflection.GeneratedProtocolMessageType('GetCatalogFormForCreateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGFORMFORCREATEREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogFormForCreateReply)
  ))
_sym_db.RegisterMessage(GetCatalogFormForCreateReply)

GetCatalogFormForCreateRequest = _reflection.GeneratedProtocolMessageType('GetCatalogFormForCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGFORMFORCREATEREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogFormForCreateRequest)
  ))
_sym_db.RegisterMessage(GetCatalogFormForCreateRequest)

CreateCatalogReply = _reflection.GeneratedProtocolMessageType('CreateCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATECATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CreateCatalogReply)
  ))
_sym_db.RegisterMessage(CreateCatalogReply)

CreateCatalogRequest = _reflection.GeneratedProtocolMessageType('CreateCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATECATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CreateCatalogRequest)
  ))
_sym_db.RegisterMessage(CreateCatalogRequest)

CanUpdateCatalogsReply = _reflection.GeneratedProtocolMessageType('CanUpdateCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATECATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanUpdateCatalogsReply)
  ))
_sym_db.RegisterMessage(CanUpdateCatalogsReply)

CanUpdateCatalogsRequest = _reflection.GeneratedProtocolMessageType('CanUpdateCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATECATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanUpdateCatalogsRequest)
  ))
_sym_db.RegisterMessage(CanUpdateCatalogsRequest)

GetCatalogFormForUpdateReply = _reflection.GeneratedProtocolMessageType('GetCatalogFormForUpdateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGFORMFORUPDATEREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogFormForUpdateReply)
  ))
_sym_db.RegisterMessage(GetCatalogFormForUpdateReply)

GetCatalogFormForUpdateRequest = _reflection.GeneratedProtocolMessageType('GetCatalogFormForUpdateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGFORMFORUPDATEREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogFormForUpdateRequest)
  ))
_sym_db.RegisterMessage(GetCatalogFormForUpdateRequest)

UpdateCatalogReply = _reflection.GeneratedProtocolMessageType('UpdateCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _UPDATECATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.UpdateCatalogReply)
  ))
_sym_db.RegisterMessage(UpdateCatalogReply)

UpdateCatalogRequest = _reflection.GeneratedProtocolMessageType('UpdateCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATECATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.UpdateCatalogRequest)
  ))
_sym_db.RegisterMessage(UpdateCatalogRequest)

CanDeleteCatalogsReply = _reflection.GeneratedProtocolMessageType('CanDeleteCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETECATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanDeleteCatalogsReply)
  ))
_sym_db.RegisterMessage(CanDeleteCatalogsReply)

CanDeleteCatalogsRequest = _reflection.GeneratedProtocolMessageType('CanDeleteCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETECATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanDeleteCatalogsRequest)
  ))
_sym_db.RegisterMessage(CanDeleteCatalogsRequest)

DeleteCatalogReply = _reflection.GeneratedProtocolMessageType('DeleteCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETECATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.DeleteCatalogReply)
  ))
_sym_db.RegisterMessage(DeleteCatalogReply)

DeleteCatalogRequest = _reflection.GeneratedProtocolMessageType('DeleteCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETECATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.DeleteCatalogRequest)
  ))
_sym_db.RegisterMessage(DeleteCatalogRequest)

CanManageCatalogAliasesReply = _reflection.GeneratedProtocolMessageType('CanManageCatalogAliasesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGECATALOGALIASESREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanManageCatalogAliasesReply)
  ))
_sym_db.RegisterMessage(CanManageCatalogAliasesReply)

CanManageCatalogAliasesRequest = _reflection.GeneratedProtocolMessageType('CanManageCatalogAliasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGECATALOGALIASESREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanManageCatalogAliasesRequest)
  ))
_sym_db.RegisterMessage(CanManageCatalogAliasesRequest)

AliasCatalogReply = _reflection.GeneratedProtocolMessageType('AliasCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _ALIASCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.AliasCatalogReply)
  ))
_sym_db.RegisterMessage(AliasCatalogReply)

AliasCatalogRequest = _reflection.GeneratedProtocolMessageType('AliasCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALIASCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.AliasCatalogRequest)
  ))
_sym_db.RegisterMessage(AliasCatalogRequest)

GetCatalogHierarchyIdReply = _reflection.GeneratedProtocolMessageType('GetCatalogHierarchyIdReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGHIERARCHYIDREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogHierarchyIdReply)
  ))
_sym_db.RegisterMessage(GetCatalogHierarchyIdReply)

GetCatalogHierarchyIdRequest = _reflection.GeneratedProtocolMessageType('GetCatalogHierarchyIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGHIERARCHYIDREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogHierarchyIdRequest)
  ))
_sym_db.RegisterMessage(GetCatalogHierarchyIdRequest)

GetCatalogHierarchyReply = _reflection.GeneratedProtocolMessageType('GetCatalogHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGHIERARCHYREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogHierarchyReply)
  ))
_sym_db.RegisterMessage(GetCatalogHierarchyReply)

GetCatalogHierarchyRequest = _reflection.GeneratedProtocolMessageType('GetCatalogHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogHierarchyRequest)
  ))
_sym_db.RegisterMessage(GetCatalogHierarchyRequest)

CanAccessCatalogHierarchyReply = _reflection.GeneratedProtocolMessageType('CanAccessCatalogHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSCATALOGHIERARCHYREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanAccessCatalogHierarchyReply)
  ))
_sym_db.RegisterMessage(CanAccessCatalogHierarchyReply)

CanAccessCatalogHierarchyRequest = _reflection.GeneratedProtocolMessageType('CanAccessCatalogHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSCATALOGHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanAccessCatalogHierarchyRequest)
  ))
_sym_db.RegisterMessage(CanAccessCatalogHierarchyRequest)

GetRootCatalogIdsRequest = _reflection.GeneratedProtocolMessageType('GetRootCatalogIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETROOTCATALOGIDSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetRootCatalogIdsRequest)
  ))
_sym_db.RegisterMessage(GetRootCatalogIdsRequest)

GetRootCatalogsRequest = _reflection.GeneratedProtocolMessageType('GetRootCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETROOTCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetRootCatalogsRequest)
  ))
_sym_db.RegisterMessage(GetRootCatalogsRequest)

HasParentCatalogsReply = _reflection.GeneratedProtocolMessageType('HasParentCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _HASPARENTCATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.HasParentCatalogsReply)
  ))
_sym_db.RegisterMessage(HasParentCatalogsReply)

HasParentCatalogsRequest = _reflection.GeneratedProtocolMessageType('HasParentCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _HASPARENTCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.HasParentCatalogsRequest)
  ))
_sym_db.RegisterMessage(HasParentCatalogsRequest)

IsParentOfCatalogReply = _reflection.GeneratedProtocolMessageType('IsParentOfCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISPARENTOFCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsParentOfCatalogReply)
  ))
_sym_db.RegisterMessage(IsParentOfCatalogReply)

IsParentOfCatalogRequest = _reflection.GeneratedProtocolMessageType('IsParentOfCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISPARENTOFCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsParentOfCatalogRequest)
  ))
_sym_db.RegisterMessage(IsParentOfCatalogRequest)

GetParentCatalogIdsRequest = _reflection.GeneratedProtocolMessageType('GetParentCatalogIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPARENTCATALOGIDSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetParentCatalogIdsRequest)
  ))
_sym_db.RegisterMessage(GetParentCatalogIdsRequest)

GetParentCatalogsRequest = _reflection.GeneratedProtocolMessageType('GetParentCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPARENTCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetParentCatalogsRequest)
  ))
_sym_db.RegisterMessage(GetParentCatalogsRequest)

IsAncestorOfCatalogReply = _reflection.GeneratedProtocolMessageType('IsAncestorOfCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISANCESTOROFCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsAncestorOfCatalogReply)
  ))
_sym_db.RegisterMessage(IsAncestorOfCatalogReply)

IsAncestorOfCatalogRequest = _reflection.GeneratedProtocolMessageType('IsAncestorOfCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISANCESTOROFCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsAncestorOfCatalogRequest)
  ))
_sym_db.RegisterMessage(IsAncestorOfCatalogRequest)

HasChildCatalogsReply = _reflection.GeneratedProtocolMessageType('HasChildCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _HASCHILDCATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.HasChildCatalogsReply)
  ))
_sym_db.RegisterMessage(HasChildCatalogsReply)

HasChildCatalogsRequest = _reflection.GeneratedProtocolMessageType('HasChildCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _HASCHILDCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.HasChildCatalogsRequest)
  ))
_sym_db.RegisterMessage(HasChildCatalogsRequest)

IsChildOfCatalogReply = _reflection.GeneratedProtocolMessageType('IsChildOfCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISCHILDOFCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsChildOfCatalogReply)
  ))
_sym_db.RegisterMessage(IsChildOfCatalogReply)

IsChildOfCatalogRequest = _reflection.GeneratedProtocolMessageType('IsChildOfCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISCHILDOFCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsChildOfCatalogRequest)
  ))
_sym_db.RegisterMessage(IsChildOfCatalogRequest)

GetChildCatalogIdsRequest = _reflection.GeneratedProtocolMessageType('GetChildCatalogIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCHILDCATALOGIDSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetChildCatalogIdsRequest)
  ))
_sym_db.RegisterMessage(GetChildCatalogIdsRequest)

GetChildCatalogsRequest = _reflection.GeneratedProtocolMessageType('GetChildCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCHILDCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetChildCatalogsRequest)
  ))
_sym_db.RegisterMessage(GetChildCatalogsRequest)

IsDescendantOfCatalogReply = _reflection.GeneratedProtocolMessageType('IsDescendantOfCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _ISDESCENDANTOFCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsDescendantOfCatalogReply)
  ))
_sym_db.RegisterMessage(IsDescendantOfCatalogReply)

IsDescendantOfCatalogRequest = _reflection.GeneratedProtocolMessageType('IsDescendantOfCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISDESCENDANTOFCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.IsDescendantOfCatalogRequest)
  ))
_sym_db.RegisterMessage(IsDescendantOfCatalogRequest)

GetCatalogNodeIdsReply = _reflection.GeneratedProtocolMessageType('GetCatalogNodeIdsReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGNODEIDSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogNodeIdsReply)
  ))
_sym_db.RegisterMessage(GetCatalogNodeIdsReply)

GetCatalogNodeIdsRequest = _reflection.GeneratedProtocolMessageType('GetCatalogNodeIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGNODEIDSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogNodeIdsRequest)
  ))
_sym_db.RegisterMessage(GetCatalogNodeIdsRequest)

GetCatalogNodesReply = _reflection.GeneratedProtocolMessageType('GetCatalogNodesReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGNODESREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogNodesReply)
  ))
_sym_db.RegisterMessage(GetCatalogNodesReply)

GetCatalogNodesRequest = _reflection.GeneratedProtocolMessageType('GetCatalogNodesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCATALOGNODESREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.GetCatalogNodesRequest)
  ))
_sym_db.RegisterMessage(GetCatalogNodesRequest)

CanModifyCatalogHierarchyReply = _reflection.GeneratedProtocolMessageType('CanModifyCatalogHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMODIFYCATALOGHIERARCHYREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanModifyCatalogHierarchyReply)
  ))
_sym_db.RegisterMessage(CanModifyCatalogHierarchyReply)

CanModifyCatalogHierarchyRequest = _reflection.GeneratedProtocolMessageType('CanModifyCatalogHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMODIFYCATALOGHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.CanModifyCatalogHierarchyRequest)
  ))
_sym_db.RegisterMessage(CanModifyCatalogHierarchyRequest)

AddRootCatalogReply = _reflection.GeneratedProtocolMessageType('AddRootCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDROOTCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.AddRootCatalogReply)
  ))
_sym_db.RegisterMessage(AddRootCatalogReply)

AddRootCatalogRequest = _reflection.GeneratedProtocolMessageType('AddRootCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDROOTCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.AddRootCatalogRequest)
  ))
_sym_db.RegisterMessage(AddRootCatalogRequest)

RemoveRootCatalogReply = _reflection.GeneratedProtocolMessageType('RemoveRootCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEROOTCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.RemoveRootCatalogReply)
  ))
_sym_db.RegisterMessage(RemoveRootCatalogReply)

RemoveRootCatalogRequest = _reflection.GeneratedProtocolMessageType('RemoveRootCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEROOTCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.RemoveRootCatalogRequest)
  ))
_sym_db.RegisterMessage(RemoveRootCatalogRequest)

AddChildCatalogReply = _reflection.GeneratedProtocolMessageType('AddChildCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDCHILDCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.AddChildCatalogReply)
  ))
_sym_db.RegisterMessage(AddChildCatalogReply)

AddChildCatalogRequest = _reflection.GeneratedProtocolMessageType('AddChildCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDCHILDCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.AddChildCatalogRequest)
  ))
_sym_db.RegisterMessage(AddChildCatalogRequest)

RemoveChildCatalogReply = _reflection.GeneratedProtocolMessageType('RemoveChildCatalogReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDCATALOGREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.RemoveChildCatalogReply)
  ))
_sym_db.RegisterMessage(RemoveChildCatalogReply)

RemoveChildCatalogRequest = _reflection.GeneratedProtocolMessageType('RemoveChildCatalogRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDCATALOGREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.RemoveChildCatalogRequest)
  ))
_sym_db.RegisterMessage(RemoveChildCatalogRequest)

RemoveChildCatalogsReply = _reflection.GeneratedProtocolMessageType('RemoveChildCatalogsReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDCATALOGSREPLY,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.RemoveChildCatalogsReply)
  ))
_sym_db.RegisterMessage(RemoveChildCatalogsReply)

RemoveChildCatalogsRequest = _reflection.GeneratedProtocolMessageType('RemoveChildCatalogsRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDCATALOGSREQUEST,
  __module__ = 'dlkit.proto.cataloging_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.cataloging.RemoveChildCatalogsRequest)
  ))
_sym_db.RegisterMessage(RemoveChildCatalogsRequest)



_CATALOGLOOKUPSESSION = _descriptor.ServiceDescriptor(
  name='CatalogLookupSession',
  full_name='dlkit.proto.cataloging.CatalogLookupSession',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=6413,
  serialized_end=7623,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanLookupCatalogs',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.CanLookupCatalogs',
    index=0,
    containing_service=None,
    input_type=_CANLOOKUPCATALOGSREQUEST,
    output_type=_CANLOOKUPCATALOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeCatalogView',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.UseComparativeCatalogView',
    index=1,
    containing_service=None,
    input_type=_USECOMPARATIVECATALOGVIEWREQUEST,
    output_type=_USECOMPARATIVECATALOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryCatalogView',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.UsePlenaryCatalogView',
    index=2,
    containing_service=None,
    input_type=_USEPLENARYCATALOGVIEWREQUEST,
    output_type=_USEPLENARYCATALOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalog',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.GetCatalog',
    index=3,
    containing_service=None,
    input_type=_GETCATALOGREQUEST,
    output_type=_GETCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogsByIds',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.GetCatalogsByIds',
    index=4,
    containing_service=None,
    input_type=_GETCATALOGSBYIDSREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogsByGenusType',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.GetCatalogsByGenusType',
    index=5,
    containing_service=None,
    input_type=_GETCATALOGSBYGENUSTYPEREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogsByParentGenusType',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.GetCatalogsByParentGenusType',
    index=6,
    containing_service=None,
    input_type=_GETCATALOGSBYPARENTGENUSTYPEREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogsByRecordType',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.GetCatalogsByRecordType',
    index=7,
    containing_service=None,
    input_type=_GETCATALOGSBYRECORDTYPEREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogsByProvider',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.GetCatalogsByProvider',
    index=8,
    containing_service=None,
    input_type=_GETCATALOGSBYPROVIDERREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogs',
    full_name='dlkit.proto.cataloging.CatalogLookupSession.GetCatalogs',
    index=9,
    containing_service=None,
    input_type=_GETCATALOGSREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CATALOGLOOKUPSESSION)

DESCRIPTOR.services_by_name['CatalogLookupSession'] = _CATALOGLOOKUPSESSION


_CATALOGQUERYSESSION = _descriptor.ServiceDescriptor(
  name='CatalogQuerySession',
  full_name='dlkit.proto.cataloging.CatalogQuerySession',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=7626,
  serialized_end=7993,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanSearchCatalogs',
    full_name='dlkit.proto.cataloging.CatalogQuerySession.CanSearchCatalogs',
    index=0,
    containing_service=None,
    input_type=_CANSEARCHCATALOGSREQUEST,
    output_type=_CANSEARCHCATALOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogQuery',
    full_name='dlkit.proto.cataloging.CatalogQuerySession.GetCatalogQuery',
    index=1,
    containing_service=None,
    input_type=_GETCATALOGQUERYREQUEST,
    output_type=_GETCATALOGQUERYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogsByQuery',
    full_name='dlkit.proto.cataloging.CatalogQuerySession.GetCatalogsByQuery',
    index=2,
    containing_service=None,
    input_type=_GETCATALOGSBYQUERYREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CATALOGQUERYSESSION)

DESCRIPTOR.services_by_name['CatalogQuerySession'] = _CATALOGQUERYSESSION


_CATALOGADMINSESSION = _descriptor.ServiceDescriptor(
  name='CatalogAdminSession',
  full_name='dlkit.proto.cataloging.CatalogAdminSession',
  file=DESCRIPTOR,
  index=2,
  options=None,
  serialized_start=7996,
  serialized_end=9397,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanCreateCatalogs',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.CanCreateCatalogs',
    index=0,
    containing_service=None,
    input_type=_CANCREATECATALOGSREQUEST,
    output_type=_CANCREATECATALOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateCatalogWithRecordTypes',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.CanCreateCatalogWithRecordTypes',
    index=1,
    containing_service=None,
    input_type=_CANCREATECATALOGWITHRECORDTYPESREQUEST,
    output_type=_CANCREATECATALOGWITHRECORDTYPESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogFormForCreate',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.GetCatalogFormForCreate',
    index=2,
    containing_service=None,
    input_type=_GETCATALOGFORMFORCREATEREQUEST,
    output_type=_GETCATALOGFORMFORCREATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateCatalog',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.CreateCatalog',
    index=3,
    containing_service=None,
    input_type=_CREATECATALOGREQUEST,
    output_type=_CREATECATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanUpdateCatalogs',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.CanUpdateCatalogs',
    index=4,
    containing_service=None,
    input_type=_CANUPDATECATALOGSREQUEST,
    output_type=_CANUPDATECATALOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogFormForUpdate',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.GetCatalogFormForUpdate',
    index=5,
    containing_service=None,
    input_type=_GETCATALOGFORMFORUPDATEREQUEST,
    output_type=_GETCATALOGFORMFORUPDATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateCatalog',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.UpdateCatalog',
    index=6,
    containing_service=None,
    input_type=_UPDATECATALOGREQUEST,
    output_type=_UPDATECATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanDeleteCatalogs',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.CanDeleteCatalogs',
    index=7,
    containing_service=None,
    input_type=_CANDELETECATALOGSREQUEST,
    output_type=_CANDELETECATALOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteCatalog',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.DeleteCatalog',
    index=8,
    containing_service=None,
    input_type=_DELETECATALOGREQUEST,
    output_type=_DELETECATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanManageCatalogAliases',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.CanManageCatalogAliases',
    index=9,
    containing_service=None,
    input_type=_CANMANAGECATALOGALIASESREQUEST,
    output_type=_CANMANAGECATALOGALIASESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AliasCatalog',
    full_name='dlkit.proto.cataloging.CatalogAdminSession.AliasCatalog',
    index=10,
    containing_service=None,
    input_type=_ALIASCATALOGREQUEST,
    output_type=_ALIASCATALOGREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CATALOGADMINSESSION)

DESCRIPTOR.services_by_name['CatalogAdminSession'] = _CATALOGADMINSESSION


_CATALOGHIERARCHYSESSION = _descriptor.ServiceDescriptor(
  name='CatalogHierarchySession',
  full_name='dlkit.proto.cataloging.CatalogHierarchySession',
  file=DESCRIPTOR,
  index=3,
  options=None,
  serialized_start=9400,
  serialized_end=11744,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetCatalogHierarchyId',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetCatalogHierarchyId',
    index=0,
    containing_service=None,
    input_type=_GETCATALOGHIERARCHYIDREQUEST,
    output_type=_GETCATALOGHIERARCHYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogHierarchy',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetCatalogHierarchy',
    index=1,
    containing_service=None,
    input_type=_GETCATALOGHIERARCHYREQUEST,
    output_type=_GETCATALOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanAccessCatalogHierarchy',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.CanAccessCatalogHierarchy',
    index=2,
    containing_service=None,
    input_type=_CANACCESSCATALOGHIERARCHYREQUEST,
    output_type=_CANACCESSCATALOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeCatalogView',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.UseComparativeCatalogView',
    index=3,
    containing_service=None,
    input_type=_USECOMPARATIVECATALOGVIEWREQUEST,
    output_type=_USECOMPARATIVECATALOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryCatalogView',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.UsePlenaryCatalogView',
    index=4,
    containing_service=None,
    input_type=_USEPLENARYCATALOGVIEWREQUEST,
    output_type=_USEPLENARYCATALOGVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRootCatalogIds',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetRootCatalogIds',
    index=5,
    containing_service=None,
    input_type=_GETROOTCATALOGIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRootCatalogs',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetRootCatalogs',
    index=6,
    containing_service=None,
    input_type=_GETROOTCATALOGSREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HasParentCatalogs',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.HasParentCatalogs',
    index=7,
    containing_service=None,
    input_type=_HASPARENTCATALOGSREQUEST,
    output_type=_HASPARENTCATALOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsParentOfCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.IsParentOfCatalog',
    index=8,
    containing_service=None,
    input_type=_ISPARENTOFCATALOGREQUEST,
    output_type=_ISPARENTOFCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParentCatalogIds',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetParentCatalogIds',
    index=9,
    containing_service=None,
    input_type=_GETPARENTCATALOGIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParentCatalogs',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetParentCatalogs',
    index=10,
    containing_service=None,
    input_type=_GETPARENTCATALOGSREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsAncestorOfCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.IsAncestorOfCatalog',
    index=11,
    containing_service=None,
    input_type=_ISANCESTOROFCATALOGREQUEST,
    output_type=_ISANCESTOROFCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HasChildCatalogs',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.HasChildCatalogs',
    index=12,
    containing_service=None,
    input_type=_HASCHILDCATALOGSREQUEST,
    output_type=_HASCHILDCATALOGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsChildOfCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.IsChildOfCatalog',
    index=13,
    containing_service=None,
    input_type=_ISCHILDOFCATALOGREQUEST,
    output_type=_ISCHILDOFCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetChildCatalogIds',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetChildCatalogIds',
    index=14,
    containing_service=None,
    input_type=_GETCHILDCATALOGIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetChildCatalogs',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetChildCatalogs',
    index=15,
    containing_service=None,
    input_type=_GETCHILDCATALOGSREQUEST,
    output_type=_CATALOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsDescendantOfCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.IsDescendantOfCatalog',
    index=16,
    containing_service=None,
    input_type=_ISDESCENDANTOFCATALOGREQUEST,
    output_type=_ISDESCENDANTOFCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogNodeIds',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetCatalogNodeIds',
    index=17,
    containing_service=None,
    input_type=_GETCATALOGNODEIDSREQUEST,
    output_type=_GETCATALOGNODEIDSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogNodes',
    full_name='dlkit.proto.cataloging.CatalogHierarchySession.GetCatalogNodes',
    index=18,
    containing_service=None,
    input_type=_GETCATALOGNODESREQUEST,
    output_type=_GETCATALOGNODESREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CATALOGHIERARCHYSESSION)

DESCRIPTOR.services_by_name['CatalogHierarchySession'] = _CATALOGHIERARCHYSESSION


_CATALOGHIERARCHYDESIGNSESSION = _descriptor.ServiceDescriptor(
  name='CatalogHierarchyDesignSession',
  full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession',
  file=DESCRIPTOR,
  index=4,
  options=None,
  serialized_start=11747,
  serialized_end=12784,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetCatalogHierarchyId',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.GetCatalogHierarchyId',
    index=0,
    containing_service=None,
    input_type=_GETCATALOGHIERARCHYIDREQUEST,
    output_type=_GETCATALOGHIERARCHYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCatalogHierarchy',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.GetCatalogHierarchy',
    index=1,
    containing_service=None,
    input_type=_GETCATALOGHIERARCHYREQUEST,
    output_type=_GETCATALOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanModifyCatalogHierarchy',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.CanModifyCatalogHierarchy',
    index=2,
    containing_service=None,
    input_type=_CANMODIFYCATALOGHIERARCHYREQUEST,
    output_type=_CANMODIFYCATALOGHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddRootCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.AddRootCatalog',
    index=3,
    containing_service=None,
    input_type=_ADDROOTCATALOGREQUEST,
    output_type=_ADDROOTCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveRootCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.RemoveRootCatalog',
    index=4,
    containing_service=None,
    input_type=_REMOVEROOTCATALOGREQUEST,
    output_type=_REMOVEROOTCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddChildCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.AddChildCatalog',
    index=5,
    containing_service=None,
    input_type=_ADDCHILDCATALOGREQUEST,
    output_type=_ADDCHILDCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveChildCatalog',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.RemoveChildCatalog',
    index=6,
    containing_service=None,
    input_type=_REMOVECHILDCATALOGREQUEST,
    output_type=_REMOVECHILDCATALOGREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveChildCatalogs',
    full_name='dlkit.proto.cataloging.CatalogHierarchyDesignSession.RemoveChildCatalogs',
    index=7,
    containing_service=None,
    input_type=_REMOVECHILDCATALOGSREQUEST,
    output_type=_REMOVECHILDCATALOGSREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CATALOGHIERARCHYDESIGNSESSION)

DESCRIPTOR.services_by_name['CatalogHierarchyDesignSession'] = _CATALOGHIERARCHYDESIGNSESSION

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class CatalogLookupSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanLookupCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogLookupSession/CanLookupCatalogs',
          request_serializer=CanLookupCatalogsRequest.SerializeToString,
          response_deserializer=CanLookupCatalogsReply.FromString,
          )
      self.UseComparativeCatalogView = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogLookupSession/UseComparativeCatalogView',
          request_serializer=UseComparativeCatalogViewRequest.SerializeToString,
          response_deserializer=UseComparativeCatalogViewReply.FromString,
          )
      self.UsePlenaryCatalogView = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogLookupSession/UsePlenaryCatalogView',
          request_serializer=UsePlenaryCatalogViewRequest.SerializeToString,
          response_deserializer=UsePlenaryCatalogViewReply.FromString,
          )
      self.GetCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogLookupSession/GetCatalog',
          request_serializer=GetCatalogRequest.SerializeToString,
          response_deserializer=GetCatalogReply.FromString,
          )
      self.GetCatalogsByIds = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogLookupSession/GetCatalogsByIds',
          request_serializer=GetCatalogsByIdsRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.GetCatalogsByGenusType = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogLookupSession/GetCatalogsByGenusType',
          request_serializer=GetCatalogsByGenusTypeRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.GetCatalogsByParentGenusType = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogLookupSession/GetCatalogsByParentGenusType',
          request_serializer=GetCatalogsByParentGenusTypeRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.GetCatalogsByRecordType = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogLookupSession/GetCatalogsByRecordType',
          request_serializer=GetCatalogsByRecordTypeRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.GetCatalogsByProvider = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogLookupSession/GetCatalogsByProvider',
          request_serializer=GetCatalogsByProviderRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.GetCatalogs = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogLookupSession/GetCatalogs',
          request_serializer=GetCatalogsRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )


  class CatalogLookupSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanLookupCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CatalogLookupSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanLookupCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupCatalogs,
            request_deserializer=CanLookupCatalogsRequest.FromString,
            response_serializer=CanLookupCatalogsReply.SerializeToString,
        ),
        'UseComparativeCatalogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeCatalogView,
            request_deserializer=UseComparativeCatalogViewRequest.FromString,
            response_serializer=UseComparativeCatalogViewReply.SerializeToString,
        ),
        'UsePlenaryCatalogView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryCatalogView,
            request_deserializer=UsePlenaryCatalogViewRequest.FromString,
            response_serializer=UsePlenaryCatalogViewReply.SerializeToString,
        ),
        'GetCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalog,
            request_deserializer=GetCatalogRequest.FromString,
            response_serializer=GetCatalogReply.SerializeToString,
        ),
        'GetCatalogsByIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetCatalogsByIds,
            request_deserializer=GetCatalogsByIdsRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'GetCatalogsByGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetCatalogsByGenusType,
            request_deserializer=GetCatalogsByGenusTypeRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'GetCatalogsByParentGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetCatalogsByParentGenusType,
            request_deserializer=GetCatalogsByParentGenusTypeRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'GetCatalogsByRecordType': grpc.unary_stream_rpc_method_handler(
            servicer.GetCatalogsByRecordType,
            request_deserializer=GetCatalogsByRecordTypeRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'GetCatalogsByProvider': grpc.unary_stream_rpc_method_handler(
            servicer.GetCatalogsByProvider,
            request_deserializer=GetCatalogsByProviderRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'GetCatalogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetCatalogs,
            request_deserializer=GetCatalogsRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.cataloging.CatalogLookupSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CatalogQuerySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanSearchCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogQuerySession/CanSearchCatalogs',
          request_serializer=CanSearchCatalogsRequest.SerializeToString,
          response_deserializer=CanSearchCatalogsReply.FromString,
          )
      self.GetCatalogQuery = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogQuerySession/GetCatalogQuery',
          request_serializer=GetCatalogQueryRequest.SerializeToString,
          response_deserializer=GetCatalogQueryReply.FromString,
          )
      self.GetCatalogsByQuery = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogQuerySession/GetCatalogsByQuery',
          request_serializer=GetCatalogsByQueryRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )


  class CatalogQuerySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanSearchCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogsByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CatalogQuerySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanSearchCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanSearchCatalogs,
            request_deserializer=CanSearchCatalogsRequest.FromString,
            response_serializer=CanSearchCatalogsReply.SerializeToString,
        ),
        'GetCatalogQuery': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogQuery,
            request_deserializer=GetCatalogQueryRequest.FromString,
            response_serializer=GetCatalogQueryReply.SerializeToString,
        ),
        'GetCatalogsByQuery': grpc.unary_stream_rpc_method_handler(
            servicer.GetCatalogsByQuery,
            request_deserializer=GetCatalogsByQueryRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.cataloging.CatalogQuerySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CatalogAdminSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanCreateCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/CanCreateCatalogs',
          request_serializer=CanCreateCatalogsRequest.SerializeToString,
          response_deserializer=CanCreateCatalogsReply.FromString,
          )
      self.CanCreateCatalogWithRecordTypes = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/CanCreateCatalogWithRecordTypes',
          request_serializer=CanCreateCatalogWithRecordTypesRequest.SerializeToString,
          response_deserializer=CanCreateCatalogWithRecordTypesReply.FromString,
          )
      self.GetCatalogFormForCreate = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/GetCatalogFormForCreate',
          request_serializer=GetCatalogFormForCreateRequest.SerializeToString,
          response_deserializer=GetCatalogFormForCreateReply.FromString,
          )
      self.CreateCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/CreateCatalog',
          request_serializer=CreateCatalogRequest.SerializeToString,
          response_deserializer=CreateCatalogReply.FromString,
          )
      self.CanUpdateCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/CanUpdateCatalogs',
          request_serializer=CanUpdateCatalogsRequest.SerializeToString,
          response_deserializer=CanUpdateCatalogsReply.FromString,
          )
      self.GetCatalogFormForUpdate = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/GetCatalogFormForUpdate',
          request_serializer=GetCatalogFormForUpdateRequest.SerializeToString,
          response_deserializer=GetCatalogFormForUpdateReply.FromString,
          )
      self.UpdateCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/UpdateCatalog',
          request_serializer=UpdateCatalogRequest.SerializeToString,
          response_deserializer=UpdateCatalogReply.FromString,
          )
      self.CanDeleteCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/CanDeleteCatalogs',
          request_serializer=CanDeleteCatalogsRequest.SerializeToString,
          response_deserializer=CanDeleteCatalogsReply.FromString,
          )
      self.DeleteCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/DeleteCatalog',
          request_serializer=DeleteCatalogRequest.SerializeToString,
          response_deserializer=DeleteCatalogReply.FromString,
          )
      self.CanManageCatalogAliases = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/CanManageCatalogAliases',
          request_serializer=CanManageCatalogAliasesRequest.SerializeToString,
          response_deserializer=CanManageCatalogAliasesReply.FromString,
          )
      self.AliasCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogAdminSession/AliasCatalog',
          request_serializer=AliasCatalogRequest.SerializeToString,
          response_deserializer=AliasCatalogReply.FromString,
          )


  class CatalogAdminSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanCreateCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateCatalogWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanUpdateCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanDeleteCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanManageCatalogAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AliasCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CatalogAdminSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanCreateCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateCatalogs,
            request_deserializer=CanCreateCatalogsRequest.FromString,
            response_serializer=CanCreateCatalogsReply.SerializeToString,
        ),
        'CanCreateCatalogWithRecordTypes': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateCatalogWithRecordTypes,
            request_deserializer=CanCreateCatalogWithRecordTypesRequest.FromString,
            response_serializer=CanCreateCatalogWithRecordTypesReply.SerializeToString,
        ),
        'GetCatalogFormForCreate': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogFormForCreate,
            request_deserializer=GetCatalogFormForCreateRequest.FromString,
            response_serializer=GetCatalogFormForCreateReply.SerializeToString,
        ),
        'CreateCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.CreateCatalog,
            request_deserializer=CreateCatalogRequest.FromString,
            response_serializer=CreateCatalogReply.SerializeToString,
        ),
        'CanUpdateCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanUpdateCatalogs,
            request_deserializer=CanUpdateCatalogsRequest.FromString,
            response_serializer=CanUpdateCatalogsReply.SerializeToString,
        ),
        'GetCatalogFormForUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogFormForUpdate,
            request_deserializer=GetCatalogFormForUpdateRequest.FromString,
            response_serializer=GetCatalogFormForUpdateReply.SerializeToString,
        ),
        'UpdateCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateCatalog,
            request_deserializer=UpdateCatalogRequest.FromString,
            response_serializer=UpdateCatalogReply.SerializeToString,
        ),
        'CanDeleteCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.CanDeleteCatalogs,
            request_deserializer=CanDeleteCatalogsRequest.FromString,
            response_serializer=CanDeleteCatalogsReply.SerializeToString,
        ),
        'DeleteCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteCatalog,
            request_deserializer=DeleteCatalogRequest.FromString,
            response_serializer=DeleteCatalogReply.SerializeToString,
        ),
        'CanManageCatalogAliases': grpc.unary_unary_rpc_method_handler(
            servicer.CanManageCatalogAliases,
            request_deserializer=CanManageCatalogAliasesRequest.FromString,
            response_serializer=CanManageCatalogAliasesReply.SerializeToString,
        ),
        'AliasCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.AliasCatalog,
            request_deserializer=AliasCatalogRequest.FromString,
            response_serializer=AliasCatalogReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.cataloging.CatalogAdminSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CatalogHierarchySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetCatalogHierarchyId = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetCatalogHierarchyId',
          request_serializer=GetCatalogHierarchyIdRequest.SerializeToString,
          response_deserializer=GetCatalogHierarchyIdReply.FromString,
          )
      self.GetCatalogHierarchy = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetCatalogHierarchy',
          request_serializer=GetCatalogHierarchyRequest.SerializeToString,
          response_deserializer=GetCatalogHierarchyReply.FromString,
          )
      self.CanAccessCatalogHierarchy = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/CanAccessCatalogHierarchy',
          request_serializer=CanAccessCatalogHierarchyRequest.SerializeToString,
          response_deserializer=CanAccessCatalogHierarchyReply.FromString,
          )
      self.UseComparativeCatalogView = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/UseComparativeCatalogView',
          request_serializer=UseComparativeCatalogViewRequest.SerializeToString,
          response_deserializer=UseComparativeCatalogViewReply.FromString,
          )
      self.UsePlenaryCatalogView = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/UsePlenaryCatalogView',
          request_serializer=UsePlenaryCatalogViewRequest.SerializeToString,
          response_deserializer=UsePlenaryCatalogViewReply.FromString,
          )
      self.GetRootCatalogIds = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetRootCatalogIds',
          request_serializer=GetRootCatalogIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetRootCatalogs = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetRootCatalogs',
          request_serializer=GetRootCatalogsRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.HasParentCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/HasParentCatalogs',
          request_serializer=HasParentCatalogsRequest.SerializeToString,
          response_deserializer=HasParentCatalogsReply.FromString,
          )
      self.IsParentOfCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/IsParentOfCatalog',
          request_serializer=IsParentOfCatalogRequest.SerializeToString,
          response_deserializer=IsParentOfCatalogReply.FromString,
          )
      self.GetParentCatalogIds = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetParentCatalogIds',
          request_serializer=GetParentCatalogIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetParentCatalogs = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetParentCatalogs',
          request_serializer=GetParentCatalogsRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.IsAncestorOfCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/IsAncestorOfCatalog',
          request_serializer=IsAncestorOfCatalogRequest.SerializeToString,
          response_deserializer=IsAncestorOfCatalogReply.FromString,
          )
      self.HasChildCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/HasChildCatalogs',
          request_serializer=HasChildCatalogsRequest.SerializeToString,
          response_deserializer=HasChildCatalogsReply.FromString,
          )
      self.IsChildOfCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/IsChildOfCatalog',
          request_serializer=IsChildOfCatalogRequest.SerializeToString,
          response_deserializer=IsChildOfCatalogReply.FromString,
          )
      self.GetChildCatalogIds = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetChildCatalogIds',
          request_serializer=GetChildCatalogIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetChildCatalogs = channel.unary_stream(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetChildCatalogs',
          request_serializer=GetChildCatalogsRequest.SerializeToString,
          response_deserializer=Catalog.FromString,
          )
      self.IsDescendantOfCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/IsDescendantOfCatalog',
          request_serializer=IsDescendantOfCatalogRequest.SerializeToString,
          response_deserializer=IsDescendantOfCatalogReply.FromString,
          )
      self.GetCatalogNodeIds = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetCatalogNodeIds',
          request_serializer=GetCatalogNodeIdsRequest.SerializeToString,
          response_deserializer=GetCatalogNodeIdsReply.FromString,
          )
      self.GetCatalogNodes = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchySession/GetCatalogNodes',
          request_serializer=GetCatalogNodesRequest.SerializeToString,
          response_deserializer=GetCatalogNodesReply.FromString,
          )


  class CatalogHierarchySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetCatalogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanAccessCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRootCatalogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRootCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HasParentCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsParentOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParentCatalogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParentCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsAncestorOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HasChildCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsChildOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetChildCatalogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetChildCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsDescendantOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogNodeIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogNodes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CatalogHierarchySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetCatalogHierarchyId': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogHierarchyId,
            request_deserializer=GetCatalogHierarchyIdRequest.FromString,
            response_serializer=GetCatalogHierarchyIdReply.SerializeToString,
        ),
        'GetCatalogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogHierarchy,
            request_deserializer=GetCatalogHierarchyRequest.FromString,
            response_serializer=GetCatalogHierarchyReply.SerializeToString,
        ),
        'CanAccessCatalogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.CanAccessCatalogHierarchy,
            request_deserializer=CanAccessCatalogHierarchyRequest.FromString,
            response_serializer=CanAccessCatalogHierarchyReply.SerializeToString,
        ),
        'UseComparativeCatalogView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeCatalogView,
            request_deserializer=UseComparativeCatalogViewRequest.FromString,
            response_serializer=UseComparativeCatalogViewReply.SerializeToString,
        ),
        'UsePlenaryCatalogView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryCatalogView,
            request_deserializer=UsePlenaryCatalogViewRequest.FromString,
            response_serializer=UsePlenaryCatalogViewReply.SerializeToString,
        ),
        'GetRootCatalogIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetRootCatalogIds,
            request_deserializer=GetRootCatalogIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetRootCatalogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetRootCatalogs,
            request_deserializer=GetRootCatalogsRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'HasParentCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.HasParentCatalogs,
            request_deserializer=HasParentCatalogsRequest.FromString,
            response_serializer=HasParentCatalogsReply.SerializeToString,
        ),
        'IsParentOfCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.IsParentOfCatalog,
            request_deserializer=IsParentOfCatalogRequest.FromString,
            response_serializer=IsParentOfCatalogReply.SerializeToString,
        ),
        'GetParentCatalogIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetParentCatalogIds,
            request_deserializer=GetParentCatalogIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetParentCatalogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetParentCatalogs,
            request_deserializer=GetParentCatalogsRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'IsAncestorOfCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.IsAncestorOfCatalog,
            request_deserializer=IsAncestorOfCatalogRequest.FromString,
            response_serializer=IsAncestorOfCatalogReply.SerializeToString,
        ),
        'HasChildCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.HasChildCatalogs,
            request_deserializer=HasChildCatalogsRequest.FromString,
            response_serializer=HasChildCatalogsReply.SerializeToString,
        ),
        'IsChildOfCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.IsChildOfCatalog,
            request_deserializer=IsChildOfCatalogRequest.FromString,
            response_serializer=IsChildOfCatalogReply.SerializeToString,
        ),
        'GetChildCatalogIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetChildCatalogIds,
            request_deserializer=GetChildCatalogIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetChildCatalogs': grpc.unary_stream_rpc_method_handler(
            servicer.GetChildCatalogs,
            request_deserializer=GetChildCatalogsRequest.FromString,
            response_serializer=Catalog.SerializeToString,
        ),
        'IsDescendantOfCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.IsDescendantOfCatalog,
            request_deserializer=IsDescendantOfCatalogRequest.FromString,
            response_serializer=IsDescendantOfCatalogReply.SerializeToString,
        ),
        'GetCatalogNodeIds': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogNodeIds,
            request_deserializer=GetCatalogNodeIdsRequest.FromString,
            response_serializer=GetCatalogNodeIdsReply.SerializeToString,
        ),
        'GetCatalogNodes': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogNodes,
            request_deserializer=GetCatalogNodesRequest.FromString,
            response_serializer=GetCatalogNodesReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.cataloging.CatalogHierarchySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CatalogHierarchyDesignSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetCatalogHierarchyId = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/GetCatalogHierarchyId',
          request_serializer=GetCatalogHierarchyIdRequest.SerializeToString,
          response_deserializer=GetCatalogHierarchyIdReply.FromString,
          )
      self.GetCatalogHierarchy = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/GetCatalogHierarchy',
          request_serializer=GetCatalogHierarchyRequest.SerializeToString,
          response_deserializer=GetCatalogHierarchyReply.FromString,
          )
      self.CanModifyCatalogHierarchy = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/CanModifyCatalogHierarchy',
          request_serializer=CanModifyCatalogHierarchyRequest.SerializeToString,
          response_deserializer=CanModifyCatalogHierarchyReply.FromString,
          )
      self.AddRootCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/AddRootCatalog',
          request_serializer=AddRootCatalogRequest.SerializeToString,
          response_deserializer=AddRootCatalogReply.FromString,
          )
      self.RemoveRootCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/RemoveRootCatalog',
          request_serializer=RemoveRootCatalogRequest.SerializeToString,
          response_deserializer=RemoveRootCatalogReply.FromString,
          )
      self.AddChildCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/AddChildCatalog',
          request_serializer=AddChildCatalogRequest.SerializeToString,
          response_deserializer=AddChildCatalogReply.FromString,
          )
      self.RemoveChildCatalog = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/RemoveChildCatalog',
          request_serializer=RemoveChildCatalogRequest.SerializeToString,
          response_deserializer=RemoveChildCatalogReply.FromString,
          )
      self.RemoveChildCatalogs = channel.unary_unary(
          '/dlkit.proto.cataloging.CatalogHierarchyDesignSession/RemoveChildCatalogs',
          request_serializer=RemoveChildCatalogsRequest.SerializeToString,
          response_deserializer=RemoveChildCatalogsReply.FromString,
          )


  class CatalogHierarchyDesignSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetCatalogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanModifyCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddRootCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveRootCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddChildCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveChildCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveChildCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CatalogHierarchyDesignSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetCatalogHierarchyId': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogHierarchyId,
            request_deserializer=GetCatalogHierarchyIdRequest.FromString,
            response_serializer=GetCatalogHierarchyIdReply.SerializeToString,
        ),
        'GetCatalogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.GetCatalogHierarchy,
            request_deserializer=GetCatalogHierarchyRequest.FromString,
            response_serializer=GetCatalogHierarchyReply.SerializeToString,
        ),
        'CanModifyCatalogHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.CanModifyCatalogHierarchy,
            request_deserializer=CanModifyCatalogHierarchyRequest.FromString,
            response_serializer=CanModifyCatalogHierarchyReply.SerializeToString,
        ),
        'AddRootCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.AddRootCatalog,
            request_deserializer=AddRootCatalogRequest.FromString,
            response_serializer=AddRootCatalogReply.SerializeToString,
        ),
        'RemoveRootCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveRootCatalog,
            request_deserializer=RemoveRootCatalogRequest.FromString,
            response_serializer=RemoveRootCatalogReply.SerializeToString,
        ),
        'AddChildCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.AddChildCatalog,
            request_deserializer=AddChildCatalogRequest.FromString,
            response_serializer=AddChildCatalogReply.SerializeToString,
        ),
        'RemoveChildCatalog': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveChildCatalog,
            request_deserializer=RemoveChildCatalogRequest.FromString,
            response_serializer=RemoveChildCatalogReply.SerializeToString,
        ),
        'RemoveChildCatalogs': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveChildCatalogs,
            request_deserializer=RemoveChildCatalogsRequest.FromString,
            response_serializer=RemoveChildCatalogsReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.cataloging.CatalogHierarchyDesignSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaCatalogLookupSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCatalogLookupSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupCatalogs.future = None
    def UseComparativeCatalogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeCatalogView.future = None
    def UsePlenaryCatalogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryCatalogView.future = None
    def GetCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalog.future = None
    def GetCatalogsByIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCatalogsByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCatalogsByParentGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCatalogsByRecordType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCatalogsByProvider(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_CatalogLookupSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.cataloging.CatalogLookupSession', 'CanLookupCatalogs'): CanLookupCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalog'): GetCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogs'): GetCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByGenusType'): GetCatalogsByGenusTypeRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByIds'): GetCatalogsByIdsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByParentGenusType'): GetCatalogsByParentGenusTypeRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByProvider'): GetCatalogsByProviderRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByRecordType'): GetCatalogsByRecordTypeRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UseComparativeCatalogView'): UseComparativeCatalogViewRequest.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.cataloging.CatalogLookupSession', 'CanLookupCatalogs'): CanLookupCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalog'): GetCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogs'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByGenusType'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByIds'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByParentGenusType'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByProvider'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByRecordType'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UseComparativeCatalogView'): UseComparativeCatalogViewReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.cataloging.CatalogLookupSession', 'CanLookupCatalogs'): face_utilities.unary_unary_inline(servicer.CanLookupCatalogs),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalog'): face_utilities.unary_unary_inline(servicer.GetCatalog),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogs'): face_utilities.unary_stream_inline(servicer.GetCatalogs),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByGenusType'): face_utilities.unary_stream_inline(servicer.GetCatalogsByGenusType),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByIds'): face_utilities.unary_stream_inline(servicer.GetCatalogsByIds),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByParentGenusType'): face_utilities.unary_stream_inline(servicer.GetCatalogsByParentGenusType),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByProvider'): face_utilities.unary_stream_inline(servicer.GetCatalogsByProvider),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByRecordType'): face_utilities.unary_stream_inline(servicer.GetCatalogsByRecordType),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UseComparativeCatalogView'): face_utilities.unary_unary_inline(servicer.UseComparativeCatalogView),
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UsePlenaryCatalogView'): face_utilities.unary_unary_inline(servicer.UsePlenaryCatalogView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CatalogLookupSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.cataloging.CatalogLookupSession', 'CanLookupCatalogs'): CanLookupCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalog'): GetCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogs'): GetCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByGenusType'): GetCatalogsByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByIds'): GetCatalogsByIdsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByParentGenusType'): GetCatalogsByParentGenusTypeRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByProvider'): GetCatalogsByProviderRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByRecordType'): GetCatalogsByRecordTypeRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UseComparativeCatalogView'): UseComparativeCatalogViewRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.cataloging.CatalogLookupSession', 'CanLookupCatalogs'): CanLookupCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalog'): GetCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogs'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByGenusType'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByIds'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByParentGenusType'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByProvider'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'GetCatalogsByRecordType'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UseComparativeCatalogView'): UseComparativeCatalogViewReply.FromString,
      ('dlkit.proto.cataloging.CatalogLookupSession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewReply.FromString,
    }
    cardinalities = {
      'CanLookupCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalog': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogs': cardinality.Cardinality.UNARY_STREAM,
      'GetCatalogsByGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetCatalogsByIds': cardinality.Cardinality.UNARY_STREAM,
      'GetCatalogsByParentGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetCatalogsByProvider': cardinality.Cardinality.UNARY_STREAM,
      'GetCatalogsByRecordType': cardinality.Cardinality.UNARY_STREAM,
      'UseComparativeCatalogView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryCatalogView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.cataloging.CatalogLookupSession', cardinalities, options=stub_options)


  class BetaCatalogQuerySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanSearchCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogsByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCatalogQuerySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanSearchCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanSearchCatalogs.future = None
    def GetCatalogQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogQuery.future = None
    def GetCatalogsByQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_CatalogQuerySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.cataloging.CatalogQuerySession', 'CanSearchCatalogs'): CanSearchCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogQuery'): GetCatalogQueryRequest.FromString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogsByQuery'): GetCatalogsByQueryRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.cataloging.CatalogQuerySession', 'CanSearchCatalogs'): CanSearchCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogQuery'): GetCatalogQueryReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogsByQuery'): Catalog.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.cataloging.CatalogQuerySession', 'CanSearchCatalogs'): face_utilities.unary_unary_inline(servicer.CanSearchCatalogs),
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogQuery'): face_utilities.unary_unary_inline(servicer.GetCatalogQuery),
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogsByQuery'): face_utilities.unary_stream_inline(servicer.GetCatalogsByQuery),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CatalogQuerySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.cataloging.CatalogQuerySession', 'CanSearchCatalogs'): CanSearchCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogQuery'): GetCatalogQueryRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogsByQuery'): GetCatalogsByQueryRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.cataloging.CatalogQuerySession', 'CanSearchCatalogs'): CanSearchCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogQuery'): GetCatalogQueryReply.FromString,
      ('dlkit.proto.cataloging.CatalogQuerySession', 'GetCatalogsByQuery'): Catalog.FromString,
    }
    cardinalities = {
      'CanSearchCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogQuery': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogsByQuery': cardinality.Cardinality.UNARY_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.cataloging.CatalogQuerySession', cardinalities, options=stub_options)


  class BetaCatalogAdminSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanCreateCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateCatalogWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanUpdateCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanDeleteCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanManageCatalogAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AliasCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCatalogAdminSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanCreateCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateCatalogs.future = None
    def CanCreateCatalogWithRecordTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateCatalogWithRecordTypes.future = None
    def GetCatalogFormForCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogFormForCreate.future = None
    def CreateCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateCatalog.future = None
    def CanUpdateCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanUpdateCatalogs.future = None
    def GetCatalogFormForUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogFormForUpdate.future = None
    def UpdateCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpdateCatalog.future = None
    def CanDeleteCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanDeleteCatalogs.future = None
    def DeleteCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteCatalog.future = None
    def CanManageCatalogAliases(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanManageCatalogAliases.future = None
    def AliasCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AliasCatalog.future = None


  def beta_create_CatalogAdminSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.cataloging.CatalogAdminSession', 'AliasCatalog'): AliasCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogWithRecordTypes'): CanCreateCatalogWithRecordTypesRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogs'): CanCreateCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanDeleteCatalogs'): CanDeleteCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanManageCatalogAliases'): CanManageCatalogAliasesRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanUpdateCatalogs'): CanUpdateCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CreateCatalog'): CreateCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'DeleteCatalog'): DeleteCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForCreate'): GetCatalogFormForCreateRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForUpdate'): GetCatalogFormForUpdateRequest.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'UpdateCatalog'): UpdateCatalogRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.cataloging.CatalogAdminSession', 'AliasCatalog'): AliasCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogWithRecordTypes'): CanCreateCatalogWithRecordTypesReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogs'): CanCreateCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanDeleteCatalogs'): CanDeleteCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanManageCatalogAliases'): CanManageCatalogAliasesReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanUpdateCatalogs'): CanUpdateCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CreateCatalog'): CreateCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'DeleteCatalog'): DeleteCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForCreate'): GetCatalogFormForCreateReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForUpdate'): GetCatalogFormForUpdateReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'UpdateCatalog'): UpdateCatalogReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.cataloging.CatalogAdminSession', 'AliasCatalog'): face_utilities.unary_unary_inline(servicer.AliasCatalog),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogWithRecordTypes'): face_utilities.unary_unary_inline(servicer.CanCreateCatalogWithRecordTypes),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogs'): face_utilities.unary_unary_inline(servicer.CanCreateCatalogs),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanDeleteCatalogs'): face_utilities.unary_unary_inline(servicer.CanDeleteCatalogs),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanManageCatalogAliases'): face_utilities.unary_unary_inline(servicer.CanManageCatalogAliases),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanUpdateCatalogs'): face_utilities.unary_unary_inline(servicer.CanUpdateCatalogs),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CreateCatalog'): face_utilities.unary_unary_inline(servicer.CreateCatalog),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'DeleteCatalog'): face_utilities.unary_unary_inline(servicer.DeleteCatalog),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForCreate'): face_utilities.unary_unary_inline(servicer.GetCatalogFormForCreate),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForUpdate'): face_utilities.unary_unary_inline(servicer.GetCatalogFormForUpdate),
      ('dlkit.proto.cataloging.CatalogAdminSession', 'UpdateCatalog'): face_utilities.unary_unary_inline(servicer.UpdateCatalog),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CatalogAdminSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.cataloging.CatalogAdminSession', 'AliasCatalog'): AliasCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogWithRecordTypes'): CanCreateCatalogWithRecordTypesRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogs'): CanCreateCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanDeleteCatalogs'): CanDeleteCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanManageCatalogAliases'): CanManageCatalogAliasesRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanUpdateCatalogs'): CanUpdateCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CreateCatalog'): CreateCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'DeleteCatalog'): DeleteCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForCreate'): GetCatalogFormForCreateRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForUpdate'): GetCatalogFormForUpdateRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'UpdateCatalog'): UpdateCatalogRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.cataloging.CatalogAdminSession', 'AliasCatalog'): AliasCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogWithRecordTypes'): CanCreateCatalogWithRecordTypesReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanCreateCatalogs'): CanCreateCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanDeleteCatalogs'): CanDeleteCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanManageCatalogAliases'): CanManageCatalogAliasesReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CanUpdateCatalogs'): CanUpdateCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'CreateCatalog'): CreateCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'DeleteCatalog'): DeleteCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForCreate'): GetCatalogFormForCreateReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'GetCatalogFormForUpdate'): GetCatalogFormForUpdateReply.FromString,
      ('dlkit.proto.cataloging.CatalogAdminSession', 'UpdateCatalog'): UpdateCatalogReply.FromString,
    }
    cardinalities = {
      'AliasCatalog': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateCatalogWithRecordTypes': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'CanDeleteCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'CanManageCatalogAliases': cardinality.Cardinality.UNARY_UNARY,
      'CanUpdateCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'CreateCatalog': cardinality.Cardinality.UNARY_UNARY,
      'DeleteCatalog': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogFormForCreate': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogFormForUpdate': cardinality.Cardinality.UNARY_UNARY,
      'UpdateCatalog': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.cataloging.CatalogAdminSession', cardinalities, options=stub_options)


  class BetaCatalogHierarchySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetCatalogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanAccessCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryCatalogView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRootCatalogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRootCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HasParentCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsParentOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParentCatalogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParentCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsAncestorOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HasChildCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsChildOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetChildCatalogIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetChildCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsDescendantOfCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogNodeIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogNodes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCatalogHierarchySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetCatalogHierarchyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogHierarchyId.future = None
    def GetCatalogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogHierarchy.future = None
    def CanAccessCatalogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAccessCatalogHierarchy.future = None
    def UseComparativeCatalogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeCatalogView.future = None
    def UsePlenaryCatalogView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryCatalogView.future = None
    def GetRootCatalogIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRootCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def HasParentCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HasParentCatalogs.future = None
    def IsParentOfCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsParentOfCatalog.future = None
    def GetParentCatalogIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetParentCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def IsAncestorOfCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsAncestorOfCatalog.future = None
    def HasChildCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HasChildCatalogs.future = None
    def IsChildOfCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsChildOfCatalog.future = None
    def GetChildCatalogIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetChildCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def IsDescendantOfCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsDescendantOfCatalog.future = None
    def GetCatalogNodeIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogNodeIds.future = None
    def GetCatalogNodes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogNodes.future = None


  def beta_create_CatalogHierarchySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'CanAccessCatalogHierarchy'): CanAccessCatalogHierarchyRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchy'): GetCatalogHierarchyRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodeIds'): GetCatalogNodeIdsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodes'): GetCatalogNodesRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogIds'): GetChildCatalogIdsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogs'): GetChildCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogIds'): GetParentCatalogIdsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogs'): GetParentCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogIds'): GetRootCatalogIdsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogs'): GetRootCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasChildCatalogs'): HasChildCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasParentCatalogs'): HasParentCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsAncestorOfCatalog'): IsAncestorOfCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsChildOfCatalog'): IsChildOfCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsDescendantOfCatalog'): IsDescendantOfCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsParentOfCatalog'): IsParentOfCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UseComparativeCatalogView'): UseComparativeCatalogViewRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'CanAccessCatalogHierarchy'): CanAccessCatalogHierarchyReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchy'): GetCatalogHierarchyReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodeIds'): GetCatalogNodeIdsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodes'): GetCatalogNodesReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogs'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogs'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogs'): Catalog.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasChildCatalogs'): HasChildCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasParentCatalogs'): HasParentCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsAncestorOfCatalog'): IsAncestorOfCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsChildOfCatalog'): IsChildOfCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsDescendantOfCatalog'): IsDescendantOfCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsParentOfCatalog'): IsParentOfCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UseComparativeCatalogView'): UseComparativeCatalogViewReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'CanAccessCatalogHierarchy'): face_utilities.unary_unary_inline(servicer.CanAccessCatalogHierarchy),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchy'): face_utilities.unary_unary_inline(servicer.GetCatalogHierarchy),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchyId'): face_utilities.unary_unary_inline(servicer.GetCatalogHierarchyId),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodeIds'): face_utilities.unary_unary_inline(servicer.GetCatalogNodeIds),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodes'): face_utilities.unary_unary_inline(servicer.GetCatalogNodes),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogIds'): face_utilities.unary_stream_inline(servicer.GetChildCatalogIds),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogs'): face_utilities.unary_stream_inline(servicer.GetChildCatalogs),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogIds'): face_utilities.unary_stream_inline(servicer.GetParentCatalogIds),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogs'): face_utilities.unary_stream_inline(servicer.GetParentCatalogs),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogIds'): face_utilities.unary_stream_inline(servicer.GetRootCatalogIds),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogs'): face_utilities.unary_stream_inline(servicer.GetRootCatalogs),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasChildCatalogs'): face_utilities.unary_unary_inline(servicer.HasChildCatalogs),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasParentCatalogs'): face_utilities.unary_unary_inline(servicer.HasParentCatalogs),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsAncestorOfCatalog'): face_utilities.unary_unary_inline(servicer.IsAncestorOfCatalog),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsChildOfCatalog'): face_utilities.unary_unary_inline(servicer.IsChildOfCatalog),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsDescendantOfCatalog'): face_utilities.unary_unary_inline(servicer.IsDescendantOfCatalog),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsParentOfCatalog'): face_utilities.unary_unary_inline(servicer.IsParentOfCatalog),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UseComparativeCatalogView'): face_utilities.unary_unary_inline(servicer.UseComparativeCatalogView),
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UsePlenaryCatalogView'): face_utilities.unary_unary_inline(servicer.UsePlenaryCatalogView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CatalogHierarchySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'CanAccessCatalogHierarchy'): CanAccessCatalogHierarchyRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchy'): GetCatalogHierarchyRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodeIds'): GetCatalogNodeIdsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodes'): GetCatalogNodesRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogIds'): GetChildCatalogIdsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogs'): GetChildCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogIds'): GetParentCatalogIdsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogs'): GetParentCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogIds'): GetRootCatalogIdsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogs'): GetRootCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasChildCatalogs'): HasChildCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasParentCatalogs'): HasParentCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsAncestorOfCatalog'): IsAncestorOfCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsChildOfCatalog'): IsChildOfCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsDescendantOfCatalog'): IsDescendantOfCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsParentOfCatalog'): IsParentOfCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UseComparativeCatalogView'): UseComparativeCatalogViewRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'CanAccessCatalogHierarchy'): CanAccessCatalogHierarchyReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchy'): GetCatalogHierarchyReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodeIds'): GetCatalogNodeIdsReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetCatalogNodes'): GetCatalogNodesReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetChildCatalogs'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetParentCatalogs'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'GetRootCatalogs'): Catalog.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasChildCatalogs'): HasChildCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'HasParentCatalogs'): HasParentCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsAncestorOfCatalog'): IsAncestorOfCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsChildOfCatalog'): IsChildOfCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsDescendantOfCatalog'): IsDescendantOfCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'IsParentOfCatalog'): IsParentOfCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UseComparativeCatalogView'): UseComparativeCatalogViewReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchySession', 'UsePlenaryCatalogView'): UsePlenaryCatalogViewReply.FromString,
    }
    cardinalities = {
      'CanAccessCatalogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogHierarchyId': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogNodeIds': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogNodes': cardinality.Cardinality.UNARY_UNARY,
      'GetChildCatalogIds': cardinality.Cardinality.UNARY_STREAM,
      'GetChildCatalogs': cardinality.Cardinality.UNARY_STREAM,
      'GetParentCatalogIds': cardinality.Cardinality.UNARY_STREAM,
      'GetParentCatalogs': cardinality.Cardinality.UNARY_STREAM,
      'GetRootCatalogIds': cardinality.Cardinality.UNARY_STREAM,
      'GetRootCatalogs': cardinality.Cardinality.UNARY_STREAM,
      'HasChildCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'HasParentCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'IsAncestorOfCatalog': cardinality.Cardinality.UNARY_UNARY,
      'IsChildOfCatalog': cardinality.Cardinality.UNARY_UNARY,
      'IsDescendantOfCatalog': cardinality.Cardinality.UNARY_UNARY,
      'IsParentOfCatalog': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeCatalogView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryCatalogView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.cataloging.CatalogHierarchySession', cardinalities, options=stub_options)


  class BetaCatalogHierarchyDesignSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetCatalogHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanModifyCatalogHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddRootCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveRootCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddChildCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveChildCatalog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveChildCatalogs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCatalogHierarchyDesignSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetCatalogHierarchyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogHierarchyId.future = None
    def GetCatalogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCatalogHierarchy.future = None
    def CanModifyCatalogHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanModifyCatalogHierarchy.future = None
    def AddRootCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddRootCatalog.future = None
    def RemoveRootCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveRootCatalog.future = None
    def AddChildCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddChildCatalog.future = None
    def RemoveChildCatalog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveChildCatalog.future = None
    def RemoveChildCatalogs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveChildCatalogs.future = None


  def beta_create_CatalogHierarchyDesignSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddChildCatalog'): AddChildCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddRootCatalog'): AddRootCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'CanModifyCatalogHierarchy'): CanModifyCatalogHierarchyRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchy'): GetCatalogHierarchyRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalog'): RemoveChildCatalogRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalogs'): RemoveChildCatalogsRequest.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveRootCatalog'): RemoveRootCatalogRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddChildCatalog'): AddChildCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddRootCatalog'): AddRootCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'CanModifyCatalogHierarchy'): CanModifyCatalogHierarchyReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchy'): GetCatalogHierarchyReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalog'): RemoveChildCatalogReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalogs'): RemoveChildCatalogsReply.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveRootCatalog'): RemoveRootCatalogReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddChildCatalog'): face_utilities.unary_unary_inline(servicer.AddChildCatalog),
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddRootCatalog'): face_utilities.unary_unary_inline(servicer.AddRootCatalog),
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'CanModifyCatalogHierarchy'): face_utilities.unary_unary_inline(servicer.CanModifyCatalogHierarchy),
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchy'): face_utilities.unary_unary_inline(servicer.GetCatalogHierarchy),
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchyId'): face_utilities.unary_unary_inline(servicer.GetCatalogHierarchyId),
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalog'): face_utilities.unary_unary_inline(servicer.RemoveChildCatalog),
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalogs'): face_utilities.unary_unary_inline(servicer.RemoveChildCatalogs),
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveRootCatalog'): face_utilities.unary_unary_inline(servicer.RemoveRootCatalog),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CatalogHierarchyDesignSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddChildCatalog'): AddChildCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddRootCatalog'): AddRootCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'CanModifyCatalogHierarchy'): CanModifyCatalogHierarchyRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchy'): GetCatalogHierarchyRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalog'): RemoveChildCatalogRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalogs'): RemoveChildCatalogsRequest.SerializeToString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveRootCatalog'): RemoveRootCatalogRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddChildCatalog'): AddChildCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'AddRootCatalog'): AddRootCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'CanModifyCatalogHierarchy'): CanModifyCatalogHierarchyReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchy'): GetCatalogHierarchyReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'GetCatalogHierarchyId'): GetCatalogHierarchyIdReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalog'): RemoveChildCatalogReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveChildCatalogs'): RemoveChildCatalogsReply.FromString,
      ('dlkit.proto.cataloging.CatalogHierarchyDesignSession', 'RemoveRootCatalog'): RemoveRootCatalogReply.FromString,
    }
    cardinalities = {
      'AddChildCatalog': cardinality.Cardinality.UNARY_UNARY,
      'AddRootCatalog': cardinality.Cardinality.UNARY_UNARY,
      'CanModifyCatalogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetCatalogHierarchyId': cardinality.Cardinality.UNARY_UNARY,
      'RemoveChildCatalog': cardinality.Cardinality.UNARY_UNARY,
      'RemoveChildCatalogs': cardinality.Cardinality.UNARY_UNARY,
      'RemoveRootCatalog': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.cataloging.CatalogHierarchyDesignSession', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
