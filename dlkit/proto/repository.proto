// This file is auto-generated by ``protobuf_builder.py``
// DO NOT EDIT THIS BY HAND!
syntax = "proto3";

package dlkit.proto.repository;

import "dlkit/primordium/id/primitives.proto";
import "dlkit/primordium/locale/primitives.proto";
import "dlkit/primordium/transport/objects.proto";
import "dlkit/primordium/type/primitives.proto";
import "dlkit/proto/hierarchy.proto";
import "dlkit/proto/osid.proto";
import "google/protobuf/timestamp.proto";

message Asset {
  repeated AssetContent asset_contents = 1;
  dlkit.primordium.id.primitives.Id composition = 2;
  string copyright = 3;
  string copyright_registration = 4;
  google.protobuf.Timestamp created_date = 5;
  dlkit.primordium.locale.primitives.DisplayText description = 6;
  dlkit.primordium.locale.primitives.DisplayText displayName = 7;
  bool distribute_alterations = 8;
  bool distribute_compositions = 9;
  bool distribute_verbatim = 10;
  dlkit.primordium.type.primitives.Type genusTypeId = 11;
  dlkit.primordium.id.primitives.Id id = 12;
  string principal_credit_string = 13;
  repeated dlkit.primordium.id.primitives.Id provider_links = 14;
  bool public_domain = 15;
  bool published = 16;
  google.protobuf.Timestamp published_date = 17;
  repeated dlkit.primordium.type.primitives.Type recordTypeIds = 18;
  dlkit.proto.osid.OsidCatalog repository = 19;
  dlkit.primordium.id.primitives.Id source = 20;
  string title = 21;
}

message AssetQuery {

}

message AssetQueryInspector {

}

message AssetForm {

}

message AssetSearchOrder {

}

message AssetSearch {

}

message AssetSearchResults {

}

message AssetList {
  repeated Asset assets = 1;
}

message AssetContent {
  dlkit.primordium.type.primitives.Type accessibility_type = 1;
  dlkit.primordium.id.primitives.Id asset = 2;
  dlkit.primordium.transport.objects.DataInputStream data = 3;
  dlkit.primordium.locale.primitives.DisplayText description = 4;
  dlkit.primordium.locale.primitives.DisplayText displayName = 5;
  dlkit.primordium.type.primitives.Type genusTypeId = 6;
  dlkit.primordium.id.primitives.Id id = 7;
  repeated dlkit.primordium.type.primitives.Type recordTypeIds = 8;
  dlkit.proto.osid.OsidCatalog repository = 9;
  string url = 10;
}

message AssetContentQuery {

}

message AssetContentQueryInspector {

}

message AssetContentForm {

}

message AssetContentList {
  repeated AssetContent asset_contents = 1;
}

message Composition {
  repeated dlkit.primordium.id.primitives.Id children = 1;
  dlkit.primordium.locale.primitives.DisplayText description = 2;
  dlkit.primordium.locale.primitives.DisplayText displayName = 3;
  dlkit.primordium.type.primitives.Type genusTypeId = 4;
  dlkit.primordium.id.primitives.Id id = 5;
  repeated dlkit.primordium.type.primitives.Type recordTypeIds = 6;
  dlkit.proto.osid.OsidCatalog repository = 7;
}

message CompositionQuery {

}

message CompositionQueryInspector {

}

message CompositionForm {

}

message CompositionSearchOrder {

}

message CompositionSearch {

}

message CompositionSearchResults {

}

message CompositionList {
  repeated Composition compositions = 1;
}

message Repository {
  dlkit.primordium.locale.primitives.DisplayText description = 1;
  dlkit.primordium.locale.primitives.DisplayText displayName = 2;
  dlkit.primordium.type.primitives.Type genusTypeId = 3;
  dlkit.primordium.id.primitives.Id id = 4;
  repeated dlkit.primordium.type.primitives.Type recordTypeIds = 5;
}

message RepositoryQuery {

}

message RepositoryQueryInspector {

}

message RepositoryForm {

}

message RepositorySearchOrder {

}

message RepositorySearch {

}

message RepositorySearchResults {

}

message RepositoryList {
  repeated Repository repositories = 1;
}

message RepositoryNode {

}

message RepositoryNodeList {
  repeated RepositoryNode repository_nodes = 1;
}

message GetRepositoryIdReply {
  dlkit.primordium.id.primitives.Id id = 1;
}

message GetRepositoryIdRequest {

}

message GetRepositoryReply {
  Repository repository = 1;
}

message GetRepositoryRequest {

}

message CanLookupAssetsReply {
  bool can_lookup_assets = 1;
}

message CanLookupAssetsRequest {

}

message UseComparativeAssetViewReply {

}

message UseComparativeAssetViewRequest {

}

message UsePlenaryAssetViewReply {

}

message UsePlenaryAssetViewRequest {

}

message UseFederatedRepositoryViewReply {

}

message UseFederatedRepositoryViewRequest {

}

message UseIsolatedRepositoryViewReply {

}

message UseIsolatedRepositoryViewRequest {

}

message GetAssetReply {
  Asset asset = 1;
}

message GetAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message GetAssetsByIdsRequest {
  repeated dlkit.primordium.id.primitives.Id asset_ids = 1;
}

message GetAssetsByGenusTypeRequest {
  dlkit.primordium.type.primitives.Type asset_genus_type = 1;
}

message GetAssetsByParentGenusTypeRequest {
  dlkit.primordium.type.primitives.Type asset_genus_type = 1;
}

message GetAssetsByRecordTypeRequest {
  dlkit.primordium.type.primitives.Type asset_record_type = 1;
}

message GetAssetsByProviderRequest {
  dlkit.primordium.id.primitives.Id resource_id = 1;
}

message GetAssetsRequest {

}

message CanSearchAssetsReply {
  bool can_search_assets = 1;
}

message CanSearchAssetsRequest {

}

message GetAssetQueryReply {
  AssetQuery asset_query = 1;
}

message GetAssetQueryRequest {

}

message GetAssetsByQueryRequest {
  AssetQuery asset_query = 1;
}

message GetAssetSearchReply {
  AssetSearch asset_search = 1;
}

message GetAssetSearchRequest {

}

message GetAssetSearchOrderReply {
  AssetSearchOrder asset_search_order = 1;
}

message GetAssetSearchOrderRequest {

}

message GetAssetsBySearchReply {
  AssetSearchResults asset_search_results = 1;
}

message GetAssetsBySearchRequest {
  AssetQuery asset_query = 1;
  AssetSearch asset_search = 2;
}

message GetAssetQueryFromInspectorReply {
  AssetQuery asset_query = 1;
}

message GetAssetQueryFromInspectorRequest {
  AssetQueryInspector asset_query_inspector = 1;
}

message CanCreateAssetsReply {
  bool can_create_assets = 1;
}

message CanCreateAssetsRequest {

}

message CanCreateAssetWithRecordTypesReply {
  bool can_create_asset_with_record_types = 1;
}

message CanCreateAssetWithRecordTypesRequest {
  repeated dlkit.primordium.type.primitives.Type asset_record_types = 1;
}

message GetAssetFormForCreateReply {
  AssetForm asset_form = 1;
}

message GetAssetFormForCreateRequest {
  repeated dlkit.primordium.type.primitives.Type asset_record_types = 1;
}

message CreateAssetReply {
  Asset asset = 1;
}

message CreateAssetRequest {
  AssetForm asset_form = 1;
}

message CanUpdateAssetsReply {
  bool can_update_assets = 1;
}

message CanUpdateAssetsRequest {

}

message GetAssetFormForUpdateReply {
  AssetForm asset_form = 1;
}

message GetAssetFormForUpdateRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message UpdateAssetReply {

}

message UpdateAssetRequest {
  AssetForm asset_form = 1;
}

message CanDeleteAssetsReply {
  bool can_delete_assets = 1;
}

message CanDeleteAssetsRequest {

}

message DeleteAssetReply {

}

message DeleteAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message CanManageAssetAliasesReply {
  bool can_manage_asset_aliases = 1;
}

message CanManageAssetAliasesRequest {

}

message AliasAssetReply {

}

message AliasAssetRequest {
  dlkit.primordium.id.primitives.Id alias_id = 1;
  dlkit.primordium.id.primitives.Id asset_id = 2;
}

message CanCreateAssetContentReply {
  bool can_create_asset_content = 1;
}

message CanCreateAssetContentRequest {

}

message CanCreateAssetContentWithRecordTypesReply {
  bool can_create_asset_content_with_record_types = 1;
}

message CanCreateAssetContentWithRecordTypesRequest {
  repeated dlkit.primordium.type.primitives.Type asset_content_record_types = 1;
}

message GetAssetContentFormForCreateReply {
  AssetContentForm asset_content_form = 1;
}

message GetAssetContentFormForCreateRequest {
  repeated dlkit.primordium.type.primitives.Type asset_content_record_types = 1;
  dlkit.primordium.id.primitives.Id asset_id = 2;
}

message CreateAssetContentReply {
  AssetContent asset_content = 1;
}

message CreateAssetContentRequest {
  AssetContentForm asset_content_form = 1;
}

message CanUpdateAssetContentsReply {
  bool can_update_asset_contents = 1;
}

message CanUpdateAssetContentsRequest {

}

message GetAssetContentFormForUpdateReply {
  AssetContentForm asset_content_form = 1;
}

message GetAssetContentFormForUpdateRequest {
  dlkit.primordium.id.primitives.Id asset_content_id = 1;
}

message UpdateAssetContentReply {

}

message UpdateAssetContentRequest {
  AssetContentForm asset_content_form = 1;
}

message CanDeleteAssetContentsReply {
  bool can_delete_asset_contents = 1;
}

message CanDeleteAssetContentsRequest {

}

message DeleteAssetContentReply {

}

message DeleteAssetContentRequest {
  dlkit.primordium.id.primitives.Id asset_content_id = 1;
}

message CanRegisterForAssetNotificationsReply {
  bool can_register_for_asset_notifications = 1;
}

message CanRegisterForAssetNotificationsRequest {

}

message RegisterForNewAssetsReply {

}

message RegisterForNewAssetsRequest {

}

message RegisterForNewAssetsByGenusTypeReply {

}

message RegisterForNewAssetsByGenusTypeRequest {
  dlkit.primordium.type.primitives.Type asset_genus_type = 1;
}

message RegisterForChangedAssetsReply {

}

message RegisterForChangedAssetsRequest {

}

message RegisterForChangedAssetsByGenusTypeReply {

}

message RegisterForChangedAssetsByGenusTypeRequest {
  dlkit.primordium.type.primitives.Type asset_genus_type = 1;
}

message RegisterForChangedAssetReply {

}

message RegisterForChangedAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message RegisterForDeletedAssetsReply {

}

message RegisterForDeletedAssetsRequest {

}

message RegisterForDeletedAssetsByGenusTypeReply {

}

message RegisterForDeletedAssetsByGenusTypeRequest {
  dlkit.primordium.type.primitives.Type asset_genus_type = 1;
}

message RegisterForDeletedAssetReply {

}

message RegisterForDeletedAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message ReliableAssetNotificationsReply {

}

message ReliableAssetNotificationsRequest {

}

message UnreliableAssetNotificationsReply {

}

message UnreliableAssetNotificationsRequest {

}

message AcknowledgeAssetNotificationReply {

}

message AcknowledgeAssetNotificationRequest {
  dlkit.primordium.id.primitives.Id notification_id = 1;
}

message CanLookupAssetRepositoryMappingsReply {
  bool can_lookup_asset_repository_mappings = 1;
}

message CanLookupAssetRepositoryMappingsRequest {

}

message UseComparativeRepositoryViewReply {

}

message UseComparativeRepositoryViewRequest {

}

message UsePlenaryRepositoryViewReply {

}

message UsePlenaryRepositoryViewRequest {

}

message GetAssetIdsByRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetAssetsByRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetAssetIdsByRepositoriesRequest {
  repeated dlkit.primordium.id.primitives.Id repository_ids = 1;
}

message GetAssetsByRepositoriesRequest {
  repeated dlkit.primordium.id.primitives.Id repository_ids = 1;
}

message GetRepositoryIdsByAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message GetRepositoriesByAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message CanAssignAssetsReply {
  bool can_assign_assets = 1;
}

message CanAssignAssetsRequest {

}

message CanAssignAssetsToRepositoryReply {
  bool can_assign_assets_to_repository = 1;
}

message CanAssignAssetsToRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetAssignableRepositoryIdsRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetAssignableRepositoryIdsForAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message AssignAssetToRepositoryReply {

}

message AssignAssetToRepositoryRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message UnassignAssetFromRepositoryReply {

}

message UnassignAssetFromRepositoryRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message CanAccessAssetCompositionsReply {
  bool can_access_asset_compositions = 1;
}

message CanAccessAssetCompositionsRequest {

}

message UseComparativeAssetCompositionViewReply {

}

message UseComparativeAssetCompositionViewRequest {

}

message UsePlenaryAssetCompositionViewReply {

}

message UsePlenaryAssetCompositionViewRequest {

}

message GetCompositionAssetsRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
}

message GetCompositionsByAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
}

message CanComposeAssetsReply {
  bool can_compose_assets = 1;
}

message CanComposeAssetsRequest {

}

message AddAssetReply {

}

message AddAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
}

message MoveAssetAheadReply {

}

message MoveAssetAheadRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
  dlkit.primordium.id.primitives.Id reference_id = 3;
}

message MoveAssetBehindReply {

}

message MoveAssetBehindRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
  dlkit.primordium.id.primitives.Id reference_id = 3;
}

message OrderAssetsReply {

}

message OrderAssetsRequest {
  repeated dlkit.primordium.id.primitives.Id asset_ids = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
}

message RemoveAssetReply {

}

message RemoveAssetRequest {
  dlkit.primordium.id.primitives.Id asset_id = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
}

message CanLookupCompositionsReply {
  bool can_lookup_compositions = 1;
}

message CanLookupCompositionsRequest {

}

message UseComparativeCompositionViewReply {

}

message UseComparativeCompositionViewRequest {

}

message UsePlenaryCompositionViewReply {

}

message UsePlenaryCompositionViewRequest {

}

message UseActiveCompositionViewReply {

}

message UseActiveCompositionViewRequest {

}

message UseAnyStatusCompositionViewReply {

}

message UseAnyStatusCompositionViewRequest {

}

message UseSequesteredCompositionViewReply {

}

message UseSequesteredCompositionViewRequest {

}

message UseUnsequesteredCompositionViewReply {

}

message UseUnsequesteredCompositionViewRequest {

}

message GetCompositionReply {
  Composition composition = 1;
}

message GetCompositionRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
}

message GetCompositionsByIdsRequest {
  repeated dlkit.primordium.id.primitives.Id composition_ids = 1;
}

message GetCompositionsByGenusTypeRequest {
  dlkit.primordium.type.primitives.Type composition_genus_type = 1;
}

message GetCompositionsByParentGenusTypeRequest {
  dlkit.primordium.type.primitives.Type composition_genus_type = 1;
}

message GetCompositionsByRecordTypeRequest {
  dlkit.primordium.type.primitives.Type composition_record_type = 1;
}

message GetCompositionsByProviderRequest {
  dlkit.primordium.id.primitives.Id resource_id = 1;
}

message GetCompositionsRequest {

}

message CanSearchCompositionsReply {
  bool can_search_compositions = 1;
}

message CanSearchCompositionsRequest {

}

message GetCompositionQueryReply {
  CompositionQuery composition_query = 1;
}

message GetCompositionQueryRequest {

}

message GetCompositionsByQueryRequest {
  CompositionQuery composition_query = 1;
}

message GetCompositionSearchReply {
  CompositionSearch composition_search = 1;
}

message GetCompositionSearchRequest {

}

message GetCompositionSearchOrderReply {
  CompositionSearchOrder composition_search_order = 1;
}

message GetCompositionSearchOrderRequest {

}

message GetCompositionsBySearchReply {
  CompositionSearchResults composition_search_results = 1;
}

message GetCompositionsBySearchRequest {
  CompositionQuery composition_query = 1;
  CompositionSearch composition_search = 2;
}

message GetCompositionQueryFromInspectorReply {
  CompositionQuery composition_query = 1;
}

message GetCompositionQueryFromInspectorRequest {
  CompositionQueryInspector composition_query_inspector = 1;
}

message CanCreateCompositionsReply {
  bool can_create_compositions = 1;
}

message CanCreateCompositionsRequest {

}

message CanCreateCompositionWithRecordTypesReply {
  bool can_create_composition_with_record_types = 1;
}

message CanCreateCompositionWithRecordTypesRequest {
  repeated dlkit.primordium.type.primitives.Type composition_record_types = 1;
}

message GetCompositionFormForCreateReply {
  CompositionForm composition_form = 1;
}

message GetCompositionFormForCreateRequest {
  repeated dlkit.primordium.type.primitives.Type composition_record_types = 1;
}

message CreateCompositionReply {
  Composition composition = 1;
}

message CreateCompositionRequest {
  CompositionForm composiiton_form = 1;
}

message CanUpdateCompositionsReply {
  bool can_update_compositions = 1;
}

message CanUpdateCompositionsRequest {

}

message GetCompositionFormForUpdateReply {
  CompositionForm composition_form = 1;
}

message GetCompositionFormForUpdateRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
}

message UpdateCompositionReply {

}

message UpdateCompositionRequest {
  CompositionForm composiiton_form = 1;
}

message CanDeleteCompositionsReply {
  bool can_delete_compositions = 1;
}

message CanDeleteCompositionsRequest {

}

message DeleteCompositionReply {

}

message DeleteCompositionRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
}

message DeleteCompositionNodeReply {

}

message DeleteCompositionNodeRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
}

message AddCompositionChildReply {

}

message AddCompositionChildRequest {
  dlkit.primordium.id.primitives.Id child_composition_id = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
}

message RemoveCompositionChildReply {

}

message RemoveCompositionChildRequest {
  dlkit.primordium.id.primitives.Id child_composition_id = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
}

message CanManageCompositionAliasesReply {
  bool can_manage_composition_aliases = 1;
}

message CanManageCompositionAliasesRequest {

}

message AliasCompositionReply {

}

message AliasCompositionRequest {
  dlkit.primordium.id.primitives.Id alias_id = 1;
  dlkit.primordium.id.primitives.Id composition_id = 2;
}

message UseComparativeCompositionRepositoryViewReply {

}

message UseComparativeCompositionRepositoryViewRequest {

}

message UsePlenaryCompositionRepositoryViewReply {

}

message UsePlenaryCompositionRepositoryViewRequest {

}

message CanLookupCompositionRepositoryMappingsReply {
  bool can_lookup_composition_repository_mappings = 1;
}

message CanLookupCompositionRepositoryMappingsRequest {

}

message GetCompositionIdsByRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetCompositionsByRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetCompositionIdsByRepositoriesRequest {
  repeated dlkit.primordium.id.primitives.Id repository_ids = 1;
}

message GetCompositionsByRepositoriesRequest {
  repeated dlkit.primordium.id.primitives.Id repository_ids = 1;
}

message GetRepositoryIdsByCompositionRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
}

message GetRepositoriesByCompositionRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
}

message CanAssignCompositionsReply {
  bool can_assign_compositions = 1;
}

message CanAssignCompositionsRequest {

}

message CanAssignCompositionsToRepositoryReply {
  bool can_assign_compositions_to_repository = 1;
}

message CanAssignCompositionsToRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetAssignableRepositoryIdsForCompositionRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message AssignCompositionToRepositoryReply {

}

message AssignCompositionToRepositoryRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message UnassignCompositionFromRepositoryReply {

}

message UnassignCompositionFromRepositoryRequest {
  dlkit.primordium.id.primitives.Id composition_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message CanLookupRepositoriesReply {
  bool can_lookup_repositories = 1;
}

message CanLookupRepositoriesRequest {

}

message GetRepositoriesByIdsRequest {
  repeated dlkit.primordium.id.primitives.Id repository_ids = 1;
}

message GetRepositoriesByGenusTypeRequest {
  dlkit.primordium.type.primitives.Type repository_genus_type = 1;
}

message GetRepositoriesByParentGenusTypeRequest {
  dlkit.primordium.type.primitives.Type repository_genus_type = 1;
}

message GetRepositoriesByRecordTypeRequest {
  dlkit.primordium.type.primitives.Type repository_record_type = 1;
}

message GetRepositoriesByProviderRequest {
  dlkit.primordium.id.primitives.Id resource_id = 1;
}

message GetRepositoriesRequest {

}

message CanSearchRepositoriesReply {
  bool can_search_repositories = 1;
}

message CanSearchRepositoriesRequest {

}

message GetRepositoryQueryReply {
  RepositoryQuery repository_query = 1;
}

message GetRepositoryQueryRequest {

}

message GetRepositoriesByQueryRequest {
  RepositoryQuery repository_query = 1;
}

message CanCreateRepositoriesReply {
  bool can_create_repositories = 1;
}

message CanCreateRepositoriesRequest {

}

message CanCreateRepositoryWithRecordTypesReply {
  bool can_create_repository_with_record_types = 1;
}

message CanCreateRepositoryWithRecordTypesRequest {
  repeated dlkit.primordium.type.primitives.Type repository_record_types = 1;
}

message GetRepositoryFormForCreateReply {
  RepositoryForm repository_form = 1;
}

message GetRepositoryFormForCreateRequest {
  repeated dlkit.primordium.type.primitives.Type repository_record_types = 1;
}

message CreateRepositoryReply {
  Repository repository = 1;
}

message CreateRepositoryRequest {
  RepositoryForm repository_form = 1;
}

message CanUpdateRepositoriesReply {
  bool can_update_repositories = 1;
}

message CanUpdateRepositoriesRequest {

}

message GetRepositoryFormForUpdateReply {
  RepositoryForm repository_form = 1;
}

message GetRepositoryFormForUpdateRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message UpdateRepositoryReply {

}

message UpdateRepositoryRequest {
  RepositoryForm repository_form = 1;
}

message CanDeleteRepositoriesReply {
  bool can_delete_repositories = 1;
}

message CanDeleteRepositoriesRequest {

}

message DeleteRepositoryReply {

}

message DeleteRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message CanManageRepositoryAliasesReply {
  bool can_manage_repository_aliases = 1;
}

message CanManageRepositoryAliasesRequest {

}

message AliasRepositoryReply {

}

message AliasRepositoryRequest {
  dlkit.primordium.id.primitives.Id alias_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message GetRepositoryHierarchyIdReply {
  dlkit.primordium.id.primitives.Id id = 1;
}

message GetRepositoryHierarchyIdRequest {

}

message GetRepositoryHierarchyReply {
  dlkit.proto.hierarchy.Hierarchy hierarchy = 1;
}

message GetRepositoryHierarchyRequest {

}

message CanAccessRepositoryHierarchyReply {
  bool can_access_repository_hierarchy = 1;
}

message CanAccessRepositoryHierarchyRequest {

}

message GetRootRepositoryIdsRequest {

}

message GetRootRepositoriesRequest {

}

message HasParentRepositoriesReply {
  bool has_parent_repositories = 1;
}

message HasParentRepositoriesRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message IsParentOfRepositoryReply {
  bool is_parent_of_repository = 1;
}

message IsParentOfRepositoryRequest {
  dlkit.primordium.id.primitives.Id id_ = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message GetParentRepositoryIdsRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetParentRepositoriesRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message IsAncestorOfRepositoryReply {
  bool is_ancestor_of_repository = 1;
}

message IsAncestorOfRepositoryRequest {
  dlkit.primordium.id.primitives.Id id_ = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message HasChildRepositoriesReply {
  bool has_child_repositories = 1;
}

message HasChildRepositoriesRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message IsChildOfRepositoryReply {
  bool is_child_of_repository = 1;
}

message IsChildOfRepositoryRequest {
  dlkit.primordium.id.primitives.Id id_ = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message GetChildRepositoryIdsRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message GetChildRepositoriesRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message IsDescendantOfRepositoryReply {
  bool is_descendant_of_repository = 1;
}

message IsDescendantOfRepositoryRequest {
  dlkit.primordium.id.primitives.Id id_ = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message GetRepositoryNodeIdsReply {
  dlkit.proto.hierarchy.Node node = 1;
}

message GetRepositoryNodeIdsRequest {
  sint32 ancestor_levels = 1;
  sint32 descendant_levels = 2;
  bool include_siblings = 3;
  dlkit.primordium.id.primitives.Id repository_id = 4;
}

message GetRepositoryNodesReply {
  RepositoryNode repository_node = 1;
}

message GetRepositoryNodesRequest {
  sint32 ancestor_levels = 1;
  sint32 descendant_levels = 2;
  bool include_siblings = 3;
  dlkit.primordium.id.primitives.Id repository_id = 4;
}

message CanModifyRepositoryHierarchyReply {
  bool can_modify_repository_hierarchy = 1;
}

message CanModifyRepositoryHierarchyRequest {

}

message AddRootRepositoryReply {

}

message AddRootRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message RemoveRootRepositoryReply {

}

message RemoveRootRepositoryRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

message AddChildRepositoryReply {

}

message AddChildRepositoryRequest {
  dlkit.primordium.id.primitives.Id child_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message RemoveChildRepositoryReply {

}

message RemoveChildRepositoryRequest {
  dlkit.primordium.id.primitives.Id child_id = 1;
  dlkit.primordium.id.primitives.Id repository_id = 2;
}

message RemoveChildRepositoriesReply {

}

message RemoveChildRepositoriesRequest {
  dlkit.primordium.id.primitives.Id repository_id = 1;
}

service AssetLookupSession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanLookupAssets(CanLookupAssetsRequest) returns (CanLookupAssetsReply) {}
  rpc UseComparativeAssetView(UseComparativeAssetViewRequest) returns (UseComparativeAssetViewReply) {}
  rpc UsePlenaryAssetView(UsePlenaryAssetViewRequest) returns (UsePlenaryAssetViewReply) {}
  rpc UseFederatedRepositoryView(UseFederatedRepositoryViewRequest) returns (UseFederatedRepositoryViewReply) {}
  rpc UseIsolatedRepositoryView(UseIsolatedRepositoryViewRequest) returns (UseIsolatedRepositoryViewReply) {}
  rpc GetAsset(GetAssetRequest) returns (GetAssetReply) {}
  rpc GetAssetsByIds(GetAssetsByIdsRequest) returns (stream Asset) {}
  rpc GetAssetsByGenusType(GetAssetsByGenusTypeRequest) returns (stream Asset) {}
  rpc GetAssetsByParentGenusType(GetAssetsByParentGenusTypeRequest) returns (stream Asset) {}
  rpc GetAssetsByRecordType(GetAssetsByRecordTypeRequest) returns (stream Asset) {}
  rpc GetAssetsByProvider(GetAssetsByProviderRequest) returns (stream Asset) {}
  rpc GetAssets(GetAssetsRequest) returns (stream Asset) {}
}

service AssetQuerySession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanSearchAssets(CanSearchAssetsRequest) returns (CanSearchAssetsReply) {}
  rpc UseFederatedRepositoryView(UseFederatedRepositoryViewRequest) returns (UseFederatedRepositoryViewReply) {}
  rpc UseIsolatedRepositoryView(UseIsolatedRepositoryViewRequest) returns (UseIsolatedRepositoryViewReply) {}
  rpc GetAssetQuery(GetAssetQueryRequest) returns (GetAssetQueryReply) {}
  rpc GetAssetsByQuery(GetAssetsByQueryRequest) returns (stream Asset) {}
}

service AssetSearchSession {
  rpc GetAssetSearch(GetAssetSearchRequest) returns (GetAssetSearchReply) {}
  rpc GetAssetSearchOrder(GetAssetSearchOrderRequest) returns (GetAssetSearchOrderReply) {}
  rpc GetAssetsBySearch(GetAssetsBySearchRequest) returns (GetAssetsBySearchReply) {}
  rpc GetAssetQueryFromInspector(GetAssetQueryFromInspectorRequest) returns (GetAssetQueryFromInspectorReply) {}
}

service AssetAdminSession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanCreateAssets(CanCreateAssetsRequest) returns (CanCreateAssetsReply) {}
  rpc CanCreateAssetWithRecordTypes(CanCreateAssetWithRecordTypesRequest) returns (CanCreateAssetWithRecordTypesReply) {}
  rpc GetAssetFormForCreate(GetAssetFormForCreateRequest) returns (GetAssetFormForCreateReply) {}
  rpc CreateAsset(CreateAssetRequest) returns (CreateAssetReply) {}
  rpc CanUpdateAssets(CanUpdateAssetsRequest) returns (CanUpdateAssetsReply) {}
  rpc GetAssetFormForUpdate(GetAssetFormForUpdateRequest) returns (GetAssetFormForUpdateReply) {}
  rpc UpdateAsset(UpdateAssetRequest) returns (UpdateAssetReply) {}
  rpc CanDeleteAssets(CanDeleteAssetsRequest) returns (CanDeleteAssetsReply) {}
  rpc DeleteAsset(DeleteAssetRequest) returns (DeleteAssetReply) {}
  rpc CanManageAssetAliases(CanManageAssetAliasesRequest) returns (CanManageAssetAliasesReply) {}
  rpc AliasAsset(AliasAssetRequest) returns (AliasAssetReply) {}
  rpc CanCreateAssetContent(CanCreateAssetContentRequest) returns (CanCreateAssetContentReply) {}
  rpc CanCreateAssetContentWithRecordTypes(CanCreateAssetContentWithRecordTypesRequest) returns (CanCreateAssetContentWithRecordTypesReply) {}
  rpc GetAssetContentFormForCreate(GetAssetContentFormForCreateRequest) returns (GetAssetContentFormForCreateReply) {}
  rpc CreateAssetContent(CreateAssetContentRequest) returns (CreateAssetContentReply) {}
  rpc CanUpdateAssetContents(CanUpdateAssetContentsRequest) returns (CanUpdateAssetContentsReply) {}
  rpc GetAssetContentFormForUpdate(GetAssetContentFormForUpdateRequest) returns (GetAssetContentFormForUpdateReply) {}
  rpc UpdateAssetContent(UpdateAssetContentRequest) returns (UpdateAssetContentReply) {}
  rpc CanDeleteAssetContents(CanDeleteAssetContentsRequest) returns (CanDeleteAssetContentsReply) {}
  rpc DeleteAssetContent(DeleteAssetContentRequest) returns (DeleteAssetContentReply) {}
}

service AssetNotificationSession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanRegisterForAssetNotifications(CanRegisterForAssetNotificationsRequest) returns (CanRegisterForAssetNotificationsReply) {}
  rpc UseFederatedRepositoryView(UseFederatedRepositoryViewRequest) returns (UseFederatedRepositoryViewReply) {}
  rpc UseIsolatedRepositoryView(UseIsolatedRepositoryViewRequest) returns (UseIsolatedRepositoryViewReply) {}
  rpc RegisterForNewAssets(RegisterForNewAssetsRequest) returns (RegisterForNewAssetsReply) {}
  rpc RegisterForNewAssetsByGenusType(RegisterForNewAssetsByGenusTypeRequest) returns (RegisterForNewAssetsByGenusTypeReply) {}
  rpc RegisterForChangedAssets(RegisterForChangedAssetsRequest) returns (RegisterForChangedAssetsReply) {}
  rpc RegisterForChangedAssetsByGenusType(RegisterForChangedAssetsByGenusTypeRequest) returns (RegisterForChangedAssetsByGenusTypeReply) {}
  rpc RegisterForChangedAsset(RegisterForChangedAssetRequest) returns (RegisterForChangedAssetReply) {}
  rpc RegisterForDeletedAssets(RegisterForDeletedAssetsRequest) returns (RegisterForDeletedAssetsReply) {}
  rpc RegisterForDeletedAssetsByGenusType(RegisterForDeletedAssetsByGenusTypeRequest) returns (RegisterForDeletedAssetsByGenusTypeReply) {}
  rpc RegisterForDeletedAsset(RegisterForDeletedAssetRequest) returns (RegisterForDeletedAssetReply) {}
  rpc ReliableAssetNotifications(ReliableAssetNotificationsRequest) returns (ReliableAssetNotificationsReply) {}
  rpc UnreliableAssetNotifications(UnreliableAssetNotificationsRequest) returns (UnreliableAssetNotificationsReply) {}
  rpc AcknowledgeAssetNotification(AcknowledgeAssetNotificationRequest) returns (AcknowledgeAssetNotificationReply) {}
}

service AssetRepositorySession {
  rpc CanLookupAssetRepositoryMappings(CanLookupAssetRepositoryMappingsRequest) returns (CanLookupAssetRepositoryMappingsReply) {}
  rpc UseComparativeRepositoryView(UseComparativeRepositoryViewRequest) returns (UseComparativeRepositoryViewReply) {}
  rpc UsePlenaryRepositoryView(UsePlenaryRepositoryViewRequest) returns (UsePlenaryRepositoryViewReply) {}
  rpc GetAssetIdsByRepository(GetAssetIdsByRepositoryRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetAssetsByRepository(GetAssetsByRepositoryRequest) returns (stream Asset) {}
  rpc GetAssetIdsByRepositories(GetAssetIdsByRepositoriesRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetAssetsByRepositories(GetAssetsByRepositoriesRequest) returns (stream Asset) {}
  rpc GetRepositoryIdsByAsset(GetRepositoryIdsByAssetRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetRepositoriesByAsset(GetRepositoriesByAssetRequest) returns (stream Repository) {}
}

service AssetRepositoryAssignmentSession {
  rpc CanAssignAssets(CanAssignAssetsRequest) returns (CanAssignAssetsReply) {}
  rpc CanAssignAssetsToRepository(CanAssignAssetsToRepositoryRequest) returns (CanAssignAssetsToRepositoryReply) {}
  rpc GetAssignableRepositoryIds(GetAssignableRepositoryIdsRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetAssignableRepositoryIdsForAsset(GetAssignableRepositoryIdsForAssetRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc AssignAssetToRepository(AssignAssetToRepositoryRequest) returns (AssignAssetToRepositoryReply) {}
  rpc UnassignAssetFromRepository(UnassignAssetFromRepositoryRequest) returns (UnassignAssetFromRepositoryReply) {}
}

service AssetCompositionSession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanAccessAssetCompositions(CanAccessAssetCompositionsRequest) returns (CanAccessAssetCompositionsReply) {}
  rpc UseComparativeAssetCompositionView(UseComparativeAssetCompositionViewRequest) returns (UseComparativeAssetCompositionViewReply) {}
  rpc UsePlenaryAssetCompositionView(UsePlenaryAssetCompositionViewRequest) returns (UsePlenaryAssetCompositionViewReply) {}
  rpc UseFederatedRepositoryView(UseFederatedRepositoryViewRequest) returns (UseFederatedRepositoryViewReply) {}
  rpc UseIsolatedRepositoryView(UseIsolatedRepositoryViewRequest) returns (UseIsolatedRepositoryViewReply) {}
  rpc GetCompositionAssets(GetCompositionAssetsRequest) returns (stream Asset) {}
  rpc GetCompositionsByAsset(GetCompositionsByAssetRequest) returns (stream Composition) {}
}

service AssetCompositionDesignSession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanComposeAssets(CanComposeAssetsRequest) returns (CanComposeAssetsReply) {}
  rpc AddAsset(AddAssetRequest) returns (AddAssetReply) {}
  rpc MoveAssetAhead(MoveAssetAheadRequest) returns (MoveAssetAheadReply) {}
  rpc MoveAssetBehind(MoveAssetBehindRequest) returns (MoveAssetBehindReply) {}
  rpc OrderAssets(OrderAssetsRequest) returns (OrderAssetsReply) {}
  rpc RemoveAsset(RemoveAssetRequest) returns (RemoveAssetReply) {}
}

service CompositionLookupSession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanLookupCompositions(CanLookupCompositionsRequest) returns (CanLookupCompositionsReply) {}
  rpc UseComparativeCompositionView(UseComparativeCompositionViewRequest) returns (UseComparativeCompositionViewReply) {}
  rpc UsePlenaryCompositionView(UsePlenaryCompositionViewRequest) returns (UsePlenaryCompositionViewReply) {}
  rpc UseFederatedRepositoryView(UseFederatedRepositoryViewRequest) returns (UseFederatedRepositoryViewReply) {}
  rpc UseIsolatedRepositoryView(UseIsolatedRepositoryViewRequest) returns (UseIsolatedRepositoryViewReply) {}
  rpc UseActiveCompositionView(UseActiveCompositionViewRequest) returns (UseActiveCompositionViewReply) {}
  rpc UseAnyStatusCompositionView(UseAnyStatusCompositionViewRequest) returns (UseAnyStatusCompositionViewReply) {}
  rpc UseSequesteredCompositionView(UseSequesteredCompositionViewRequest) returns (UseSequesteredCompositionViewReply) {}
  rpc UseUnsequesteredCompositionView(UseUnsequesteredCompositionViewRequest) returns (UseUnsequesteredCompositionViewReply) {}
  rpc GetComposition(GetCompositionRequest) returns (GetCompositionReply) {}
  rpc GetCompositionsByIds(GetCompositionsByIdsRequest) returns (stream Composition) {}
  rpc GetCompositionsByGenusType(GetCompositionsByGenusTypeRequest) returns (stream Composition) {}
  rpc GetCompositionsByParentGenusType(GetCompositionsByParentGenusTypeRequest) returns (stream Composition) {}
  rpc GetCompositionsByRecordType(GetCompositionsByRecordTypeRequest) returns (stream Composition) {}
  rpc GetCompositionsByProvider(GetCompositionsByProviderRequest) returns (stream Composition) {}
  rpc GetCompositions(GetCompositionsRequest) returns (stream Composition) {}
}

service CompositionQuerySession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanSearchCompositions(CanSearchCompositionsRequest) returns (CanSearchCompositionsReply) {}
  rpc UseFederatedRepositoryView(UseFederatedRepositoryViewRequest) returns (UseFederatedRepositoryViewReply) {}
  rpc UseIsolatedRepositoryView(UseIsolatedRepositoryViewRequest) returns (UseIsolatedRepositoryViewReply) {}
  rpc UseSequesteredCompositionView(UseSequesteredCompositionViewRequest) returns (UseSequesteredCompositionViewReply) {}
  rpc UseUnsequesteredCompositionView(UseUnsequesteredCompositionViewRequest) returns (UseUnsequesteredCompositionViewReply) {}
  rpc GetCompositionQuery(GetCompositionQueryRequest) returns (GetCompositionQueryReply) {}
  rpc GetCompositionsByQuery(GetCompositionsByQueryRequest) returns (stream Composition) {}
}

service CompositionSearchSession {
  rpc GetCompositionSearch(GetCompositionSearchRequest) returns (GetCompositionSearchReply) {}
  rpc GetCompositionSearchOrder(GetCompositionSearchOrderRequest) returns (GetCompositionSearchOrderReply) {}
  rpc GetCompositionsBySearch(GetCompositionsBySearchRequest) returns (GetCompositionsBySearchReply) {}
  rpc GetCompositionQueryFromInspector(GetCompositionQueryFromInspectorRequest) returns (GetCompositionQueryFromInspectorReply) {}
}

service CompositionAdminSession {
  rpc GetRepositoryId(GetRepositoryIdRequest) returns (GetRepositoryIdReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc CanCreateCompositions(CanCreateCompositionsRequest) returns (CanCreateCompositionsReply) {}
  rpc CanCreateCompositionWithRecordTypes(CanCreateCompositionWithRecordTypesRequest) returns (CanCreateCompositionWithRecordTypesReply) {}
  rpc GetCompositionFormForCreate(GetCompositionFormForCreateRequest) returns (GetCompositionFormForCreateReply) {}
  rpc CreateComposition(CreateCompositionRequest) returns (CreateCompositionReply) {}
  rpc CanUpdateCompositions(CanUpdateCompositionsRequest) returns (CanUpdateCompositionsReply) {}
  rpc GetCompositionFormForUpdate(GetCompositionFormForUpdateRequest) returns (GetCompositionFormForUpdateReply) {}
  rpc UpdateComposition(UpdateCompositionRequest) returns (UpdateCompositionReply) {}
  rpc CanDeleteCompositions(CanDeleteCompositionsRequest) returns (CanDeleteCompositionsReply) {}
  rpc DeleteComposition(DeleteCompositionRequest) returns (DeleteCompositionReply) {}
  rpc DeleteCompositionNode(DeleteCompositionNodeRequest) returns (DeleteCompositionNodeReply) {}
  rpc AddCompositionChild(AddCompositionChildRequest) returns (AddCompositionChildReply) {}
  rpc RemoveCompositionChild(RemoveCompositionChildRequest) returns (RemoveCompositionChildReply) {}
  rpc CanManageCompositionAliases(CanManageCompositionAliasesRequest) returns (CanManageCompositionAliasesReply) {}
  rpc AliasComposition(AliasCompositionRequest) returns (AliasCompositionReply) {}
}

service CompositionRepositorySession {
  rpc UseComparativeCompositionRepositoryView(UseComparativeCompositionRepositoryViewRequest) returns (UseComparativeCompositionRepositoryViewReply) {}
  rpc UsePlenaryCompositionRepositoryView(UsePlenaryCompositionRepositoryViewRequest) returns (UsePlenaryCompositionRepositoryViewReply) {}
  rpc CanLookupCompositionRepositoryMappings(CanLookupCompositionRepositoryMappingsRequest) returns (CanLookupCompositionRepositoryMappingsReply) {}
  rpc GetCompositionIdsByRepository(GetCompositionIdsByRepositoryRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetCompositionsByRepository(GetCompositionsByRepositoryRequest) returns (stream Composition) {}
  rpc GetCompositionIdsByRepositories(GetCompositionIdsByRepositoriesRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetCompositionsByRepositories(GetCompositionsByRepositoriesRequest) returns (stream Composition) {}
  rpc GetRepositoryIdsByComposition(GetRepositoryIdsByCompositionRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetRepositoriesByComposition(GetRepositoriesByCompositionRequest) returns (stream Repository) {}
}

service CompositionRepositoryAssignmentSession {
  rpc CanAssignCompositions(CanAssignCompositionsRequest) returns (CanAssignCompositionsReply) {}
  rpc CanAssignCompositionsToRepository(CanAssignCompositionsToRepositoryRequest) returns (CanAssignCompositionsToRepositoryReply) {}
  rpc GetAssignableRepositoryIds(GetAssignableRepositoryIdsRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetAssignableRepositoryIdsForComposition(GetAssignableRepositoryIdsForCompositionRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc AssignCompositionToRepository(AssignCompositionToRepositoryRequest) returns (AssignCompositionToRepositoryReply) {}
  rpc UnassignCompositionFromRepository(UnassignCompositionFromRepositoryRequest) returns (UnassignCompositionFromRepositoryReply) {}
}

service RepositoryLookupSession {
  rpc CanLookupRepositories(CanLookupRepositoriesRequest) returns (CanLookupRepositoriesReply) {}
  rpc UseComparativeRepositoryView(UseComparativeRepositoryViewRequest) returns (UseComparativeRepositoryViewReply) {}
  rpc UsePlenaryRepositoryView(UsePlenaryRepositoryViewRequest) returns (UsePlenaryRepositoryViewReply) {}
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryReply) {}
  rpc GetRepositoriesByIds(GetRepositoriesByIdsRequest) returns (stream Repository) {}
  rpc GetRepositoriesByGenusType(GetRepositoriesByGenusTypeRequest) returns (stream Repository) {}
  rpc GetRepositoriesByParentGenusType(GetRepositoriesByParentGenusTypeRequest) returns (stream Repository) {}
  rpc GetRepositoriesByRecordType(GetRepositoriesByRecordTypeRequest) returns (stream Repository) {}
  rpc GetRepositoriesByProvider(GetRepositoriesByProviderRequest) returns (stream Repository) {}
  rpc GetRepositories(GetRepositoriesRequest) returns (stream Repository) {}
}

service RepositoryQuerySession {
  rpc CanSearchRepositories(CanSearchRepositoriesRequest) returns (CanSearchRepositoriesReply) {}
  rpc GetRepositoryQuery(GetRepositoryQueryRequest) returns (GetRepositoryQueryReply) {}
  rpc GetRepositoriesByQuery(GetRepositoriesByQueryRequest) returns (stream Repository) {}
}

service RepositoryAdminSession {
  rpc CanCreateRepositories(CanCreateRepositoriesRequest) returns (CanCreateRepositoriesReply) {}
  rpc CanCreateRepositoryWithRecordTypes(CanCreateRepositoryWithRecordTypesRequest) returns (CanCreateRepositoryWithRecordTypesReply) {}
  rpc GetRepositoryFormForCreate(GetRepositoryFormForCreateRequest) returns (GetRepositoryFormForCreateReply) {}
  rpc CreateRepository(CreateRepositoryRequest) returns (CreateRepositoryReply) {}
  rpc CanUpdateRepositories(CanUpdateRepositoriesRequest) returns (CanUpdateRepositoriesReply) {}
  rpc GetRepositoryFormForUpdate(GetRepositoryFormForUpdateRequest) returns (GetRepositoryFormForUpdateReply) {}
  rpc UpdateRepository(UpdateRepositoryRequest) returns (UpdateRepositoryReply) {}
  rpc CanDeleteRepositories(CanDeleteRepositoriesRequest) returns (CanDeleteRepositoriesReply) {}
  rpc DeleteRepository(DeleteRepositoryRequest) returns (DeleteRepositoryReply) {}
  rpc CanManageRepositoryAliases(CanManageRepositoryAliasesRequest) returns (CanManageRepositoryAliasesReply) {}
  rpc AliasRepository(AliasRepositoryRequest) returns (AliasRepositoryReply) {}
}

service RepositoryHierarchySession {
  rpc GetRepositoryHierarchyId(GetRepositoryHierarchyIdRequest) returns (GetRepositoryHierarchyIdReply) {}
  rpc GetRepositoryHierarchy(GetRepositoryHierarchyRequest) returns (GetRepositoryHierarchyReply) {}
  rpc CanAccessRepositoryHierarchy(CanAccessRepositoryHierarchyRequest) returns (CanAccessRepositoryHierarchyReply) {}
  rpc UseComparativeRepositoryView(UseComparativeRepositoryViewRequest) returns (UseComparativeRepositoryViewReply) {}
  rpc UsePlenaryRepositoryView(UsePlenaryRepositoryViewRequest) returns (UsePlenaryRepositoryViewReply) {}
  rpc GetRootRepositoryIds(GetRootRepositoryIdsRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetRootRepositories(GetRootRepositoriesRequest) returns (stream Repository) {}
  rpc HasParentRepositories(HasParentRepositoriesRequest) returns (HasParentRepositoriesReply) {}
  rpc IsParentOfRepository(IsParentOfRepositoryRequest) returns (IsParentOfRepositoryReply) {}
  rpc GetParentRepositoryIds(GetParentRepositoryIdsRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetParentRepositories(GetParentRepositoriesRequest) returns (stream Repository) {}
  rpc IsAncestorOfRepository(IsAncestorOfRepositoryRequest) returns (IsAncestorOfRepositoryReply) {}
  rpc HasChildRepositories(HasChildRepositoriesRequest) returns (HasChildRepositoriesReply) {}
  rpc IsChildOfRepository(IsChildOfRepositoryRequest) returns (IsChildOfRepositoryReply) {}
  rpc GetChildRepositoryIds(GetChildRepositoryIdsRequest) returns (stream dlkit.primordium.id.primitives.Id) {}
  rpc GetChildRepositories(GetChildRepositoriesRequest) returns (stream Repository) {}
  rpc IsDescendantOfRepository(IsDescendantOfRepositoryRequest) returns (IsDescendantOfRepositoryReply) {}
  rpc GetRepositoryNodeIds(GetRepositoryNodeIdsRequest) returns (GetRepositoryNodeIdsReply) {}
  rpc GetRepositoryNodes(GetRepositoryNodesRequest) returns (GetRepositoryNodesReply) {}
}

service RepositoryHierarchyDesignSession {
  rpc GetRepositoryHierarchyId(GetRepositoryHierarchyIdRequest) returns (GetRepositoryHierarchyIdReply) {}
  rpc GetRepositoryHierarchy(GetRepositoryHierarchyRequest) returns (GetRepositoryHierarchyReply) {}
  rpc CanModifyRepositoryHierarchy(CanModifyRepositoryHierarchyRequest) returns (CanModifyRepositoryHierarchyReply) {}
  rpc AddRootRepository(AddRootRepositoryRequest) returns (AddRootRepositoryReply) {}
  rpc RemoveRootRepository(RemoveRootRepositoryRequest) returns (RemoveRootRepositoryReply) {}
  rpc AddChildRepository(AddChildRepositoryRequest) returns (AddChildRepositoryReply) {}
  rpc RemoveChildRepository(RemoveChildRepositoryRequest) returns (RemoveChildRepositoryReply) {}
  rpc RemoveChildRepositories(RemoveChildRepositoriesRequest) returns (RemoveChildRepositoriesReply) {}
}