# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dlkit/proto/repository.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dlkit.primordium.id import primitives_pb2 as dlkit_dot_primordium_dot_id_dot_primitives__pb2
from dlkit.primordium.locale import primitives_pb2 as dlkit_dot_primordium_dot_locale_dot_primitives__pb2
from dlkit.primordium.transport import objects_pb2 as dlkit_dot_primordium_dot_transport_dot_objects__pb2
from dlkit.primordium.type import primitives_pb2 as dlkit_dot_primordium_dot_type_dot_primitives__pb2
from dlkit.proto import hierarchy_pb2 as dlkit_dot_proto_dot_hierarchy__pb2
from dlkit.proto import osid_pb2 as dlkit_dot_proto_dot_osid__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dlkit/proto/repository.proto',
  package='dlkit.proto.repository',
  syntax='proto3',
  serialized_pb=_b('\n\x1c\x64lkit/proto/repository.proto\x12\x16\x64lkit.proto.repository\x1a$dlkit/primordium/id/primitives.proto\x1a(dlkit/primordium/locale/primitives.proto\x1a(dlkit/primordium/transport/objects.proto\x1a&dlkit/primordium/type/primitives.proto\x1a\x1b\x64lkit/proto/hierarchy.proto\x1a\x16\x64lkit/proto/osid.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xaf\x07\n\x05\x41sset\x12<\n\x0e\x61sset_contents\x18\x01 \x03(\x0b\x32$.dlkit.proto.repository.AssetContent\x12\x37\n\x0b\x63omposition\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x11\n\tcopyright\x18\x03 \x01(\t\x12\x1e\n\x16\x63opyright_registration\x18\x04 \x01(\t\x12\x30\n\x0c\x63reated_date\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x44\n\x0b\x64\x65scription\x18\x06 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x45\n\x0c\x64isplay_name\x18\x07 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x1e\n\x16\x64istribute_alterations\x18\x08 \x01(\x08\x12\x1f\n\x17\x64istribute_compositions\x18\t \x01(\x08\x12\x1b\n\x13\x64istribute_verbatim\x18\n \x01(\x08\x12=\n\rgenus_type_id\x18\x0b \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12.\n\x02id\x18\x0c \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x1f\n\x17principal_credit_string\x18\r \x01(\t\x12:\n\x0eprovider_links\x18\x0e \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x15\n\rpublic_domain\x18\x0f \x01(\x08\x12\x11\n\tpublished\x18\x10 \x01(\x08\x12\x32\n\x0epublished_date\x18\x11 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12?\n\x0frecord_type_ids\x18\x12 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12\x31\n\nrepository\x18\x13 \x01(\x0b\x32\x1d.dlkit.proto.osid.OsidCatalog\x12\x32\n\x06source\x18\x14 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\r\n\x05title\x18\x15 \x01(\t\"\x0c\n\nAssetQuery\"\x15\n\x13\x41ssetQueryInspector\"\x0b\n\tAssetForm\"\x12\n\x10\x41ssetSearchOrder\"\r\n\x0b\x41ssetSearch\"\x14\n\x12\x41ssetSearchResults\":\n\tAssetList\x12-\n\x06\x61ssets\x18\x01 \x03(\x0b\x32\x1d.dlkit.proto.repository.Asset\"\xc5\x04\n\x0c\x41ssetContent\x12\x42\n\x12\x61\x63\x63\x65ssibility_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12\x31\n\x05\x61sset\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x41\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x33.dlkit.primordium.transport.objects.DataInputStream\x12\x44\n\x0b\x64\x65scription\x18\x04 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x45\n\x0c\x64isplay_name\x18\x05 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12=\n\rgenus_type_id\x18\x06 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12.\n\x02id\x18\x07 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12?\n\x0frecord_type_ids\x18\x08 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12\x31\n\nrepository\x18\t \x01(\x0b\x32\x1d.dlkit.proto.osid.OsidCatalog\x12\x0b\n\x03url\x18\n \x01(\t\"\x13\n\x11\x41ssetContentQuery\"\x1c\n\x1a\x41ssetContentQueryInspector\"\x12\n\x10\x41ssetContentForm\"P\n\x10\x41ssetContentList\x12<\n\x0e\x61sset_contents\x18\x01 \x03(\x0b\x32$.dlkit.proto.repository.AssetContent\"\xb3\x03\n\x0b\x43omposition\x12\x34\n\x08\x63hildren\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x44\n\x0b\x64\x65scription\x18\x02 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x45\n\x0c\x64isplay_name\x18\x03 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12=\n\rgenus_type_id\x18\x04 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12.\n\x02id\x18\x05 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12?\n\x0frecord_type_ids\x18\x06 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12\x31\n\nrepository\x18\x07 \x01(\x0b\x32\x1d.dlkit.proto.osid.OsidCatalog\"\x12\n\x10\x43ompositionQuery\"\x1b\n\x19\x43ompositionQueryInspector\"\x11\n\x0f\x43ompositionForm\"\x18\n\x16\x43ompositionSearchOrder\"\x13\n\x11\x43ompositionSearch\"\x1a\n\x18\x43ompositionSearchResults\"L\n\x0f\x43ompositionList\x12\x39\n\x0c\x63ompositions\x18\x01 \x03(\x0b\x32#.dlkit.proto.repository.Composition\"\xc9\x02\n\nRepository\x12\x44\n\x0b\x64\x65scription\x18\x01 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12\x45\n\x0c\x64isplay_name\x18\x02 \x01(\x0b\x32/.dlkit.primordium.locale.primitives.DisplayText\x12=\n\rgenus_type_id\x18\x03 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12.\n\x02id\x18\x04 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12?\n\x0frecord_type_ids\x18\x05 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"\x11\n\x0fRepositoryQuery\"\x1a\n\x18RepositoryQueryInspector\"\x10\n\x0eRepositoryForm\"\x17\n\x15RepositorySearchOrder\"\x12\n\x10RepositorySearch\"\x19\n\x17RepositorySearchResults\"J\n\x0eRepositoryList\x12\x38\n\x0crepositories\x18\x01 \x03(\x0b\x32\".dlkit.proto.repository.Repository\"\x10\n\x0eRepositoryNode\"V\n\x12RepositoryNodeList\x12@\n\x10repository_nodes\x18\x01 \x03(\x0b\x32&.dlkit.proto.repository.RepositoryNode\"F\n\x14GetRepositoryIdReply\x12.\n\x02id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x18\n\x16GetRepositoryIdRequest\"L\n\x12GetRepositoryReply\x12\x36\n\nrepository\x18\x01 \x01(\x0b\x32\".dlkit.proto.repository.Repository\"\x16\n\x14GetRepositoryRequest\"1\n\x14\x43\x61nLookupAssetsReply\x12\x19\n\x11\x63\x61n_lookup_assets\x18\x01 \x01(\x08\"\x18\n\x16\x43\x61nLookupAssetsRequest\"\x1e\n\x1cUseComparativeAssetViewReply\" \n\x1eUseComparativeAssetViewRequest\"\x1a\n\x18UsePlenaryAssetViewReply\"\x1c\n\x1aUsePlenaryAssetViewRequest\"!\n\x1fUseFederatedRepositoryViewReply\"#\n!UseFederatedRepositoryViewRequest\" \n\x1eUseIsolatedRepositoryViewReply\"\"\n UseIsolatedRepositoryViewRequest\"=\n\rGetAssetReply\x12,\n\x05\x61sset\x18\x01 \x01(\x0b\x32\x1d.dlkit.proto.repository.Asset\"G\n\x0fGetAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"N\n\x15GetAssetsByIdsRequest\x12\x35\n\tasset_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"_\n\x1bGetAssetsByGenusTypeRequest\x12@\n\x10\x61sset_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"e\n!GetAssetsByParentGenusTypeRequest\x12@\n\x10\x61sset_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"a\n\x1cGetAssetsByRecordTypeRequest\x12\x41\n\x11\x61sset_record_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"U\n\x1aGetAssetsByProviderRequest\x12\x37\n\x0bresource_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x12\n\x10GetAssetsRequest\"1\n\x14\x43\x61nSearchAssetsReply\x12\x19\n\x11\x63\x61n_search_assets\x18\x01 \x01(\x08\"\x18\n\x16\x43\x61nSearchAssetsRequest\"M\n\x12GetAssetQueryReply\x12\x37\n\x0b\x61sset_query\x18\x01 \x01(\x0b\x32\".dlkit.proto.repository.AssetQuery\"\x16\n\x14GetAssetQueryRequest\"R\n\x17GetAssetsByQueryRequest\x12\x37\n\x0b\x61sset_query\x18\x01 \x01(\x0b\x32\".dlkit.proto.repository.AssetQuery\"P\n\x13GetAssetSearchReply\x12\x39\n\x0c\x61sset_search\x18\x01 \x01(\x0b\x32#.dlkit.proto.repository.AssetSearch\"\x17\n\x15GetAssetSearchRequest\"`\n\x18GetAssetSearchOrderReply\x12\x44\n\x12\x61sset_search_order\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.AssetSearchOrder\"\x1c\n\x1aGetAssetSearchOrderRequest\"b\n\x16GetAssetsBySearchReply\x12H\n\x14\x61sset_search_results\x18\x01 \x01(\x0b\x32*.dlkit.proto.repository.AssetSearchResults\"\x8e\x01\n\x18GetAssetsBySearchRequest\x12\x37\n\x0b\x61sset_query\x18\x01 \x01(\x0b\x32\".dlkit.proto.repository.AssetQuery\x12\x39\n\x0c\x61sset_search\x18\x02 \x01(\x0b\x32#.dlkit.proto.repository.AssetSearch\"Z\n\x1fGetAssetQueryFromInspectorReply\x12\x37\n\x0b\x61sset_query\x18\x01 \x01(\x0b\x32\".dlkit.proto.repository.AssetQuery\"o\n!GetAssetQueryFromInspectorRequest\x12J\n\x15\x61sset_query_inspector\x18\x01 \x01(\x0b\x32+.dlkit.proto.repository.AssetQueryInspector\"1\n\x14\x43\x61nCreateAssetsReply\x12\x19\n\x11\x63\x61n_create_assets\x18\x01 \x01(\x08\"\x18\n\x16\x43\x61nCreateAssetsRequest\"P\n\"CanCreateAssetWithRecordTypesReply\x12*\n\"can_create_asset_with_record_types\x18\x01 \x01(\x08\"j\n$CanCreateAssetWithRecordTypesRequest\x12\x42\n\x12\x61sset_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"S\n\x1aGetAssetFormForCreateReply\x12\x35\n\nasset_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.repository.AssetForm\"b\n\x1cGetAssetFormForCreateRequest\x12\x42\n\x12\x61sset_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"@\n\x10\x43reateAssetReply\x12,\n\x05\x61sset\x18\x01 \x01(\x0b\x32\x1d.dlkit.proto.repository.Asset\"K\n\x12\x43reateAssetRequest\x12\x35\n\nasset_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.repository.AssetForm\"1\n\x14\x43\x61nUpdateAssetsReply\x12\x19\n\x11\x63\x61n_update_assets\x18\x01 \x01(\x08\"\x18\n\x16\x43\x61nUpdateAssetsRequest\"S\n\x1aGetAssetFormForUpdateReply\x12\x35\n\nasset_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.repository.AssetForm\"T\n\x1cGetAssetFormForUpdateRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x12\n\x10UpdateAssetReply\"K\n\x12UpdateAssetRequest\x12\x35\n\nasset_form\x18\x01 \x01(\x0b\x32!.dlkit.proto.repository.AssetForm\"1\n\x14\x43\x61nDeleteAssetsReply\x12\x19\n\x11\x63\x61n_delete_assets\x18\x01 \x01(\x08\"\x18\n\x16\x43\x61nDeleteAssetsRequest\"\x12\n\x10\x44\x65leteAssetReply\"J\n\x12\x44\x65leteAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\">\n\x1a\x43\x61nManageAssetAliasesReply\x12 \n\x18\x63\x61n_manage_asset_aliases\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nManageAssetAliasesRequest\"\x11\n\x0f\x41liasAssetReply\"\x7f\n\x11\x41liasAssetRequest\x12\x34\n\x08\x61lias_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x34\n\x08\x61sset_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\">\n\x1a\x43\x61nCreateAssetContentReply\x12 \n\x18\x63\x61n_create_asset_content\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nCreateAssetContentRequest\"_\n)CanCreateAssetContentWithRecordTypesReply\x12\x32\n*can_create_asset_content_with_record_types\x18\x01 \x01(\x08\"y\n+CanCreateAssetContentWithRecordTypesRequest\x12J\n\x1a\x61sset_content_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"i\n!GetAssetContentFormForCreateReply\x12\x44\n\x12\x61sset_content_form\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.AssetContentForm\"\xa7\x01\n#GetAssetContentFormForCreateRequest\x12J\n\x1a\x61sset_content_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\x12\x34\n\x08\x61sset_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"V\n\x17\x43reateAssetContentReply\x12;\n\rasset_content\x18\x01 \x01(\x0b\x32$.dlkit.proto.repository.AssetContent\"a\n\x19\x43reateAssetContentRequest\x12\x44\n\x12\x61sset_content_form\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.AssetContentForm\"@\n\x1b\x43\x61nUpdateAssetContentsReply\x12!\n\x19\x63\x61n_update_asset_contents\x18\x01 \x01(\x08\"\x1f\n\x1d\x43\x61nUpdateAssetContentsRequest\"i\n!GetAssetContentFormForUpdateReply\x12\x44\n\x12\x61sset_content_form\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.AssetContentForm\"c\n#GetAssetContentFormForUpdateRequest\x12<\n\x10\x61sset_content_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x19\n\x17UpdateAssetContentReply\"a\n\x19UpdateAssetContentRequest\x12\x44\n\x12\x61sset_content_form\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.AssetContentForm\"@\n\x1b\x43\x61nDeleteAssetContentsReply\x12!\n\x19\x63\x61n_delete_asset_contents\x18\x01 \x01(\x08\"\x1f\n\x1d\x43\x61nDeleteAssetContentsRequest\"\x19\n\x17\x44\x65leteAssetContentReply\"Y\n\x19\x44\x65leteAssetContentRequest\x12<\n\x10\x61sset_content_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"U\n%CanRegisterForAssetNotificationsReply\x12,\n$can_register_for_asset_notifications\x18\x01 \x01(\x08\")\n\'CanRegisterForAssetNotificationsRequest\"\x1b\n\x19RegisterForNewAssetsReply\"\x1d\n\x1bRegisterForNewAssetsRequest\"&\n$RegisterForNewAssetsByGenusTypeReply\"j\n&RegisterForNewAssetsByGenusTypeRequest\x12@\n\x10\x61sset_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"\x1f\n\x1dRegisterForChangedAssetsReply\"!\n\x1fRegisterForChangedAssetsRequest\"*\n(RegisterForChangedAssetsByGenusTypeReply\"n\n*RegisterForChangedAssetsByGenusTypeRequest\x12@\n\x10\x61sset_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"\x1e\n\x1cRegisterForChangedAssetReply\"V\n\x1eRegisterForChangedAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1f\n\x1dRegisterForDeletedAssetsReply\"!\n\x1fRegisterForDeletedAssetsRequest\"*\n(RegisterForDeletedAssetsByGenusTypeReply\"n\n*RegisterForDeletedAssetsByGenusTypeRequest\x12@\n\x10\x61sset_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"\x1e\n\x1cRegisterForDeletedAssetReply\"V\n\x1eRegisterForDeletedAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"!\n\x1fReliableAssetNotificationsReply\"#\n!ReliableAssetNotificationsRequest\"#\n!UnreliableAssetNotificationsReply\"%\n#UnreliableAssetNotificationsRequest\"#\n!AcknowledgeAssetNotificationReply\"b\n#AcknowledgeAssetNotificationRequest\x12;\n\x0fnotification_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"U\n%CanLookupAssetRepositoryMappingsReply\x12,\n$can_lookup_asset_repository_mappings\x18\x01 \x01(\x08\")\n\'CanLookupAssetRepositoryMappingsRequest\"#\n!UseComparativeRepositoryViewReply\"%\n#UseComparativeRepositoryViewRequest\"\x1f\n\x1dUsePlenaryRepositoryViewReply\"!\n\x1fUsePlenaryRepositoryViewRequest\"[\n\x1eGetAssetIdsByRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"Y\n\x1cGetAssetsByRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"^\n GetAssetIdsByRepositoriesRequest\x12:\n\x0erepository_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\\\n\x1eGetAssetsByRepositoriesRequest\x12:\n\x0erepository_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"V\n\x1eGetRepositoryIdsByAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"U\n\x1dGetRepositoriesByAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"1\n\x14\x43\x61nAssignAssetsReply\x12\x19\n\x11\x63\x61n_assign_assets\x18\x01 \x01(\x08\"\x18\n\x16\x43\x61nAssignAssetsRequest\"K\n CanAssignAssetsToRepositoryReply\x12\'\n\x1f\x63\x61n_assign_assets_to_repository\x18\x01 \x01(\x08\"_\n\"CanAssignAssetsToRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"^\n!GetAssignableRepositoryIdsRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x9c\x01\n)GetAssignableRepositoryIdsForAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1e\n\x1c\x41ssignAssetToRepositoryReply\"\x91\x01\n\x1e\x41ssignAssetToRepositoryRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\"\n UnassignAssetFromRepositoryReply\"\x95\x01\n\"UnassignAssetFromRepositoryRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"H\n\x1f\x43\x61nAccessAssetCompositionsReply\x12%\n\x1d\x63\x61n_access_asset_compositions\x18\x01 \x01(\x08\"#\n!CanAccessAssetCompositionsRequest\")\n\'UseComparativeAssetCompositionViewReply\"+\n)UseComparativeAssetCompositionViewRequest\"%\n#UsePlenaryAssetCompositionViewReply\"\'\n%UsePlenaryAssetCompositionViewRequest\"Y\n\x1bGetCompositionAssetsRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"U\n\x1dGetCompositionsByAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"3\n\x15\x43\x61nComposeAssetsReply\x12\x1a\n\x12\x63\x61n_compose_assets\x18\x01 \x01(\x08\"\x19\n\x17\x43\x61nComposeAssetsRequest\"\x0f\n\rAddAssetReply\"\x83\x01\n\x0f\x41\x64\x64\x41ssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x15\n\x13MoveAssetAheadReply\"\xc3\x01\n\x15MoveAssetAheadRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x38\n\x0creference_id\x18\x03 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x16\n\x14MoveAssetBehindReply\"\xc4\x01\n\x16MoveAssetBehindRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x38\n\x0creference_id\x18\x03 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x12\n\x10OrderAssetsReply\"\x87\x01\n\x12OrderAssetsRequest\x12\x35\n\tasset_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x12\n\x10RemoveAssetReply\"\x86\x01\n\x12RemoveAssetRequest\x12\x34\n\x08\x61sset_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"=\n\x1a\x43\x61nLookupCompositionsReply\x12\x1f\n\x17\x63\x61n_lookup_compositions\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nLookupCompositionsRequest\"$\n\"UseComparativeCompositionViewReply\"&\n$UseComparativeCompositionViewRequest\" \n\x1eUsePlenaryCompositionViewReply\"\"\n UsePlenaryCompositionViewRequest\"\x1f\n\x1dUseActiveCompositionViewReply\"!\n\x1fUseActiveCompositionViewRequest\"\"\n UseAnyStatusCompositionViewReply\"$\n\"UseAnyStatusCompositionViewRequest\"$\n\"UseSequesteredCompositionViewReply\"&\n$UseSequesteredCompositionViewRequest\"&\n$UseUnsequesteredCompositionViewReply\"(\n&UseUnsequesteredCompositionViewRequest\"O\n\x13GetCompositionReply\x12\x38\n\x0b\x63omposition\x18\x01 \x01(\x0b\x32#.dlkit.proto.repository.Composition\"S\n\x15GetCompositionRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"Z\n\x1bGetCompositionsByIdsRequest\x12;\n\x0f\x63omposition_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"k\n!GetCompositionsByGenusTypeRequest\x12\x46\n\x16\x63omposition_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"q\n\'GetCompositionsByParentGenusTypeRequest\x12\x46\n\x16\x63omposition_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"m\n\"GetCompositionsByRecordTypeRequest\x12G\n\x17\x63omposition_record_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"[\n GetCompositionsByProviderRequest\x12\x37\n\x0bresource_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x18\n\x16GetCompositionsRequest\"=\n\x1a\x43\x61nSearchCompositionsReply\x12\x1f\n\x17\x63\x61n_search_compositions\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nSearchCompositionsRequest\"_\n\x18GetCompositionQueryReply\x12\x43\n\x11\x63omposition_query\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.CompositionQuery\"\x1c\n\x1aGetCompositionQueryRequest\"d\n\x1dGetCompositionsByQueryRequest\x12\x43\n\x11\x63omposition_query\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.CompositionQuery\"b\n\x19GetCompositionSearchReply\x12\x45\n\x12\x63omposition_search\x18\x01 \x01(\x0b\x32).dlkit.proto.repository.CompositionSearch\"\x1d\n\x1bGetCompositionSearchRequest\"r\n\x1eGetCompositionSearchOrderReply\x12P\n\x18\x63omposition_search_order\x18\x01 \x01(\x0b\x32..dlkit.proto.repository.CompositionSearchOrder\"\"\n GetCompositionSearchOrderRequest\"t\n\x1cGetCompositionsBySearchReply\x12T\n\x1a\x63omposition_search_results\x18\x01 \x01(\x0b\x32\x30.dlkit.proto.repository.CompositionSearchResults\"\xac\x01\n\x1eGetCompositionsBySearchRequest\x12\x43\n\x11\x63omposition_query\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.CompositionQuery\x12\x45\n\x12\x63omposition_search\x18\x02 \x01(\x0b\x32).dlkit.proto.repository.CompositionSearch\"l\n%GetCompositionQueryFromInspectorReply\x12\x43\n\x11\x63omposition_query\x18\x01 \x01(\x0b\x32(.dlkit.proto.repository.CompositionQuery\"\x81\x01\n\'GetCompositionQueryFromInspectorRequest\x12V\n\x1b\x63omposition_query_inspector\x18\x01 \x01(\x0b\x32\x31.dlkit.proto.repository.CompositionQueryInspector\"=\n\x1a\x43\x61nCreateCompositionsReply\x12\x1f\n\x17\x63\x61n_create_compositions\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nCreateCompositionsRequest\"\\\n(CanCreateCompositionWithRecordTypesReply\x12\x30\n(can_create_composition_with_record_types\x18\x01 \x01(\x08\"v\n*CanCreateCompositionWithRecordTypesRequest\x12H\n\x18\x63omposition_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"e\n GetCompositionFormForCreateReply\x12\x41\n\x10\x63omposition_form\x18\x01 \x01(\x0b\x32\'.dlkit.proto.repository.CompositionForm\"n\n\"GetCompositionFormForCreateRequest\x12H\n\x18\x63omposition_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"R\n\x16\x43reateCompositionReply\x12\x38\n\x0b\x63omposition\x18\x01 \x01(\x0b\x32#.dlkit.proto.repository.Composition\"]\n\x18\x43reateCompositionRequest\x12\x41\n\x10\x63omposiiton_form\x18\x01 \x01(\x0b\x32\'.dlkit.proto.repository.CompositionForm\"=\n\x1a\x43\x61nUpdateCompositionsReply\x12\x1f\n\x17\x63\x61n_update_compositions\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nUpdateCompositionsRequest\"e\n GetCompositionFormForUpdateReply\x12\x41\n\x10\x63omposition_form\x18\x01 \x01(\x0b\x32\'.dlkit.proto.repository.CompositionForm\"`\n\"GetCompositionFormForUpdateRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x18\n\x16UpdateCompositionReply\"]\n\x18UpdateCompositionRequest\x12\x41\n\x10\x63omposiiton_form\x18\x01 \x01(\x0b\x32\'.dlkit.proto.repository.CompositionForm\"=\n\x1a\x43\x61nDeleteCompositionsReply\x12\x1f\n\x17\x63\x61n_delete_compositions\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nDeleteCompositionsRequest\"\x18\n\x16\x44\x65leteCompositionReply\"V\n\x18\x44\x65leteCompositionRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1c\n\x1a\x44\x65leteCompositionNodeReply\"Z\n\x1c\x44\x65leteCompositionNodeRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1a\n\x18\x41\x64\x64\x43ompositionChildReply\"\x9a\x01\n\x1a\x41\x64\x64\x43ompositionChildRequest\x12@\n\x14\x63hild_composition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1d\n\x1bRemoveCompositionChildReply\"\x9d\x01\n\x1dRemoveCompositionChildRequest\x12@\n\x14\x63hild_composition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"J\n CanManageCompositionAliasesReply\x12&\n\x1e\x63\x61n_manage_composition_aliases\x18\x01 \x01(\x08\"$\n\"CanManageCompositionAliasesRequest\"\x17\n\x15\x41liasCompositionReply\"\x8b\x01\n\x17\x41liasCompositionRequest\x12\x34\n\x08\x61lias_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12:\n\x0e\x63omposition_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\".\n,UseComparativeCompositionRepositoryViewReply\"0\n.UseComparativeCompositionRepositoryViewRequest\"*\n(UsePlenaryCompositionRepositoryViewReply\",\n*UsePlenaryCompositionRepositoryViewRequest\"a\n+CanLookupCompositionRepositoryMappingsReply\x12\x32\n*can_lookup_composition_repository_mappings\x18\x01 \x01(\x08\"/\n-CanLookupCompositionRepositoryMappingsRequest\"a\n$GetCompositionIdsByRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"_\n\"GetCompositionsByRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"d\n&GetCompositionIdsByRepositoriesRequest\x12:\n\x0erepository_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"b\n$GetCompositionsByRepositoriesRequest\x12:\n\x0erepository_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"b\n$GetRepositoryIdsByCompositionRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"a\n#GetRepositoriesByCompositionRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"=\n\x1a\x43\x61nAssignCompositionsReply\x12\x1f\n\x17\x63\x61n_assign_compositions\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nAssignCompositionsRequest\"W\n&CanAssignCompositionsToRepositoryReply\x12-\n%can_assign_compositions_to_repository\x18\x01 \x01(\x08\"e\n(CanAssignCompositionsToRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\xa8\x01\n/GetAssignableRepositoryIdsForCompositionRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"$\n\"AssignCompositionToRepositoryReply\"\x9d\x01\n$AssignCompositionToRepositoryRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"(\n&UnassignCompositionFromRepositoryReply\"\xa1\x01\n(UnassignCompositionFromRepositoryRequest\x12:\n\x0e\x63omposition_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"=\n\x1a\x43\x61nLookupRepositoriesReply\x12\x1f\n\x17\x63\x61n_lookup_repositories\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nLookupRepositoriesRequest\"Y\n\x1bGetRepositoriesByIdsRequest\x12:\n\x0erepository_ids\x18\x01 \x03(\x0b\x32\".dlkit.primordium.id.primitives.Id\"j\n!GetRepositoriesByGenusTypeRequest\x12\x45\n\x15repository_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"p\n\'GetRepositoriesByParentGenusTypeRequest\x12\x45\n\x15repository_genus_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"l\n\"GetRepositoriesByRecordTypeRequest\x12\x46\n\x16repository_record_type\x18\x01 \x01(\x0b\x32&.dlkit.primordium.type.primitives.Type\"[\n GetRepositoriesByProviderRequest\x12\x37\n\x0bresource_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x18\n\x16GetRepositoriesRequest\"=\n\x1a\x43\x61nSearchRepositoriesReply\x12\x1f\n\x17\x63\x61n_search_repositories\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nSearchRepositoriesRequest\"\\\n\x17GetRepositoryQueryReply\x12\x41\n\x10repository_query\x18\x01 \x01(\x0b\x32\'.dlkit.proto.repository.RepositoryQuery\"\x1b\n\x19GetRepositoryQueryRequest\"b\n\x1dGetRepositoriesByQueryRequest\x12\x41\n\x10repository_query\x18\x01 \x01(\x0b\x32\'.dlkit.proto.repository.RepositoryQuery\"=\n\x1a\x43\x61nCreateRepositoriesReply\x12\x1f\n\x17\x63\x61n_create_repositories\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nCreateRepositoriesRequest\"Z\n\'CanCreateRepositoryWithRecordTypesReply\x12/\n\'can_create_repository_with_record_types\x18\x01 \x01(\x08\"t\n)CanCreateRepositoryWithRecordTypesRequest\x12G\n\x17repository_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"b\n\x1fGetRepositoryFormForCreateReply\x12?\n\x0frepository_form\x18\x01 \x01(\x0b\x32&.dlkit.proto.repository.RepositoryForm\"l\n!GetRepositoryFormForCreateRequest\x12G\n\x17repository_record_types\x18\x01 \x03(\x0b\x32&.dlkit.primordium.type.primitives.Type\"O\n\x15\x43reateRepositoryReply\x12\x36\n\nrepository\x18\x01 \x01(\x0b\x32\".dlkit.proto.repository.Repository\"Z\n\x17\x43reateRepositoryRequest\x12?\n\x0frepository_form\x18\x01 \x01(\x0b\x32&.dlkit.proto.repository.RepositoryForm\"=\n\x1a\x43\x61nUpdateRepositoriesReply\x12\x1f\n\x17\x63\x61n_update_repositories\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nUpdateRepositoriesRequest\"b\n\x1fGetRepositoryFormForUpdateReply\x12?\n\x0frepository_form\x18\x01 \x01(\x0b\x32&.dlkit.proto.repository.RepositoryForm\"^\n!GetRepositoryFormForUpdateRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x17\n\x15UpdateRepositoryReply\"Z\n\x17UpdateRepositoryRequest\x12?\n\x0frepository_form\x18\x01 \x01(\x0b\x32&.dlkit.proto.repository.RepositoryForm\"=\n\x1a\x43\x61nDeleteRepositoriesReply\x12\x1f\n\x17\x63\x61n_delete_repositories\x18\x01 \x01(\x08\"\x1e\n\x1c\x43\x61nDeleteRepositoriesRequest\"\x17\n\x15\x44\x65leteRepositoryReply\"T\n\x17\x44\x65leteRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"H\n\x1f\x43\x61nManageRepositoryAliasesReply\x12%\n\x1d\x63\x61n_manage_repository_aliases\x18\x01 \x01(\x08\"#\n!CanManageRepositoryAliasesRequest\"\x16\n\x14\x41liasRepositoryReply\"\x89\x01\n\x16\x41liasRepositoryRequest\x12\x34\n\x08\x61lias_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"O\n\x1dGetRepositoryHierarchyIdReply\x12.\n\x02id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"!\n\x1fGetRepositoryHierarchyIdRequest\"R\n\x1bGetRepositoryHierarchyReply\x12\x33\n\thierarchy\x18\x01 \x01(\x0b\x32 .dlkit.proto.hierarchy.Hierarchy\"\x1f\n\x1dGetRepositoryHierarchyRequest\"L\n!CanAccessRepositoryHierarchyReply\x12\'\n\x1f\x63\x61n_access_repository_hierarchy\x18\x01 \x01(\x08\"%\n#CanAccessRepositoryHierarchyRequest\"\x1d\n\x1bGetRootRepositoryIdsRequest\"\x1c\n\x1aGetRootRepositoriesRequest\"=\n\x1aHasParentRepositoriesReply\x12\x1f\n\x17has_parent_repositories\x18\x01 \x01(\x08\"Y\n\x1cHasParentRepositoriesRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"<\n\x19IsParentOfRepositoryReply\x12\x1f\n\x17is_parent_of_repository\x18\x01 \x01(\x08\"\x89\x01\n\x1bIsParentOfRepositoryRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"Z\n\x1dGetParentRepositoryIdsRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"Y\n\x1cGetParentRepositoriesRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"@\n\x1bIsAncestorOfRepositoryReply\x12!\n\x19is_ancestor_of_repository\x18\x01 \x01(\x08\"\x8b\x01\n\x1dIsAncestorOfRepositoryRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\";\n\x19HasChildRepositoriesReply\x12\x1e\n\x16has_child_repositories\x18\x01 \x01(\x08\"X\n\x1bHasChildRepositoriesRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\":\n\x18IsChildOfRepositoryReply\x12\x1e\n\x16is_child_of_repository\x18\x01 \x01(\x08\"\x88\x01\n\x1aIsChildOfRepositoryRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"Y\n\x1cGetChildRepositoryIdsRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"X\n\x1bGetChildRepositoriesRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"D\n\x1dIsDescendantOfRepositoryReply\x12#\n\x1bis_descendant_of_repository\x18\x01 \x01(\x08\"\x8d\x01\n\x1fIsDescendantOfRepositoryRequest\x12/\n\x03id_\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"F\n\x19GetRepositoryNodeIdsReply\x12)\n\x04node\x18\x01 \x01(\x0b\x32\x1b.dlkit.proto.hierarchy.Node\"\xa6\x01\n\x1bGetRepositoryNodeIdsRequest\x12\x17\n\x0f\x61ncestor_levels\x18\x01 \x01(\x11\x12\x19\n\x11\x64\x65scendant_levels\x18\x02 \x01(\x11\x12\x18\n\x10include_siblings\x18\x03 \x01(\x08\x12\x39\n\rrepository_id\x18\x04 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"Z\n\x17GetRepositoryNodesReply\x12?\n\x0frepository_node\x18\x01 \x01(\x0b\x32&.dlkit.proto.repository.RepositoryNode\"\xa4\x01\n\x19GetRepositoryNodesRequest\x12\x17\n\x0f\x61ncestor_levels\x18\x01 \x01(\x11\x12\x19\n\x11\x64\x65scendant_levels\x18\x02 \x01(\x11\x12\x18\n\x10include_siblings\x18\x03 \x01(\x08\x12\x39\n\rrepository_id\x18\x04 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"L\n!CanModifyRepositoryHierarchyReply\x12\'\n\x1f\x63\x61n_modify_repository_hierarchy\x18\x01 \x01(\x08\"%\n#CanModifyRepositoryHierarchyRequest\"\x18\n\x16\x41\x64\x64RootRepositoryReply\"U\n\x18\x41\x64\x64RootRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1b\n\x19RemoveRootRepositoryReply\"X\n\x1bRemoveRootRepositoryRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x19\n\x17\x41\x64\x64\x43hildRepositoryReply\"\x8c\x01\n\x19\x41\x64\x64\x43hildRepositoryRequest\x12\x34\n\x08\x63hild_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1c\n\x1aRemoveChildRepositoryReply\"\x8f\x01\n\x1cRemoveChildRepositoryRequest\x12\x34\n\x08\x63hild_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\x12\x39\n\rrepository_id\x18\x02 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id\"\x1e\n\x1cRemoveChildRepositoriesReply\"[\n\x1eRemoveChildRepositoriesRequest\x12\x39\n\rrepository_id\x18\x01 \x01(\x0b\x32\".dlkit.primordium.id.primitives.Id2\x81\r\n\x12\x41ssetLookupSession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12q\n\x0f\x43\x61nLookupAssets\x12..dlkit.proto.repository.CanLookupAssetsRequest\x1a,.dlkit.proto.repository.CanLookupAssetsReply\"\x00\x12\x89\x01\n\x17UseComparativeAssetView\x12\x36.dlkit.proto.repository.UseComparativeAssetViewRequest\x1a\x34.dlkit.proto.repository.UseComparativeAssetViewReply\"\x00\x12}\n\x13UsePlenaryAssetView\x12\x32.dlkit.proto.repository.UsePlenaryAssetViewRequest\x1a\x30.dlkit.proto.repository.UsePlenaryAssetViewReply\"\x00\x12\x92\x01\n\x1aUseFederatedRepositoryView\x12\x39.dlkit.proto.repository.UseFederatedRepositoryViewRequest\x1a\x37.dlkit.proto.repository.UseFederatedRepositoryViewReply\"\x00\x12\x8f\x01\n\x19UseIsolatedRepositoryView\x12\x38.dlkit.proto.repository.UseIsolatedRepositoryViewRequest\x1a\x36.dlkit.proto.repository.UseIsolatedRepositoryViewReply\"\x00\x12\\\n\x08GetAsset\x12\'.dlkit.proto.repository.GetAssetRequest\x1a%.dlkit.proto.repository.GetAssetReply\"\x00\x12\x62\n\x0eGetAssetsByIds\x12-.dlkit.proto.repository.GetAssetsByIdsRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12n\n\x14GetAssetsByGenusType\x12\x33.dlkit.proto.repository.GetAssetsByGenusTypeRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12z\n\x1aGetAssetsByParentGenusType\x12\x39.dlkit.proto.repository.GetAssetsByParentGenusTypeRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12p\n\x15GetAssetsByRecordType\x12\x34.dlkit.proto.repository.GetAssetsByRecordTypeRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12l\n\x13GetAssetsByProvider\x12\x32.dlkit.proto.repository.GetAssetsByProviderRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12X\n\tGetAssets\x12(.dlkit.proto.repository.GetAssetsRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x32\xe2\x06\n\x11\x41ssetQuerySession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12q\n\x0f\x43\x61nSearchAssets\x12..dlkit.proto.repository.CanSearchAssetsRequest\x1a,.dlkit.proto.repository.CanSearchAssetsReply\"\x00\x12\x92\x01\n\x1aUseFederatedRepositoryView\x12\x39.dlkit.proto.repository.UseFederatedRepositoryViewRequest\x1a\x37.dlkit.proto.repository.UseFederatedRepositoryViewReply\"\x00\x12\x8f\x01\n\x19UseIsolatedRepositoryView\x12\x38.dlkit.proto.repository.UseIsolatedRepositoryViewRequest\x1a\x36.dlkit.proto.repository.UseIsolatedRepositoryViewReply\"\x00\x12k\n\rGetAssetQuery\x12,.dlkit.proto.repository.GetAssetQueryRequest\x1a*.dlkit.proto.repository.GetAssetQueryReply\"\x00\x12\x66\n\x10GetAssetsByQuery\x12/.dlkit.proto.repository.GetAssetsByQueryRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x32\x91\x04\n\x12\x41ssetSearchSession\x12n\n\x0eGetAssetSearch\x12-.dlkit.proto.repository.GetAssetSearchRequest\x1a+.dlkit.proto.repository.GetAssetSearchReply\"\x00\x12}\n\x13GetAssetSearchOrder\x12\x32.dlkit.proto.repository.GetAssetSearchOrderRequest\x1a\x30.dlkit.proto.repository.GetAssetSearchOrderReply\"\x00\x12w\n\x11GetAssetsBySearch\x12\x30.dlkit.proto.repository.GetAssetsBySearchRequest\x1a..dlkit.proto.repository.GetAssetsBySearchReply\"\x00\x12\x92\x01\n\x1aGetAssetQueryFromInspector\x12\x39.dlkit.proto.repository.GetAssetQueryFromInspectorRequest\x1a\x37.dlkit.proto.repository.GetAssetQueryFromInspectorReply\"\x00\x32\x8a\x16\n\x11\x41ssetAdminSession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12q\n\x0f\x43\x61nCreateAssets\x12..dlkit.proto.repository.CanCreateAssetsRequest\x1a,.dlkit.proto.repository.CanCreateAssetsReply\"\x00\x12\x9b\x01\n\x1d\x43\x61nCreateAssetWithRecordTypes\x12<.dlkit.proto.repository.CanCreateAssetWithRecordTypesRequest\x1a:.dlkit.proto.repository.CanCreateAssetWithRecordTypesReply\"\x00\x12\x83\x01\n\x15GetAssetFormForCreate\x12\x34.dlkit.proto.repository.GetAssetFormForCreateRequest\x1a\x32.dlkit.proto.repository.GetAssetFormForCreateReply\"\x00\x12\x65\n\x0b\x43reateAsset\x12*.dlkit.proto.repository.CreateAssetRequest\x1a(.dlkit.proto.repository.CreateAssetReply\"\x00\x12q\n\x0f\x43\x61nUpdateAssets\x12..dlkit.proto.repository.CanUpdateAssetsRequest\x1a,.dlkit.proto.repository.CanUpdateAssetsReply\"\x00\x12\x83\x01\n\x15GetAssetFormForUpdate\x12\x34.dlkit.proto.repository.GetAssetFormForUpdateRequest\x1a\x32.dlkit.proto.repository.GetAssetFormForUpdateReply\"\x00\x12\x65\n\x0bUpdateAsset\x12*.dlkit.proto.repository.UpdateAssetRequest\x1a(.dlkit.proto.repository.UpdateAssetReply\"\x00\x12q\n\x0f\x43\x61nDeleteAssets\x12..dlkit.proto.repository.CanDeleteAssetsRequest\x1a,.dlkit.proto.repository.CanDeleteAssetsReply\"\x00\x12\x65\n\x0b\x44\x65leteAsset\x12*.dlkit.proto.repository.DeleteAssetRequest\x1a(.dlkit.proto.repository.DeleteAssetReply\"\x00\x12\x83\x01\n\x15\x43\x61nManageAssetAliases\x12\x34.dlkit.proto.repository.CanManageAssetAliasesRequest\x1a\x32.dlkit.proto.repository.CanManageAssetAliasesReply\"\x00\x12\x62\n\nAliasAsset\x12).dlkit.proto.repository.AliasAssetRequest\x1a\'.dlkit.proto.repository.AliasAssetReply\"\x00\x12\x83\x01\n\x15\x43\x61nCreateAssetContent\x12\x34.dlkit.proto.repository.CanCreateAssetContentRequest\x1a\x32.dlkit.proto.repository.CanCreateAssetContentReply\"\x00\x12\xb0\x01\n$CanCreateAssetContentWithRecordTypes\x12\x43.dlkit.proto.repository.CanCreateAssetContentWithRecordTypesRequest\x1a\x41.dlkit.proto.repository.CanCreateAssetContentWithRecordTypesReply\"\x00\x12\x98\x01\n\x1cGetAssetContentFormForCreate\x12;.dlkit.proto.repository.GetAssetContentFormForCreateRequest\x1a\x39.dlkit.proto.repository.GetAssetContentFormForCreateReply\"\x00\x12z\n\x12\x43reateAssetContent\x12\x31.dlkit.proto.repository.CreateAssetContentRequest\x1a/.dlkit.proto.repository.CreateAssetContentReply\"\x00\x12\x86\x01\n\x16\x43\x61nUpdateAssetContents\x12\x35.dlkit.proto.repository.CanUpdateAssetContentsRequest\x1a\x33.dlkit.proto.repository.CanUpdateAssetContentsReply\"\x00\x12\x98\x01\n\x1cGetAssetContentFormForUpdate\x12;.dlkit.proto.repository.GetAssetContentFormForUpdateRequest\x1a\x39.dlkit.proto.repository.GetAssetContentFormForUpdateReply\"\x00\x12z\n\x12UpdateAssetContent\x12\x31.dlkit.proto.repository.UpdateAssetContentRequest\x1a/.dlkit.proto.repository.UpdateAssetContentReply\"\x00\x12\x86\x01\n\x16\x43\x61nDeleteAssetContents\x12\x35.dlkit.proto.repository.CanDeleteAssetContentsRequest\x1a\x33.dlkit.proto.repository.CanDeleteAssetContentsReply\"\x00\x12z\n\x12\x44\x65leteAssetContent\x12\x31.dlkit.proto.repository.DeleteAssetContentRequest\x1a/.dlkit.proto.repository.DeleteAssetContentReply\"\x00\x32\xd0\x12\n\x18\x41ssetNotificationSession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12\xa4\x01\n CanRegisterForAssetNotifications\x12?.dlkit.proto.repository.CanRegisterForAssetNotificationsRequest\x1a=.dlkit.proto.repository.CanRegisterForAssetNotificationsReply\"\x00\x12\x92\x01\n\x1aUseFederatedRepositoryView\x12\x39.dlkit.proto.repository.UseFederatedRepositoryViewRequest\x1a\x37.dlkit.proto.repository.UseFederatedRepositoryViewReply\"\x00\x12\x8f\x01\n\x19UseIsolatedRepositoryView\x12\x38.dlkit.proto.repository.UseIsolatedRepositoryViewRequest\x1a\x36.dlkit.proto.repository.UseIsolatedRepositoryViewReply\"\x00\x12\x80\x01\n\x14RegisterForNewAssets\x12\x33.dlkit.proto.repository.RegisterForNewAssetsRequest\x1a\x31.dlkit.proto.repository.RegisterForNewAssetsReply\"\x00\x12\xa1\x01\n\x1fRegisterForNewAssetsByGenusType\x12>.dlkit.proto.repository.RegisterForNewAssetsByGenusTypeRequest\x1a<.dlkit.proto.repository.RegisterForNewAssetsByGenusTypeReply\"\x00\x12\x8c\x01\n\x18RegisterForChangedAssets\x12\x37.dlkit.proto.repository.RegisterForChangedAssetsRequest\x1a\x35.dlkit.proto.repository.RegisterForChangedAssetsReply\"\x00\x12\xad\x01\n#RegisterForChangedAssetsByGenusType\x12\x42.dlkit.proto.repository.RegisterForChangedAssetsByGenusTypeRequest\x1a@.dlkit.proto.repository.RegisterForChangedAssetsByGenusTypeReply\"\x00\x12\x89\x01\n\x17RegisterForChangedAsset\x12\x36.dlkit.proto.repository.RegisterForChangedAssetRequest\x1a\x34.dlkit.proto.repository.RegisterForChangedAssetReply\"\x00\x12\x8c\x01\n\x18RegisterForDeletedAssets\x12\x37.dlkit.proto.repository.RegisterForDeletedAssetsRequest\x1a\x35.dlkit.proto.repository.RegisterForDeletedAssetsReply\"\x00\x12\xad\x01\n#RegisterForDeletedAssetsByGenusType\x12\x42.dlkit.proto.repository.RegisterForDeletedAssetsByGenusTypeRequest\x1a@.dlkit.proto.repository.RegisterForDeletedAssetsByGenusTypeReply\"\x00\x12\x89\x01\n\x17RegisterForDeletedAsset\x12\x36.dlkit.proto.repository.RegisterForDeletedAssetRequest\x1a\x34.dlkit.proto.repository.RegisterForDeletedAssetReply\"\x00\x12\x92\x01\n\x1aReliableAssetNotifications\x12\x39.dlkit.proto.repository.ReliableAssetNotificationsRequest\x1a\x37.dlkit.proto.repository.ReliableAssetNotificationsReply\"\x00\x12\x98\x01\n\x1cUnreliableAssetNotifications\x12;.dlkit.proto.repository.UnreliableAssetNotificationsRequest\x1a\x39.dlkit.proto.repository.UnreliableAssetNotificationsReply\"\x00\x12\x98\x01\n\x1c\x41\x63knowledgeAssetNotification\x12;.dlkit.proto.repository.AcknowledgeAssetNotificationRequest\x1a\x39.dlkit.proto.repository.AcknowledgeAssetNotificationReply\"\x00\x32\xbf\t\n\x16\x41ssetRepositorySession\x12\xa4\x01\n CanLookupAssetRepositoryMappings\x12?.dlkit.proto.repository.CanLookupAssetRepositoryMappingsRequest\x1a=.dlkit.proto.repository.CanLookupAssetRepositoryMappingsReply\"\x00\x12\x98\x01\n\x1cUseComparativeRepositoryView\x12;.dlkit.proto.repository.UseComparativeRepositoryViewRequest\x1a\x39.dlkit.proto.repository.UseComparativeRepositoryViewReply\"\x00\x12\x8c\x01\n\x18UsePlenaryRepositoryView\x12\x37.dlkit.proto.repository.UsePlenaryRepositoryViewRequest\x1a\x35.dlkit.proto.repository.UsePlenaryRepositoryViewReply\"\x00\x12y\n\x17GetAssetIdsByRepository\x12\x36.dlkit.proto.repository.GetAssetIdsByRepositoryRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12p\n\x15GetAssetsByRepository\x12\x34.dlkit.proto.repository.GetAssetsByRepositoryRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12}\n\x19GetAssetIdsByRepositories\x12\x38.dlkit.proto.repository.GetAssetIdsByRepositoriesRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12t\n\x17GetAssetsByRepositories\x12\x36.dlkit.proto.repository.GetAssetsByRepositoriesRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12y\n\x17GetRepositoryIdsByAsset\x12\x36.dlkit.proto.repository.GetRepositoryIdsByAssetRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12w\n\x16GetRepositoriesByAsset\x12\x35.dlkit.proto.repository.GetRepositoriesByAssetRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x32\xe4\x06\n AssetRepositoryAssignmentSession\x12q\n\x0f\x43\x61nAssignAssets\x12..dlkit.proto.repository.CanAssignAssetsRequest\x1a,.dlkit.proto.repository.CanAssignAssetsReply\"\x00\x12\x95\x01\n\x1b\x43\x61nAssignAssetsToRepository\x12:.dlkit.proto.repository.CanAssignAssetsToRepositoryRequest\x1a\x38.dlkit.proto.repository.CanAssignAssetsToRepositoryReply\"\x00\x12\x7f\n\x1aGetAssignableRepositoryIds\x12\x39.dlkit.proto.repository.GetAssignableRepositoryIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x8f\x01\n\"GetAssignableRepositoryIdsForAsset\x12\x41.dlkit.proto.repository.GetAssignableRepositoryIdsForAssetRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x89\x01\n\x17\x41ssignAssetToRepository\x12\x36.dlkit.proto.repository.AssignAssetToRepositoryRequest\x1a\x34.dlkit.proto.repository.AssignAssetToRepositoryReply\"\x00\x12\x95\x01\n\x1bUnassignAssetFromRepository\x12:.dlkit.proto.repository.UnassignAssetFromRepositoryRequest\x1a\x38.dlkit.proto.repository.UnassignAssetFromRepositoryReply\"\x00\x32\xed\t\n\x17\x41ssetCompositionSession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12\x92\x01\n\x1a\x43\x61nAccessAssetCompositions\x12\x39.dlkit.proto.repository.CanAccessAssetCompositionsRequest\x1a\x37.dlkit.proto.repository.CanAccessAssetCompositionsReply\"\x00\x12\xaa\x01\n\"UseComparativeAssetCompositionView\x12\x41.dlkit.proto.repository.UseComparativeAssetCompositionViewRequest\x1a?.dlkit.proto.repository.UseComparativeAssetCompositionViewReply\"\x00\x12\x9e\x01\n\x1eUsePlenaryAssetCompositionView\x12=.dlkit.proto.repository.UsePlenaryAssetCompositionViewRequest\x1a;.dlkit.proto.repository.UsePlenaryAssetCompositionViewReply\"\x00\x12\x92\x01\n\x1aUseFederatedRepositoryView\x12\x39.dlkit.proto.repository.UseFederatedRepositoryViewRequest\x1a\x37.dlkit.proto.repository.UseFederatedRepositoryViewReply\"\x00\x12\x8f\x01\n\x19UseIsolatedRepositoryView\x12\x38.dlkit.proto.repository.UseIsolatedRepositoryViewRequest\x1a\x36.dlkit.proto.repository.UseIsolatedRepositoryViewReply\"\x00\x12n\n\x14GetCompositionAssets\x12\x33.dlkit.proto.repository.GetCompositionAssetsRequest\x1a\x1d.dlkit.proto.repository.Asset\"\x00\x30\x01\x12x\n\x16GetCompositionsByAsset\x12\x35.dlkit.proto.repository.GetCompositionsByAssetRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x32\x84\x07\n\x1d\x41ssetCompositionDesignSession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12t\n\x10\x43\x61nComposeAssets\x12/.dlkit.proto.repository.CanComposeAssetsRequest\x1a-.dlkit.proto.repository.CanComposeAssetsReply\"\x00\x12\\\n\x08\x41\x64\x64\x41sset\x12\'.dlkit.proto.repository.AddAssetRequest\x1a%.dlkit.proto.repository.AddAssetReply\"\x00\x12n\n\x0eMoveAssetAhead\x12-.dlkit.proto.repository.MoveAssetAheadRequest\x1a+.dlkit.proto.repository.MoveAssetAheadReply\"\x00\x12q\n\x0fMoveAssetBehind\x12..dlkit.proto.repository.MoveAssetBehindRequest\x1a,.dlkit.proto.repository.MoveAssetBehindReply\"\x00\x12\x65\n\x0bOrderAssets\x12*.dlkit.proto.repository.OrderAssetsRequest\x1a(.dlkit.proto.repository.OrderAssetsReply\"\x00\x12\x65\n\x0bRemoveAsset\x12*.dlkit.proto.repository.RemoveAssetRequest\x1a(.dlkit.proto.repository.RemoveAssetReply\"\x00\x32\xa9\x13\n\x18\x43ompositionLookupSession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12\x83\x01\n\x15\x43\x61nLookupCompositions\x12\x34.dlkit.proto.repository.CanLookupCompositionsRequest\x1a\x32.dlkit.proto.repository.CanLookupCompositionsReply\"\x00\x12\x9b\x01\n\x1dUseComparativeCompositionView\x12<.dlkit.proto.repository.UseComparativeCompositionViewRequest\x1a:.dlkit.proto.repository.UseComparativeCompositionViewReply\"\x00\x12\x8f\x01\n\x19UsePlenaryCompositionView\x12\x38.dlkit.proto.repository.UsePlenaryCompositionViewRequest\x1a\x36.dlkit.proto.repository.UsePlenaryCompositionViewReply\"\x00\x12\x92\x01\n\x1aUseFederatedRepositoryView\x12\x39.dlkit.proto.repository.UseFederatedRepositoryViewRequest\x1a\x37.dlkit.proto.repository.UseFederatedRepositoryViewReply\"\x00\x12\x8f\x01\n\x19UseIsolatedRepositoryView\x12\x38.dlkit.proto.repository.UseIsolatedRepositoryViewRequest\x1a\x36.dlkit.proto.repository.UseIsolatedRepositoryViewReply\"\x00\x12\x8c\x01\n\x18UseActiveCompositionView\x12\x37.dlkit.proto.repository.UseActiveCompositionViewRequest\x1a\x35.dlkit.proto.repository.UseActiveCompositionViewReply\"\x00\x12\x95\x01\n\x1bUseAnyStatusCompositionView\x12:.dlkit.proto.repository.UseAnyStatusCompositionViewRequest\x1a\x38.dlkit.proto.repository.UseAnyStatusCompositionViewReply\"\x00\x12\x9b\x01\n\x1dUseSequesteredCompositionView\x12<.dlkit.proto.repository.UseSequesteredCompositionViewRequest\x1a:.dlkit.proto.repository.UseSequesteredCompositionViewReply\"\x00\x12\xa1\x01\n\x1fUseUnsequesteredCompositionView\x12>.dlkit.proto.repository.UseUnsequesteredCompositionViewRequest\x1a<.dlkit.proto.repository.UseUnsequesteredCompositionViewReply\"\x00\x12n\n\x0eGetComposition\x12-.dlkit.proto.repository.GetCompositionRequest\x1a+.dlkit.proto.repository.GetCompositionReply\"\x00\x12t\n\x14GetCompositionsByIds\x12\x33.dlkit.proto.repository.GetCompositionsByIdsRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x12\x80\x01\n\x1aGetCompositionsByGenusType\x12\x39.dlkit.proto.repository.GetCompositionsByGenusTypeRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x12\x8c\x01\n GetCompositionsByParentGenusType\x12?.dlkit.proto.repository.GetCompositionsByParentGenusTypeRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x12\x82\x01\n\x1bGetCompositionsByRecordType\x12:.dlkit.proto.repository.GetCompositionsByRecordTypeRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x12~\n\x19GetCompositionsByProvider\x12\x38.dlkit.proto.repository.GetCompositionsByProviderRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x12j\n\x0fGetCompositions\x12..dlkit.proto.repository.GetCompositionsRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x32\xe1\t\n\x17\x43ompositionQuerySession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12\x83\x01\n\x15\x43\x61nSearchCompositions\x12\x34.dlkit.proto.repository.CanSearchCompositionsRequest\x1a\x32.dlkit.proto.repository.CanSearchCompositionsReply\"\x00\x12\x92\x01\n\x1aUseFederatedRepositoryView\x12\x39.dlkit.proto.repository.UseFederatedRepositoryViewRequest\x1a\x37.dlkit.proto.repository.UseFederatedRepositoryViewReply\"\x00\x12\x8f\x01\n\x19UseIsolatedRepositoryView\x12\x38.dlkit.proto.repository.UseIsolatedRepositoryViewRequest\x1a\x36.dlkit.proto.repository.UseIsolatedRepositoryViewReply\"\x00\x12\x9b\x01\n\x1dUseSequesteredCompositionView\x12<.dlkit.proto.repository.UseSequesteredCompositionViewRequest\x1a:.dlkit.proto.repository.UseSequesteredCompositionViewReply\"\x00\x12\xa1\x01\n\x1fUseUnsequesteredCompositionView\x12>.dlkit.proto.repository.UseUnsequesteredCompositionViewRequest\x1a<.dlkit.proto.repository.UseUnsequesteredCompositionViewReply\"\x00\x12}\n\x13GetCompositionQuery\x12\x32.dlkit.proto.repository.GetCompositionQueryRequest\x1a\x30.dlkit.proto.repository.GetCompositionQueryReply\"\x00\x12x\n\x16GetCompositionsByQuery\x12\x35.dlkit.proto.repository.GetCompositionsByQueryRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x32\xe2\x04\n\x18\x43ompositionSearchSession\x12\x80\x01\n\x14GetCompositionSearch\x12\x33.dlkit.proto.repository.GetCompositionSearchRequest\x1a\x31.dlkit.proto.repository.GetCompositionSearchReply\"\x00\x12\x8f\x01\n\x19GetCompositionSearchOrder\x12\x38.dlkit.proto.repository.GetCompositionSearchOrderRequest\x1a\x36.dlkit.proto.repository.GetCompositionSearchOrderReply\"\x00\x12\x89\x01\n\x17GetCompositionsBySearch\x12\x36.dlkit.proto.repository.GetCompositionsBySearchRequest\x1a\x34.dlkit.proto.repository.GetCompositionsBySearchReply\"\x00\x12\xa4\x01\n GetCompositionQueryFromInspector\x12?.dlkit.proto.repository.GetCompositionQueryFromInspectorRequest\x1a=.dlkit.proto.repository.GetCompositionQueryFromInspectorReply\"\x00\x32\xf2\x10\n\x17\x43ompositionAdminSession\x12q\n\x0fGetRepositoryId\x12..dlkit.proto.repository.GetRepositoryIdRequest\x1a,.dlkit.proto.repository.GetRepositoryIdReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12\x83\x01\n\x15\x43\x61nCreateCompositions\x12\x34.dlkit.proto.repository.CanCreateCompositionsRequest\x1a\x32.dlkit.proto.repository.CanCreateCompositionsReply\"\x00\x12\xad\x01\n#CanCreateCompositionWithRecordTypes\x12\x42.dlkit.proto.repository.CanCreateCompositionWithRecordTypesRequest\x1a@.dlkit.proto.repository.CanCreateCompositionWithRecordTypesReply\"\x00\x12\x95\x01\n\x1bGetCompositionFormForCreate\x12:.dlkit.proto.repository.GetCompositionFormForCreateRequest\x1a\x38.dlkit.proto.repository.GetCompositionFormForCreateReply\"\x00\x12w\n\x11\x43reateComposition\x12\x30.dlkit.proto.repository.CreateCompositionRequest\x1a..dlkit.proto.repository.CreateCompositionReply\"\x00\x12\x83\x01\n\x15\x43\x61nUpdateCompositions\x12\x34.dlkit.proto.repository.CanUpdateCompositionsRequest\x1a\x32.dlkit.proto.repository.CanUpdateCompositionsReply\"\x00\x12\x95\x01\n\x1bGetCompositionFormForUpdate\x12:.dlkit.proto.repository.GetCompositionFormForUpdateRequest\x1a\x38.dlkit.proto.repository.GetCompositionFormForUpdateReply\"\x00\x12w\n\x11UpdateComposition\x12\x30.dlkit.proto.repository.UpdateCompositionRequest\x1a..dlkit.proto.repository.UpdateCompositionReply\"\x00\x12\x83\x01\n\x15\x43\x61nDeleteCompositions\x12\x34.dlkit.proto.repository.CanDeleteCompositionsRequest\x1a\x32.dlkit.proto.repository.CanDeleteCompositionsReply\"\x00\x12w\n\x11\x44\x65leteComposition\x12\x30.dlkit.proto.repository.DeleteCompositionRequest\x1a..dlkit.proto.repository.DeleteCompositionReply\"\x00\x12\x83\x01\n\x15\x44\x65leteCompositionNode\x12\x34.dlkit.proto.repository.DeleteCompositionNodeRequest\x1a\x32.dlkit.proto.repository.DeleteCompositionNodeReply\"\x00\x12}\n\x13\x41\x64\x64\x43ompositionChild\x12\x32.dlkit.proto.repository.AddCompositionChildRequest\x1a\x30.dlkit.proto.repository.AddCompositionChildReply\"\x00\x12\x86\x01\n\x16RemoveCompositionChild\x12\x35.dlkit.proto.repository.RemoveCompositionChildRequest\x1a\x33.dlkit.proto.repository.RemoveCompositionChildReply\"\x00\x12\x95\x01\n\x1b\x43\x61nManageCompositionAliases\x12:.dlkit.proto.repository.CanManageCompositionAliasesRequest\x1a\x38.dlkit.proto.repository.CanManageCompositionAliasesReply\"\x00\x12t\n\x10\x41liasComposition\x12/.dlkit.proto.repository.AliasCompositionRequest\x1a-.dlkit.proto.repository.AliasCompositionReply\"\x00\x32\xf3\n\n\x1c\x43ompositionRepositorySession\x12\xb9\x01\n\'UseComparativeCompositionRepositoryView\x12\x46.dlkit.proto.repository.UseComparativeCompositionRepositoryViewRequest\x1a\x44.dlkit.proto.repository.UseComparativeCompositionRepositoryViewReply\"\x00\x12\xad\x01\n#UsePlenaryCompositionRepositoryView\x12\x42.dlkit.proto.repository.UsePlenaryCompositionRepositoryViewRequest\x1a@.dlkit.proto.repository.UsePlenaryCompositionRepositoryViewReply\"\x00\x12\xb6\x01\n&CanLookupCompositionRepositoryMappings\x12\x45.dlkit.proto.repository.CanLookupCompositionRepositoryMappingsRequest\x1a\x43.dlkit.proto.repository.CanLookupCompositionRepositoryMappingsReply\"\x00\x12\x85\x01\n\x1dGetCompositionIdsByRepository\x12<.dlkit.proto.repository.GetCompositionIdsByRepositoryRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x82\x01\n\x1bGetCompositionsByRepository\x12:.dlkit.proto.repository.GetCompositionsByRepositoryRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x12\x89\x01\n\x1fGetCompositionIdsByRepositories\x12>.dlkit.proto.repository.GetCompositionIdsByRepositoriesRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x86\x01\n\x1dGetCompositionsByRepositories\x12<.dlkit.proto.repository.GetCompositionsByRepositoriesRequest\x1a#.dlkit.proto.repository.Composition\"\x00\x30\x01\x12\x85\x01\n\x1dGetRepositoryIdsByComposition\x12<.dlkit.proto.repository.GetRepositoryIdsByCompositionRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x83\x01\n\x1cGetRepositoriesByComposition\x12;.dlkit.proto.repository.GetRepositoriesByCompositionRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x32\xbf\x07\n&CompositionRepositoryAssignmentSession\x12\x83\x01\n\x15\x43\x61nAssignCompositions\x12\x34.dlkit.proto.repository.CanAssignCompositionsRequest\x1a\x32.dlkit.proto.repository.CanAssignCompositionsReply\"\x00\x12\xa7\x01\n!CanAssignCompositionsToRepository\x12@.dlkit.proto.repository.CanAssignCompositionsToRepositoryRequest\x1a>.dlkit.proto.repository.CanAssignCompositionsToRepositoryReply\"\x00\x12\x7f\n\x1aGetAssignableRepositoryIds\x12\x39.dlkit.proto.repository.GetAssignableRepositoryIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x9b\x01\n(GetAssignableRepositoryIdsForComposition\x12G.dlkit.proto.repository.GetAssignableRepositoryIdsForCompositionRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12\x9b\x01\n\x1d\x41ssignCompositionToRepository\x12<.dlkit.proto.repository.AssignCompositionToRepositoryRequest\x1a:.dlkit.proto.repository.AssignCompositionToRepositoryReply\"\x00\x12\xa7\x01\n!UnassignCompositionFromRepository\x12@.dlkit.proto.repository.UnassignCompositionFromRepositoryRequest\x1a>.dlkit.proto.repository.UnassignCompositionFromRepositoryReply\"\x00\x32\xa8\n\n\x17RepositoryLookupSession\x12\x83\x01\n\x15\x43\x61nLookupRepositories\x12\x34.dlkit.proto.repository.CanLookupRepositoriesRequest\x1a\x32.dlkit.proto.repository.CanLookupRepositoriesReply\"\x00\x12\x98\x01\n\x1cUseComparativeRepositoryView\x12;.dlkit.proto.repository.UseComparativeRepositoryViewRequest\x1a\x39.dlkit.proto.repository.UseComparativeRepositoryViewReply\"\x00\x12\x8c\x01\n\x18UsePlenaryRepositoryView\x12\x37.dlkit.proto.repository.UsePlenaryRepositoryViewRequest\x1a\x35.dlkit.proto.repository.UsePlenaryRepositoryViewReply\"\x00\x12k\n\rGetRepository\x12,.dlkit.proto.repository.GetRepositoryRequest\x1a*.dlkit.proto.repository.GetRepositoryReply\"\x00\x12s\n\x14GetRepositoriesByIds\x12\x33.dlkit.proto.repository.GetRepositoriesByIdsRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12\x7f\n\x1aGetRepositoriesByGenusType\x12\x39.dlkit.proto.repository.GetRepositoriesByGenusTypeRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12\x8b\x01\n GetRepositoriesByParentGenusType\x12?.dlkit.proto.repository.GetRepositoriesByParentGenusTypeRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12\x81\x01\n\x1bGetRepositoriesByRecordType\x12:.dlkit.proto.repository.GetRepositoriesByRecordTypeRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12}\n\x19GetRepositoriesByProvider\x12\x38.dlkit.proto.repository.GetRepositoriesByProviderRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12i\n\x0fGetRepositories\x12..dlkit.proto.repository.GetRepositoriesRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x32\x93\x03\n\x16RepositoryQuerySession\x12\x83\x01\n\x15\x43\x61nSearchRepositories\x12\x34.dlkit.proto.repository.CanSearchRepositoriesRequest\x1a\x32.dlkit.proto.repository.CanSearchRepositoriesReply\"\x00\x12z\n\x12GetRepositoryQuery\x12\x31.dlkit.proto.repository.GetRepositoryQueryRequest\x1a/.dlkit.proto.repository.GetRepositoryQueryReply\"\x00\x12w\n\x16GetRepositoriesByQuery\x12\x35.dlkit.proto.repository.GetRepositoriesByQueryRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x32\xeb\x0b\n\x16RepositoryAdminSession\x12\x83\x01\n\x15\x43\x61nCreateRepositories\x12\x34.dlkit.proto.repository.CanCreateRepositoriesRequest\x1a\x32.dlkit.proto.repository.CanCreateRepositoriesReply\"\x00\x12\xaa\x01\n\"CanCreateRepositoryWithRecordTypes\x12\x41.dlkit.proto.repository.CanCreateRepositoryWithRecordTypesRequest\x1a?.dlkit.proto.repository.CanCreateRepositoryWithRecordTypesReply\"\x00\x12\x92\x01\n\x1aGetRepositoryFormForCreate\x12\x39.dlkit.proto.repository.GetRepositoryFormForCreateRequest\x1a\x37.dlkit.proto.repository.GetRepositoryFormForCreateReply\"\x00\x12t\n\x10\x43reateRepository\x12/.dlkit.proto.repository.CreateRepositoryRequest\x1a-.dlkit.proto.repository.CreateRepositoryReply\"\x00\x12\x83\x01\n\x15\x43\x61nUpdateRepositories\x12\x34.dlkit.proto.repository.CanUpdateRepositoriesRequest\x1a\x32.dlkit.proto.repository.CanUpdateRepositoriesReply\"\x00\x12\x92\x01\n\x1aGetRepositoryFormForUpdate\x12\x39.dlkit.proto.repository.GetRepositoryFormForUpdateRequest\x1a\x37.dlkit.proto.repository.GetRepositoryFormForUpdateReply\"\x00\x12t\n\x10UpdateRepository\x12/.dlkit.proto.repository.UpdateRepositoryRequest\x1a-.dlkit.proto.repository.UpdateRepositoryReply\"\x00\x12\x83\x01\n\x15\x43\x61nDeleteRepositories\x12\x34.dlkit.proto.repository.CanDeleteRepositoriesRequest\x1a\x32.dlkit.proto.repository.CanDeleteRepositoriesReply\"\x00\x12t\n\x10\x44\x65leteRepository\x12/.dlkit.proto.repository.DeleteRepositoryRequest\x1a-.dlkit.proto.repository.DeleteRepositoryReply\"\x00\x12\x92\x01\n\x1a\x43\x61nManageRepositoryAliases\x12\x39.dlkit.proto.repository.CanManageRepositoryAliasesRequest\x1a\x37.dlkit.proto.repository.CanManageRepositoryAliasesReply\"\x00\x12q\n\x0f\x41liasRepository\x12..dlkit.proto.repository.AliasRepositoryRequest\x1a,.dlkit.proto.repository.AliasRepositoryReply\"\x00\x32\xdf\x13\n\x1aRepositoryHierarchySession\x12\x8c\x01\n\x18GetRepositoryHierarchyId\x12\x37.dlkit.proto.repository.GetRepositoryHierarchyIdRequest\x1a\x35.dlkit.proto.repository.GetRepositoryHierarchyIdReply\"\x00\x12\x86\x01\n\x16GetRepositoryHierarchy\x12\x35.dlkit.proto.repository.GetRepositoryHierarchyRequest\x1a\x33.dlkit.proto.repository.GetRepositoryHierarchyReply\"\x00\x12\x98\x01\n\x1c\x43\x61nAccessRepositoryHierarchy\x12;.dlkit.proto.repository.CanAccessRepositoryHierarchyRequest\x1a\x39.dlkit.proto.repository.CanAccessRepositoryHierarchyReply\"\x00\x12\x98\x01\n\x1cUseComparativeRepositoryView\x12;.dlkit.proto.repository.UseComparativeRepositoryViewRequest\x1a\x39.dlkit.proto.repository.UseComparativeRepositoryViewReply\"\x00\x12\x8c\x01\n\x18UsePlenaryRepositoryView\x12\x37.dlkit.proto.repository.UsePlenaryRepositoryViewRequest\x1a\x35.dlkit.proto.repository.UsePlenaryRepositoryViewReply\"\x00\x12s\n\x14GetRootRepositoryIds\x12\x33.dlkit.proto.repository.GetRootRepositoryIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12q\n\x13GetRootRepositories\x12\x32.dlkit.proto.repository.GetRootRepositoriesRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12\x83\x01\n\x15HasParentRepositories\x12\x34.dlkit.proto.repository.HasParentRepositoriesRequest\x1a\x32.dlkit.proto.repository.HasParentRepositoriesReply\"\x00\x12\x80\x01\n\x14IsParentOfRepository\x12\x33.dlkit.proto.repository.IsParentOfRepositoryRequest\x1a\x31.dlkit.proto.repository.IsParentOfRepositoryReply\"\x00\x12w\n\x16GetParentRepositoryIds\x12\x35.dlkit.proto.repository.GetParentRepositoryIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12u\n\x15GetParentRepositories\x12\x34.dlkit.proto.repository.GetParentRepositoriesRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12\x86\x01\n\x16IsAncestorOfRepository\x12\x35.dlkit.proto.repository.IsAncestorOfRepositoryRequest\x1a\x33.dlkit.proto.repository.IsAncestorOfRepositoryReply\"\x00\x12\x80\x01\n\x14HasChildRepositories\x12\x33.dlkit.proto.repository.HasChildRepositoriesRequest\x1a\x31.dlkit.proto.repository.HasChildRepositoriesReply\"\x00\x12}\n\x13IsChildOfRepository\x12\x32.dlkit.proto.repository.IsChildOfRepositoryRequest\x1a\x30.dlkit.proto.repository.IsChildOfRepositoryReply\"\x00\x12u\n\x15GetChildRepositoryIds\x12\x34.dlkit.proto.repository.GetChildRepositoryIdsRequest\x1a\".dlkit.primordium.id.primitives.Id\"\x00\x30\x01\x12s\n\x14GetChildRepositories\x12\x33.dlkit.proto.repository.GetChildRepositoriesRequest\x1a\".dlkit.proto.repository.Repository\"\x00\x30\x01\x12\x8c\x01\n\x18IsDescendantOfRepository\x12\x37.dlkit.proto.repository.IsDescendantOfRepositoryRequest\x1a\x35.dlkit.proto.repository.IsDescendantOfRepositoryReply\"\x00\x12\x80\x01\n\x14GetRepositoryNodeIds\x12\x33.dlkit.proto.repository.GetRepositoryNodeIdsRequest\x1a\x31.dlkit.proto.repository.GetRepositoryNodeIdsReply\"\x00\x12z\n\x12GetRepositoryNodes\x12\x31.dlkit.proto.repository.GetRepositoryNodesRequest\x1a/.dlkit.proto.repository.GetRepositoryNodesReply\"\x00\x32\xdf\x08\n RepositoryHierarchyDesignSession\x12\x8c\x01\n\x18GetRepositoryHierarchyId\x12\x37.dlkit.proto.repository.GetRepositoryHierarchyIdRequest\x1a\x35.dlkit.proto.repository.GetRepositoryHierarchyIdReply\"\x00\x12\x86\x01\n\x16GetRepositoryHierarchy\x12\x35.dlkit.proto.repository.GetRepositoryHierarchyRequest\x1a\x33.dlkit.proto.repository.GetRepositoryHierarchyReply\"\x00\x12\x98\x01\n\x1c\x43\x61nModifyRepositoryHierarchy\x12;.dlkit.proto.repository.CanModifyRepositoryHierarchyRequest\x1a\x39.dlkit.proto.repository.CanModifyRepositoryHierarchyReply\"\x00\x12w\n\x11\x41\x64\x64RootRepository\x12\x30.dlkit.proto.repository.AddRootRepositoryRequest\x1a..dlkit.proto.repository.AddRootRepositoryReply\"\x00\x12\x80\x01\n\x14RemoveRootRepository\x12\x33.dlkit.proto.repository.RemoveRootRepositoryRequest\x1a\x31.dlkit.proto.repository.RemoveRootRepositoryReply\"\x00\x12z\n\x12\x41\x64\x64\x43hildRepository\x12\x31.dlkit.proto.repository.AddChildRepositoryRequest\x1a/.dlkit.proto.repository.AddChildRepositoryReply\"\x00\x12\x83\x01\n\x15RemoveChildRepository\x12\x34.dlkit.proto.repository.RemoveChildRepositoryRequest\x1a\x32.dlkit.proto.repository.RemoveChildRepositoryReply\"\x00\x12\x89\x01\n\x17RemoveChildRepositories\x12\x36.dlkit.proto.repository.RemoveChildRepositoriesRequest\x1a\x34.dlkit.proto.repository.RemoveChildRepositoriesReply\"\x00\x62\x06proto3')
  ,
  dependencies=[dlkit_dot_primordium_dot_id_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_primordium_dot_locale_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_primordium_dot_transport_dot_objects__pb2.DESCRIPTOR,dlkit_dot_primordium_dot_type_dot_primitives__pb2.DESCRIPTOR,dlkit_dot_proto_dot_hierarchy__pb2.DESCRIPTOR,dlkit_dot_proto_dot_osid__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])




_ASSET = _descriptor.Descriptor(
  name='Asset',
  full_name='dlkit.proto.repository.Asset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_contents', full_name='dlkit.proto.repository.Asset.asset_contents', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition', full_name='dlkit.proto.repository.Asset.composition', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='copyright', full_name='dlkit.proto.repository.Asset.copyright', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='copyright_registration', full_name='dlkit.proto.repository.Asset.copyright_registration', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created_date', full_name='dlkit.proto.repository.Asset.created_date', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='dlkit.proto.repository.Asset.description', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='dlkit.proto.repository.Asset.display_name', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distribute_alterations', full_name='dlkit.proto.repository.Asset.distribute_alterations', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distribute_compositions', full_name='dlkit.proto.repository.Asset.distribute_compositions', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distribute_verbatim', full_name='dlkit.proto.repository.Asset.distribute_verbatim', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='genus_type_id', full_name='dlkit.proto.repository.Asset.genus_type_id', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.repository.Asset.id', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='principal_credit_string', full_name='dlkit.proto.repository.Asset.principal_credit_string', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provider_links', full_name='dlkit.proto.repository.Asset.provider_links', index=13,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='public_domain', full_name='dlkit.proto.repository.Asset.public_domain', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='published', full_name='dlkit.proto.repository.Asset.published', index=15,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='published_date', full_name='dlkit.proto.repository.Asset.published_date', index=16,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_type_ids', full_name='dlkit.proto.repository.Asset.record_type_ids', index=17,
      number=18, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository', full_name='dlkit.proto.repository.Asset.repository', index=18,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='source', full_name='dlkit.proto.repository.Asset.source', index=19,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='title', full_name='dlkit.proto.repository.Asset.title', index=20,
      number=21, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=305,
  serialized_end=1248,
)


_ASSETQUERY = _descriptor.Descriptor(
  name='AssetQuery',
  full_name='dlkit.proto.repository.AssetQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1250,
  serialized_end=1262,
)


_ASSETQUERYINSPECTOR = _descriptor.Descriptor(
  name='AssetQueryInspector',
  full_name='dlkit.proto.repository.AssetQueryInspector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1264,
  serialized_end=1285,
)


_ASSETFORM = _descriptor.Descriptor(
  name='AssetForm',
  full_name='dlkit.proto.repository.AssetForm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1287,
  serialized_end=1298,
)


_ASSETSEARCHORDER = _descriptor.Descriptor(
  name='AssetSearchOrder',
  full_name='dlkit.proto.repository.AssetSearchOrder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1300,
  serialized_end=1318,
)


_ASSETSEARCH = _descriptor.Descriptor(
  name='AssetSearch',
  full_name='dlkit.proto.repository.AssetSearch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1320,
  serialized_end=1333,
)


_ASSETSEARCHRESULTS = _descriptor.Descriptor(
  name='AssetSearchResults',
  full_name='dlkit.proto.repository.AssetSearchResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1335,
  serialized_end=1355,
)


_ASSETLIST = _descriptor.Descriptor(
  name='AssetList',
  full_name='dlkit.proto.repository.AssetList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='assets', full_name='dlkit.proto.repository.AssetList.assets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1357,
  serialized_end=1415,
)


_ASSETCONTENT = _descriptor.Descriptor(
  name='AssetContent',
  full_name='dlkit.proto.repository.AssetContent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accessibility_type', full_name='dlkit.proto.repository.AssetContent.accessibility_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset', full_name='dlkit.proto.repository.AssetContent.asset', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='dlkit.proto.repository.AssetContent.data', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='dlkit.proto.repository.AssetContent.description', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='dlkit.proto.repository.AssetContent.display_name', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='genus_type_id', full_name='dlkit.proto.repository.AssetContent.genus_type_id', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.repository.AssetContent.id', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_type_ids', full_name='dlkit.proto.repository.AssetContent.record_type_ids', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository', full_name='dlkit.proto.repository.AssetContent.repository', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='url', full_name='dlkit.proto.repository.AssetContent.url', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1418,
  serialized_end=1999,
)


_ASSETCONTENTQUERY = _descriptor.Descriptor(
  name='AssetContentQuery',
  full_name='dlkit.proto.repository.AssetContentQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2001,
  serialized_end=2020,
)


_ASSETCONTENTQUERYINSPECTOR = _descriptor.Descriptor(
  name='AssetContentQueryInspector',
  full_name='dlkit.proto.repository.AssetContentQueryInspector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2022,
  serialized_end=2050,
)


_ASSETCONTENTFORM = _descriptor.Descriptor(
  name='AssetContentForm',
  full_name='dlkit.proto.repository.AssetContentForm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2052,
  serialized_end=2070,
)


_ASSETCONTENTLIST = _descriptor.Descriptor(
  name='AssetContentList',
  full_name='dlkit.proto.repository.AssetContentList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_contents', full_name='dlkit.proto.repository.AssetContentList.asset_contents', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2072,
  serialized_end=2152,
)


_COMPOSITION = _descriptor.Descriptor(
  name='Composition',
  full_name='dlkit.proto.repository.Composition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='children', full_name='dlkit.proto.repository.Composition.children', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='dlkit.proto.repository.Composition.description', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='dlkit.proto.repository.Composition.display_name', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='genus_type_id', full_name='dlkit.proto.repository.Composition.genus_type_id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.repository.Composition.id', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_type_ids', full_name='dlkit.proto.repository.Composition.record_type_ids', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository', full_name='dlkit.proto.repository.Composition.repository', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2155,
  serialized_end=2590,
)


_COMPOSITIONQUERY = _descriptor.Descriptor(
  name='CompositionQuery',
  full_name='dlkit.proto.repository.CompositionQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2592,
  serialized_end=2610,
)


_COMPOSITIONQUERYINSPECTOR = _descriptor.Descriptor(
  name='CompositionQueryInspector',
  full_name='dlkit.proto.repository.CompositionQueryInspector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2612,
  serialized_end=2639,
)


_COMPOSITIONFORM = _descriptor.Descriptor(
  name='CompositionForm',
  full_name='dlkit.proto.repository.CompositionForm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2641,
  serialized_end=2658,
)


_COMPOSITIONSEARCHORDER = _descriptor.Descriptor(
  name='CompositionSearchOrder',
  full_name='dlkit.proto.repository.CompositionSearchOrder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2660,
  serialized_end=2684,
)


_COMPOSITIONSEARCH = _descriptor.Descriptor(
  name='CompositionSearch',
  full_name='dlkit.proto.repository.CompositionSearch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2686,
  serialized_end=2705,
)


_COMPOSITIONSEARCHRESULTS = _descriptor.Descriptor(
  name='CompositionSearchResults',
  full_name='dlkit.proto.repository.CompositionSearchResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2707,
  serialized_end=2733,
)


_COMPOSITIONLIST = _descriptor.Descriptor(
  name='CompositionList',
  full_name='dlkit.proto.repository.CompositionList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='compositions', full_name='dlkit.proto.repository.CompositionList.compositions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2735,
  serialized_end=2811,
)


_REPOSITORY = _descriptor.Descriptor(
  name='Repository',
  full_name='dlkit.proto.repository.Repository',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='dlkit.proto.repository.Repository.description', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='display_name', full_name='dlkit.proto.repository.Repository.display_name', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='genus_type_id', full_name='dlkit.proto.repository.Repository.genus_type_id', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.repository.Repository.id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_type_ids', full_name='dlkit.proto.repository.Repository.record_type_ids', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2814,
  serialized_end=3143,
)


_REPOSITORYQUERY = _descriptor.Descriptor(
  name='RepositoryQuery',
  full_name='dlkit.proto.repository.RepositoryQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3145,
  serialized_end=3162,
)


_REPOSITORYQUERYINSPECTOR = _descriptor.Descriptor(
  name='RepositoryQueryInspector',
  full_name='dlkit.proto.repository.RepositoryQueryInspector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3164,
  serialized_end=3190,
)


_REPOSITORYFORM = _descriptor.Descriptor(
  name='RepositoryForm',
  full_name='dlkit.proto.repository.RepositoryForm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3192,
  serialized_end=3208,
)


_REPOSITORYSEARCHORDER = _descriptor.Descriptor(
  name='RepositorySearchOrder',
  full_name='dlkit.proto.repository.RepositorySearchOrder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3210,
  serialized_end=3233,
)


_REPOSITORYSEARCH = _descriptor.Descriptor(
  name='RepositorySearch',
  full_name='dlkit.proto.repository.RepositorySearch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3235,
  serialized_end=3253,
)


_REPOSITORYSEARCHRESULTS = _descriptor.Descriptor(
  name='RepositorySearchResults',
  full_name='dlkit.proto.repository.RepositorySearchResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3255,
  serialized_end=3280,
)


_REPOSITORYLIST = _descriptor.Descriptor(
  name='RepositoryList',
  full_name='dlkit.proto.repository.RepositoryList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repositories', full_name='dlkit.proto.repository.RepositoryList.repositories', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3282,
  serialized_end=3356,
)


_REPOSITORYNODE = _descriptor.Descriptor(
  name='RepositoryNode',
  full_name='dlkit.proto.repository.RepositoryNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3358,
  serialized_end=3374,
)


_REPOSITORYNODELIST = _descriptor.Descriptor(
  name='RepositoryNodeList',
  full_name='dlkit.proto.repository.RepositoryNodeList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_nodes', full_name='dlkit.proto.repository.RepositoryNodeList.repository_nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3376,
  serialized_end=3462,
)


_GETREPOSITORYIDREPLY = _descriptor.Descriptor(
  name='GetRepositoryIdReply',
  full_name='dlkit.proto.repository.GetRepositoryIdReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.repository.GetRepositoryIdReply.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3464,
  serialized_end=3534,
)


_GETREPOSITORYIDREQUEST = _descriptor.Descriptor(
  name='GetRepositoryIdRequest',
  full_name='dlkit.proto.repository.GetRepositoryIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3536,
  serialized_end=3560,
)


_GETREPOSITORYREPLY = _descriptor.Descriptor(
  name='GetRepositoryReply',
  full_name='dlkit.proto.repository.GetRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='dlkit.proto.repository.GetRepositoryReply.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3562,
  serialized_end=3638,
)


_GETREPOSITORYREQUEST = _descriptor.Descriptor(
  name='GetRepositoryRequest',
  full_name='dlkit.proto.repository.GetRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3640,
  serialized_end=3662,
)


_CANLOOKUPASSETSREPLY = _descriptor.Descriptor(
  name='CanLookupAssetsReply',
  full_name='dlkit.proto.repository.CanLookupAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_assets', full_name='dlkit.proto.repository.CanLookupAssetsReply.can_lookup_assets', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3664,
  serialized_end=3713,
)


_CANLOOKUPASSETSREQUEST = _descriptor.Descriptor(
  name='CanLookupAssetsRequest',
  full_name='dlkit.proto.repository.CanLookupAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3715,
  serialized_end=3739,
)


_USECOMPARATIVEASSETVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeAssetViewReply',
  full_name='dlkit.proto.repository.UseComparativeAssetViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3741,
  serialized_end=3771,
)


_USECOMPARATIVEASSETVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeAssetViewRequest',
  full_name='dlkit.proto.repository.UseComparativeAssetViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3773,
  serialized_end=3805,
)


_USEPLENARYASSETVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryAssetViewReply',
  full_name='dlkit.proto.repository.UsePlenaryAssetViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3807,
  serialized_end=3833,
)


_USEPLENARYASSETVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryAssetViewRequest',
  full_name='dlkit.proto.repository.UsePlenaryAssetViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3835,
  serialized_end=3863,
)


_USEFEDERATEDREPOSITORYVIEWREPLY = _descriptor.Descriptor(
  name='UseFederatedRepositoryViewReply',
  full_name='dlkit.proto.repository.UseFederatedRepositoryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3865,
  serialized_end=3898,
)


_USEFEDERATEDREPOSITORYVIEWREQUEST = _descriptor.Descriptor(
  name='UseFederatedRepositoryViewRequest',
  full_name='dlkit.proto.repository.UseFederatedRepositoryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3900,
  serialized_end=3935,
)


_USEISOLATEDREPOSITORYVIEWREPLY = _descriptor.Descriptor(
  name='UseIsolatedRepositoryViewReply',
  full_name='dlkit.proto.repository.UseIsolatedRepositoryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3937,
  serialized_end=3969,
)


_USEISOLATEDREPOSITORYVIEWREQUEST = _descriptor.Descriptor(
  name='UseIsolatedRepositoryViewRequest',
  full_name='dlkit.proto.repository.UseIsolatedRepositoryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3971,
  serialized_end=4005,
)


_GETASSETREPLY = _descriptor.Descriptor(
  name='GetAssetReply',
  full_name='dlkit.proto.repository.GetAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset', full_name='dlkit.proto.repository.GetAssetReply.asset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4007,
  serialized_end=4068,
)


_GETASSETREQUEST = _descriptor.Descriptor(
  name='GetAssetRequest',
  full_name='dlkit.proto.repository.GetAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.GetAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4070,
  serialized_end=4141,
)


_GETASSETSBYIDSREQUEST = _descriptor.Descriptor(
  name='GetAssetsByIdsRequest',
  full_name='dlkit.proto.repository.GetAssetsByIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_ids', full_name='dlkit.proto.repository.GetAssetsByIdsRequest.asset_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4143,
  serialized_end=4221,
)


_GETASSETSBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetAssetsByGenusTypeRequest',
  full_name='dlkit.proto.repository.GetAssetsByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_genus_type', full_name='dlkit.proto.repository.GetAssetsByGenusTypeRequest.asset_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4223,
  serialized_end=4318,
)


_GETASSETSBYPARENTGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetAssetsByParentGenusTypeRequest',
  full_name='dlkit.proto.repository.GetAssetsByParentGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_genus_type', full_name='dlkit.proto.repository.GetAssetsByParentGenusTypeRequest.asset_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4320,
  serialized_end=4421,
)


_GETASSETSBYRECORDTYPEREQUEST = _descriptor.Descriptor(
  name='GetAssetsByRecordTypeRequest',
  full_name='dlkit.proto.repository.GetAssetsByRecordTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_record_type', full_name='dlkit.proto.repository.GetAssetsByRecordTypeRequest.asset_record_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4423,
  serialized_end=4520,
)


_GETASSETSBYPROVIDERREQUEST = _descriptor.Descriptor(
  name='GetAssetsByProviderRequest',
  full_name='dlkit.proto.repository.GetAssetsByProviderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.repository.GetAssetsByProviderRequest.resource_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4522,
  serialized_end=4607,
)


_GETASSETSREQUEST = _descriptor.Descriptor(
  name='GetAssetsRequest',
  full_name='dlkit.proto.repository.GetAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4609,
  serialized_end=4627,
)


_CANSEARCHASSETSREPLY = _descriptor.Descriptor(
  name='CanSearchAssetsReply',
  full_name='dlkit.proto.repository.CanSearchAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_search_assets', full_name='dlkit.proto.repository.CanSearchAssetsReply.can_search_assets', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4629,
  serialized_end=4678,
)


_CANSEARCHASSETSREQUEST = _descriptor.Descriptor(
  name='CanSearchAssetsRequest',
  full_name='dlkit.proto.repository.CanSearchAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4680,
  serialized_end=4704,
)


_GETASSETQUERYREPLY = _descriptor.Descriptor(
  name='GetAssetQueryReply',
  full_name='dlkit.proto.repository.GetAssetQueryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_query', full_name='dlkit.proto.repository.GetAssetQueryReply.asset_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4706,
  serialized_end=4783,
)


_GETASSETQUERYREQUEST = _descriptor.Descriptor(
  name='GetAssetQueryRequest',
  full_name='dlkit.proto.repository.GetAssetQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4785,
  serialized_end=4807,
)


_GETASSETSBYQUERYREQUEST = _descriptor.Descriptor(
  name='GetAssetsByQueryRequest',
  full_name='dlkit.proto.repository.GetAssetsByQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_query', full_name='dlkit.proto.repository.GetAssetsByQueryRequest.asset_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4809,
  serialized_end=4891,
)


_GETASSETSEARCHREPLY = _descriptor.Descriptor(
  name='GetAssetSearchReply',
  full_name='dlkit.proto.repository.GetAssetSearchReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_search', full_name='dlkit.proto.repository.GetAssetSearchReply.asset_search', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4893,
  serialized_end=4973,
)


_GETASSETSEARCHREQUEST = _descriptor.Descriptor(
  name='GetAssetSearchRequest',
  full_name='dlkit.proto.repository.GetAssetSearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4975,
  serialized_end=4998,
)


_GETASSETSEARCHORDERREPLY = _descriptor.Descriptor(
  name='GetAssetSearchOrderReply',
  full_name='dlkit.proto.repository.GetAssetSearchOrderReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_search_order', full_name='dlkit.proto.repository.GetAssetSearchOrderReply.asset_search_order', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5000,
  serialized_end=5096,
)


_GETASSETSEARCHORDERREQUEST = _descriptor.Descriptor(
  name='GetAssetSearchOrderRequest',
  full_name='dlkit.proto.repository.GetAssetSearchOrderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5098,
  serialized_end=5126,
)


_GETASSETSBYSEARCHREPLY = _descriptor.Descriptor(
  name='GetAssetsBySearchReply',
  full_name='dlkit.proto.repository.GetAssetsBySearchReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_search_results', full_name='dlkit.proto.repository.GetAssetsBySearchReply.asset_search_results', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5128,
  serialized_end=5226,
)


_GETASSETSBYSEARCHREQUEST = _descriptor.Descriptor(
  name='GetAssetsBySearchRequest',
  full_name='dlkit.proto.repository.GetAssetsBySearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_query', full_name='dlkit.proto.repository.GetAssetsBySearchRequest.asset_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset_search', full_name='dlkit.proto.repository.GetAssetsBySearchRequest.asset_search', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5229,
  serialized_end=5371,
)


_GETASSETQUERYFROMINSPECTORREPLY = _descriptor.Descriptor(
  name='GetAssetQueryFromInspectorReply',
  full_name='dlkit.proto.repository.GetAssetQueryFromInspectorReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_query', full_name='dlkit.proto.repository.GetAssetQueryFromInspectorReply.asset_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5373,
  serialized_end=5463,
)


_GETASSETQUERYFROMINSPECTORREQUEST = _descriptor.Descriptor(
  name='GetAssetQueryFromInspectorRequest',
  full_name='dlkit.proto.repository.GetAssetQueryFromInspectorRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_query_inspector', full_name='dlkit.proto.repository.GetAssetQueryFromInspectorRequest.asset_query_inspector', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5465,
  serialized_end=5576,
)


_CANCREATEASSETSREPLY = _descriptor.Descriptor(
  name='CanCreateAssetsReply',
  full_name='dlkit.proto.repository.CanCreateAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_assets', full_name='dlkit.proto.repository.CanCreateAssetsReply.can_create_assets', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5578,
  serialized_end=5627,
)


_CANCREATEASSETSREQUEST = _descriptor.Descriptor(
  name='CanCreateAssetsRequest',
  full_name='dlkit.proto.repository.CanCreateAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5629,
  serialized_end=5653,
)


_CANCREATEASSETWITHRECORDTYPESREPLY = _descriptor.Descriptor(
  name='CanCreateAssetWithRecordTypesReply',
  full_name='dlkit.proto.repository.CanCreateAssetWithRecordTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_asset_with_record_types', full_name='dlkit.proto.repository.CanCreateAssetWithRecordTypesReply.can_create_asset_with_record_types', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5655,
  serialized_end=5735,
)


_CANCREATEASSETWITHRECORDTYPESREQUEST = _descriptor.Descriptor(
  name='CanCreateAssetWithRecordTypesRequest',
  full_name='dlkit.proto.repository.CanCreateAssetWithRecordTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_record_types', full_name='dlkit.proto.repository.CanCreateAssetWithRecordTypesRequest.asset_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5737,
  serialized_end=5843,
)


_GETASSETFORMFORCREATEREPLY = _descriptor.Descriptor(
  name='GetAssetFormForCreateReply',
  full_name='dlkit.proto.repository.GetAssetFormForCreateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_form', full_name='dlkit.proto.repository.GetAssetFormForCreateReply.asset_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5845,
  serialized_end=5928,
)


_GETASSETFORMFORCREATEREQUEST = _descriptor.Descriptor(
  name='GetAssetFormForCreateRequest',
  full_name='dlkit.proto.repository.GetAssetFormForCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_record_types', full_name='dlkit.proto.repository.GetAssetFormForCreateRequest.asset_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5930,
  serialized_end=6028,
)


_CREATEASSETREPLY = _descriptor.Descriptor(
  name='CreateAssetReply',
  full_name='dlkit.proto.repository.CreateAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset', full_name='dlkit.proto.repository.CreateAssetReply.asset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6030,
  serialized_end=6094,
)


_CREATEASSETREQUEST = _descriptor.Descriptor(
  name='CreateAssetRequest',
  full_name='dlkit.proto.repository.CreateAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_form', full_name='dlkit.proto.repository.CreateAssetRequest.asset_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6096,
  serialized_end=6171,
)


_CANUPDATEASSETSREPLY = _descriptor.Descriptor(
  name='CanUpdateAssetsReply',
  full_name='dlkit.proto.repository.CanUpdateAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_update_assets', full_name='dlkit.proto.repository.CanUpdateAssetsReply.can_update_assets', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6173,
  serialized_end=6222,
)


_CANUPDATEASSETSREQUEST = _descriptor.Descriptor(
  name='CanUpdateAssetsRequest',
  full_name='dlkit.proto.repository.CanUpdateAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6224,
  serialized_end=6248,
)


_GETASSETFORMFORUPDATEREPLY = _descriptor.Descriptor(
  name='GetAssetFormForUpdateReply',
  full_name='dlkit.proto.repository.GetAssetFormForUpdateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_form', full_name='dlkit.proto.repository.GetAssetFormForUpdateReply.asset_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6250,
  serialized_end=6333,
)


_GETASSETFORMFORUPDATEREQUEST = _descriptor.Descriptor(
  name='GetAssetFormForUpdateRequest',
  full_name='dlkit.proto.repository.GetAssetFormForUpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.GetAssetFormForUpdateRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6335,
  serialized_end=6419,
)


_UPDATEASSETREPLY = _descriptor.Descriptor(
  name='UpdateAssetReply',
  full_name='dlkit.proto.repository.UpdateAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6421,
  serialized_end=6439,
)


_UPDATEASSETREQUEST = _descriptor.Descriptor(
  name='UpdateAssetRequest',
  full_name='dlkit.proto.repository.UpdateAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_form', full_name='dlkit.proto.repository.UpdateAssetRequest.asset_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6441,
  serialized_end=6516,
)


_CANDELETEASSETSREPLY = _descriptor.Descriptor(
  name='CanDeleteAssetsReply',
  full_name='dlkit.proto.repository.CanDeleteAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_delete_assets', full_name='dlkit.proto.repository.CanDeleteAssetsReply.can_delete_assets', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6518,
  serialized_end=6567,
)


_CANDELETEASSETSREQUEST = _descriptor.Descriptor(
  name='CanDeleteAssetsRequest',
  full_name='dlkit.proto.repository.CanDeleteAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6569,
  serialized_end=6593,
)


_DELETEASSETREPLY = _descriptor.Descriptor(
  name='DeleteAssetReply',
  full_name='dlkit.proto.repository.DeleteAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6595,
  serialized_end=6613,
)


_DELETEASSETREQUEST = _descriptor.Descriptor(
  name='DeleteAssetRequest',
  full_name='dlkit.proto.repository.DeleteAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.DeleteAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6615,
  serialized_end=6689,
)


_CANMANAGEASSETALIASESREPLY = _descriptor.Descriptor(
  name='CanManageAssetAliasesReply',
  full_name='dlkit.proto.repository.CanManageAssetAliasesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_manage_asset_aliases', full_name='dlkit.proto.repository.CanManageAssetAliasesReply.can_manage_asset_aliases', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6691,
  serialized_end=6753,
)


_CANMANAGEASSETALIASESREQUEST = _descriptor.Descriptor(
  name='CanManageAssetAliasesRequest',
  full_name='dlkit.proto.repository.CanManageAssetAliasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6755,
  serialized_end=6785,
)


_ALIASASSETREPLY = _descriptor.Descriptor(
  name='AliasAssetReply',
  full_name='dlkit.proto.repository.AliasAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6787,
  serialized_end=6804,
)


_ALIASASSETREQUEST = _descriptor.Descriptor(
  name='AliasAssetRequest',
  full_name='dlkit.proto.repository.AliasAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias_id', full_name='dlkit.proto.repository.AliasAssetRequest.alias_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.AliasAssetRequest.asset_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6806,
  serialized_end=6933,
)


_CANCREATEASSETCONTENTREPLY = _descriptor.Descriptor(
  name='CanCreateAssetContentReply',
  full_name='dlkit.proto.repository.CanCreateAssetContentReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_asset_content', full_name='dlkit.proto.repository.CanCreateAssetContentReply.can_create_asset_content', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6935,
  serialized_end=6997,
)


_CANCREATEASSETCONTENTREQUEST = _descriptor.Descriptor(
  name='CanCreateAssetContentRequest',
  full_name='dlkit.proto.repository.CanCreateAssetContentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6999,
  serialized_end=7029,
)


_CANCREATEASSETCONTENTWITHRECORDTYPESREPLY = _descriptor.Descriptor(
  name='CanCreateAssetContentWithRecordTypesReply',
  full_name='dlkit.proto.repository.CanCreateAssetContentWithRecordTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_asset_content_with_record_types', full_name='dlkit.proto.repository.CanCreateAssetContentWithRecordTypesReply.can_create_asset_content_with_record_types', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7031,
  serialized_end=7126,
)


_CANCREATEASSETCONTENTWITHRECORDTYPESREQUEST = _descriptor.Descriptor(
  name='CanCreateAssetContentWithRecordTypesRequest',
  full_name='dlkit.proto.repository.CanCreateAssetContentWithRecordTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_record_types', full_name='dlkit.proto.repository.CanCreateAssetContentWithRecordTypesRequest.asset_content_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7128,
  serialized_end=7249,
)


_GETASSETCONTENTFORMFORCREATEREPLY = _descriptor.Descriptor(
  name='GetAssetContentFormForCreateReply',
  full_name='dlkit.proto.repository.GetAssetContentFormForCreateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_form', full_name='dlkit.proto.repository.GetAssetContentFormForCreateReply.asset_content_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7251,
  serialized_end=7356,
)


_GETASSETCONTENTFORMFORCREATEREQUEST = _descriptor.Descriptor(
  name='GetAssetContentFormForCreateRequest',
  full_name='dlkit.proto.repository.GetAssetContentFormForCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_record_types', full_name='dlkit.proto.repository.GetAssetContentFormForCreateRequest.asset_content_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.GetAssetContentFormForCreateRequest.asset_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7359,
  serialized_end=7526,
)


_CREATEASSETCONTENTREPLY = _descriptor.Descriptor(
  name='CreateAssetContentReply',
  full_name='dlkit.proto.repository.CreateAssetContentReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content', full_name='dlkit.proto.repository.CreateAssetContentReply.asset_content', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7528,
  serialized_end=7614,
)


_CREATEASSETCONTENTREQUEST = _descriptor.Descriptor(
  name='CreateAssetContentRequest',
  full_name='dlkit.proto.repository.CreateAssetContentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_form', full_name='dlkit.proto.repository.CreateAssetContentRequest.asset_content_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7616,
  serialized_end=7713,
)


_CANUPDATEASSETCONTENTSREPLY = _descriptor.Descriptor(
  name='CanUpdateAssetContentsReply',
  full_name='dlkit.proto.repository.CanUpdateAssetContentsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_update_asset_contents', full_name='dlkit.proto.repository.CanUpdateAssetContentsReply.can_update_asset_contents', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7715,
  serialized_end=7779,
)


_CANUPDATEASSETCONTENTSREQUEST = _descriptor.Descriptor(
  name='CanUpdateAssetContentsRequest',
  full_name='dlkit.proto.repository.CanUpdateAssetContentsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7781,
  serialized_end=7812,
)


_GETASSETCONTENTFORMFORUPDATEREPLY = _descriptor.Descriptor(
  name='GetAssetContentFormForUpdateReply',
  full_name='dlkit.proto.repository.GetAssetContentFormForUpdateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_form', full_name='dlkit.proto.repository.GetAssetContentFormForUpdateReply.asset_content_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7814,
  serialized_end=7919,
)


_GETASSETCONTENTFORMFORUPDATEREQUEST = _descriptor.Descriptor(
  name='GetAssetContentFormForUpdateRequest',
  full_name='dlkit.proto.repository.GetAssetContentFormForUpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_id', full_name='dlkit.proto.repository.GetAssetContentFormForUpdateRequest.asset_content_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7921,
  serialized_end=8020,
)


_UPDATEASSETCONTENTREPLY = _descriptor.Descriptor(
  name='UpdateAssetContentReply',
  full_name='dlkit.proto.repository.UpdateAssetContentReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8022,
  serialized_end=8047,
)


_UPDATEASSETCONTENTREQUEST = _descriptor.Descriptor(
  name='UpdateAssetContentRequest',
  full_name='dlkit.proto.repository.UpdateAssetContentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_form', full_name='dlkit.proto.repository.UpdateAssetContentRequest.asset_content_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8049,
  serialized_end=8146,
)


_CANDELETEASSETCONTENTSREPLY = _descriptor.Descriptor(
  name='CanDeleteAssetContentsReply',
  full_name='dlkit.proto.repository.CanDeleteAssetContentsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_delete_asset_contents', full_name='dlkit.proto.repository.CanDeleteAssetContentsReply.can_delete_asset_contents', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8148,
  serialized_end=8212,
)


_CANDELETEASSETCONTENTSREQUEST = _descriptor.Descriptor(
  name='CanDeleteAssetContentsRequest',
  full_name='dlkit.proto.repository.CanDeleteAssetContentsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8214,
  serialized_end=8245,
)


_DELETEASSETCONTENTREPLY = _descriptor.Descriptor(
  name='DeleteAssetContentReply',
  full_name='dlkit.proto.repository.DeleteAssetContentReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8247,
  serialized_end=8272,
)


_DELETEASSETCONTENTREQUEST = _descriptor.Descriptor(
  name='DeleteAssetContentRequest',
  full_name='dlkit.proto.repository.DeleteAssetContentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_content_id', full_name='dlkit.proto.repository.DeleteAssetContentRequest.asset_content_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8274,
  serialized_end=8363,
)


_CANREGISTERFORASSETNOTIFICATIONSREPLY = _descriptor.Descriptor(
  name='CanRegisterForAssetNotificationsReply',
  full_name='dlkit.proto.repository.CanRegisterForAssetNotificationsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_register_for_asset_notifications', full_name='dlkit.proto.repository.CanRegisterForAssetNotificationsReply.can_register_for_asset_notifications', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8365,
  serialized_end=8450,
)


_CANREGISTERFORASSETNOTIFICATIONSREQUEST = _descriptor.Descriptor(
  name='CanRegisterForAssetNotificationsRequest',
  full_name='dlkit.proto.repository.CanRegisterForAssetNotificationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8452,
  serialized_end=8493,
)


_REGISTERFORNEWASSETSREPLY = _descriptor.Descriptor(
  name='RegisterForNewAssetsReply',
  full_name='dlkit.proto.repository.RegisterForNewAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8495,
  serialized_end=8522,
)


_REGISTERFORNEWASSETSREQUEST = _descriptor.Descriptor(
  name='RegisterForNewAssetsRequest',
  full_name='dlkit.proto.repository.RegisterForNewAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8524,
  serialized_end=8553,
)


_REGISTERFORNEWASSETSBYGENUSTYPEREPLY = _descriptor.Descriptor(
  name='RegisterForNewAssetsByGenusTypeReply',
  full_name='dlkit.proto.repository.RegisterForNewAssetsByGenusTypeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8555,
  serialized_end=8593,
)


_REGISTERFORNEWASSETSBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='RegisterForNewAssetsByGenusTypeRequest',
  full_name='dlkit.proto.repository.RegisterForNewAssetsByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_genus_type', full_name='dlkit.proto.repository.RegisterForNewAssetsByGenusTypeRequest.asset_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8595,
  serialized_end=8701,
)


_REGISTERFORCHANGEDASSETSREPLY = _descriptor.Descriptor(
  name='RegisterForChangedAssetsReply',
  full_name='dlkit.proto.repository.RegisterForChangedAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8703,
  serialized_end=8734,
)


_REGISTERFORCHANGEDASSETSREQUEST = _descriptor.Descriptor(
  name='RegisterForChangedAssetsRequest',
  full_name='dlkit.proto.repository.RegisterForChangedAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8736,
  serialized_end=8769,
)


_REGISTERFORCHANGEDASSETSBYGENUSTYPEREPLY = _descriptor.Descriptor(
  name='RegisterForChangedAssetsByGenusTypeReply',
  full_name='dlkit.proto.repository.RegisterForChangedAssetsByGenusTypeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8771,
  serialized_end=8813,
)


_REGISTERFORCHANGEDASSETSBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='RegisterForChangedAssetsByGenusTypeRequest',
  full_name='dlkit.proto.repository.RegisterForChangedAssetsByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_genus_type', full_name='dlkit.proto.repository.RegisterForChangedAssetsByGenusTypeRequest.asset_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8815,
  serialized_end=8925,
)


_REGISTERFORCHANGEDASSETREPLY = _descriptor.Descriptor(
  name='RegisterForChangedAssetReply',
  full_name='dlkit.proto.repository.RegisterForChangedAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8927,
  serialized_end=8957,
)


_REGISTERFORCHANGEDASSETREQUEST = _descriptor.Descriptor(
  name='RegisterForChangedAssetRequest',
  full_name='dlkit.proto.repository.RegisterForChangedAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.RegisterForChangedAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8959,
  serialized_end=9045,
)


_REGISTERFORDELETEDASSETSREPLY = _descriptor.Descriptor(
  name='RegisterForDeletedAssetsReply',
  full_name='dlkit.proto.repository.RegisterForDeletedAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9047,
  serialized_end=9078,
)


_REGISTERFORDELETEDASSETSREQUEST = _descriptor.Descriptor(
  name='RegisterForDeletedAssetsRequest',
  full_name='dlkit.proto.repository.RegisterForDeletedAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9080,
  serialized_end=9113,
)


_REGISTERFORDELETEDASSETSBYGENUSTYPEREPLY = _descriptor.Descriptor(
  name='RegisterForDeletedAssetsByGenusTypeReply',
  full_name='dlkit.proto.repository.RegisterForDeletedAssetsByGenusTypeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9115,
  serialized_end=9157,
)


_REGISTERFORDELETEDASSETSBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='RegisterForDeletedAssetsByGenusTypeRequest',
  full_name='dlkit.proto.repository.RegisterForDeletedAssetsByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_genus_type', full_name='dlkit.proto.repository.RegisterForDeletedAssetsByGenusTypeRequest.asset_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9159,
  serialized_end=9269,
)


_REGISTERFORDELETEDASSETREPLY = _descriptor.Descriptor(
  name='RegisterForDeletedAssetReply',
  full_name='dlkit.proto.repository.RegisterForDeletedAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9271,
  serialized_end=9301,
)


_REGISTERFORDELETEDASSETREQUEST = _descriptor.Descriptor(
  name='RegisterForDeletedAssetRequest',
  full_name='dlkit.proto.repository.RegisterForDeletedAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.RegisterForDeletedAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9303,
  serialized_end=9389,
)


_RELIABLEASSETNOTIFICATIONSREPLY = _descriptor.Descriptor(
  name='ReliableAssetNotificationsReply',
  full_name='dlkit.proto.repository.ReliableAssetNotificationsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9391,
  serialized_end=9424,
)


_RELIABLEASSETNOTIFICATIONSREQUEST = _descriptor.Descriptor(
  name='ReliableAssetNotificationsRequest',
  full_name='dlkit.proto.repository.ReliableAssetNotificationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9426,
  serialized_end=9461,
)


_UNRELIABLEASSETNOTIFICATIONSREPLY = _descriptor.Descriptor(
  name='UnreliableAssetNotificationsReply',
  full_name='dlkit.proto.repository.UnreliableAssetNotificationsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9463,
  serialized_end=9498,
)


_UNRELIABLEASSETNOTIFICATIONSREQUEST = _descriptor.Descriptor(
  name='UnreliableAssetNotificationsRequest',
  full_name='dlkit.proto.repository.UnreliableAssetNotificationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9500,
  serialized_end=9537,
)


_ACKNOWLEDGEASSETNOTIFICATIONREPLY = _descriptor.Descriptor(
  name='AcknowledgeAssetNotificationReply',
  full_name='dlkit.proto.repository.AcknowledgeAssetNotificationReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9539,
  serialized_end=9574,
)


_ACKNOWLEDGEASSETNOTIFICATIONREQUEST = _descriptor.Descriptor(
  name='AcknowledgeAssetNotificationRequest',
  full_name='dlkit.proto.repository.AcknowledgeAssetNotificationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='notification_id', full_name='dlkit.proto.repository.AcknowledgeAssetNotificationRequest.notification_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9576,
  serialized_end=9674,
)


_CANLOOKUPASSETREPOSITORYMAPPINGSREPLY = _descriptor.Descriptor(
  name='CanLookupAssetRepositoryMappingsReply',
  full_name='dlkit.proto.repository.CanLookupAssetRepositoryMappingsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_asset_repository_mappings', full_name='dlkit.proto.repository.CanLookupAssetRepositoryMappingsReply.can_lookup_asset_repository_mappings', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9676,
  serialized_end=9761,
)


_CANLOOKUPASSETREPOSITORYMAPPINGSREQUEST = _descriptor.Descriptor(
  name='CanLookupAssetRepositoryMappingsRequest',
  full_name='dlkit.proto.repository.CanLookupAssetRepositoryMappingsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9763,
  serialized_end=9804,
)


_USECOMPARATIVEREPOSITORYVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeRepositoryViewReply',
  full_name='dlkit.proto.repository.UseComparativeRepositoryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9806,
  serialized_end=9841,
)


_USECOMPARATIVEREPOSITORYVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeRepositoryViewRequest',
  full_name='dlkit.proto.repository.UseComparativeRepositoryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9843,
  serialized_end=9880,
)


_USEPLENARYREPOSITORYVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryRepositoryViewReply',
  full_name='dlkit.proto.repository.UsePlenaryRepositoryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9882,
  serialized_end=9913,
)


_USEPLENARYREPOSITORYVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryRepositoryViewRequest',
  full_name='dlkit.proto.repository.UsePlenaryRepositoryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9915,
  serialized_end=9948,
)


_GETASSETIDSBYREPOSITORYREQUEST = _descriptor.Descriptor(
  name='GetAssetIdsByRepositoryRequest',
  full_name='dlkit.proto.repository.GetAssetIdsByRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetAssetIdsByRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9950,
  serialized_end=10041,
)


_GETASSETSBYREPOSITORYREQUEST = _descriptor.Descriptor(
  name='GetAssetsByRepositoryRequest',
  full_name='dlkit.proto.repository.GetAssetsByRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetAssetsByRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10043,
  serialized_end=10132,
)


_GETASSETIDSBYREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetAssetIdsByRepositoriesRequest',
  full_name='dlkit.proto.repository.GetAssetIdsByRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_ids', full_name='dlkit.proto.repository.GetAssetIdsByRepositoriesRequest.repository_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10134,
  serialized_end=10228,
)


_GETASSETSBYREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetAssetsByRepositoriesRequest',
  full_name='dlkit.proto.repository.GetAssetsByRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_ids', full_name='dlkit.proto.repository.GetAssetsByRepositoriesRequest.repository_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10230,
  serialized_end=10322,
)


_GETREPOSITORYIDSBYASSETREQUEST = _descriptor.Descriptor(
  name='GetRepositoryIdsByAssetRequest',
  full_name='dlkit.proto.repository.GetRepositoryIdsByAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.GetRepositoryIdsByAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10324,
  serialized_end=10410,
)


_GETREPOSITORIESBYASSETREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByAssetRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.GetRepositoriesByAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10412,
  serialized_end=10497,
)


_CANASSIGNASSETSREPLY = _descriptor.Descriptor(
  name='CanAssignAssetsReply',
  full_name='dlkit.proto.repository.CanAssignAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_assign_assets', full_name='dlkit.proto.repository.CanAssignAssetsReply.can_assign_assets', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10499,
  serialized_end=10548,
)


_CANASSIGNASSETSREQUEST = _descriptor.Descriptor(
  name='CanAssignAssetsRequest',
  full_name='dlkit.proto.repository.CanAssignAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10550,
  serialized_end=10574,
)


_CANASSIGNASSETSTOREPOSITORYREPLY = _descriptor.Descriptor(
  name='CanAssignAssetsToRepositoryReply',
  full_name='dlkit.proto.repository.CanAssignAssetsToRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_assign_assets_to_repository', full_name='dlkit.proto.repository.CanAssignAssetsToRepositoryReply.can_assign_assets_to_repository', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10576,
  serialized_end=10651,
)


_CANASSIGNASSETSTOREPOSITORYREQUEST = _descriptor.Descriptor(
  name='CanAssignAssetsToRepositoryRequest',
  full_name='dlkit.proto.repository.CanAssignAssetsToRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.CanAssignAssetsToRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10653,
  serialized_end=10748,
)


_GETASSIGNABLEREPOSITORYIDSREQUEST = _descriptor.Descriptor(
  name='GetAssignableRepositoryIdsRequest',
  full_name='dlkit.proto.repository.GetAssignableRepositoryIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetAssignableRepositoryIdsRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10750,
  serialized_end=10844,
)


_GETASSIGNABLEREPOSITORYIDSFORASSETREQUEST = _descriptor.Descriptor(
  name='GetAssignableRepositoryIdsForAssetRequest',
  full_name='dlkit.proto.repository.GetAssignableRepositoryIdsForAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.GetAssignableRepositoryIdsForAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetAssignableRepositoryIdsForAssetRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10847,
  serialized_end=11003,
)


_ASSIGNASSETTOREPOSITORYREPLY = _descriptor.Descriptor(
  name='AssignAssetToRepositoryReply',
  full_name='dlkit.proto.repository.AssignAssetToRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11005,
  serialized_end=11035,
)


_ASSIGNASSETTOREPOSITORYREQUEST = _descriptor.Descriptor(
  name='AssignAssetToRepositoryRequest',
  full_name='dlkit.proto.repository.AssignAssetToRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.AssignAssetToRepositoryRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.AssignAssetToRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11038,
  serialized_end=11183,
)


_UNASSIGNASSETFROMREPOSITORYREPLY = _descriptor.Descriptor(
  name='UnassignAssetFromRepositoryReply',
  full_name='dlkit.proto.repository.UnassignAssetFromRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11185,
  serialized_end=11219,
)


_UNASSIGNASSETFROMREPOSITORYREQUEST = _descriptor.Descriptor(
  name='UnassignAssetFromRepositoryRequest',
  full_name='dlkit.proto.repository.UnassignAssetFromRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.UnassignAssetFromRepositoryRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.UnassignAssetFromRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11222,
  serialized_end=11371,
)


_CANACCESSASSETCOMPOSITIONSREPLY = _descriptor.Descriptor(
  name='CanAccessAssetCompositionsReply',
  full_name='dlkit.proto.repository.CanAccessAssetCompositionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_access_asset_compositions', full_name='dlkit.proto.repository.CanAccessAssetCompositionsReply.can_access_asset_compositions', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11373,
  serialized_end=11445,
)


_CANACCESSASSETCOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='CanAccessAssetCompositionsRequest',
  full_name='dlkit.proto.repository.CanAccessAssetCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11447,
  serialized_end=11482,
)


_USECOMPARATIVEASSETCOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeAssetCompositionViewReply',
  full_name='dlkit.proto.repository.UseComparativeAssetCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11484,
  serialized_end=11525,
)


_USECOMPARATIVEASSETCOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeAssetCompositionViewRequest',
  full_name='dlkit.proto.repository.UseComparativeAssetCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11527,
  serialized_end=11570,
)


_USEPLENARYASSETCOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryAssetCompositionViewReply',
  full_name='dlkit.proto.repository.UsePlenaryAssetCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11572,
  serialized_end=11609,
)


_USEPLENARYASSETCOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryAssetCompositionViewRequest',
  full_name='dlkit.proto.repository.UsePlenaryAssetCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11611,
  serialized_end=11650,
)


_GETCOMPOSITIONASSETSREQUEST = _descriptor.Descriptor(
  name='GetCompositionAssetsRequest',
  full_name='dlkit.proto.repository.GetCompositionAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.GetCompositionAssetsRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11652,
  serialized_end=11741,
)


_GETCOMPOSITIONSBYASSETREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByAssetRequest',
  full_name='dlkit.proto.repository.GetCompositionsByAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.GetCompositionsByAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11743,
  serialized_end=11828,
)


_CANCOMPOSEASSETSREPLY = _descriptor.Descriptor(
  name='CanComposeAssetsReply',
  full_name='dlkit.proto.repository.CanComposeAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_compose_assets', full_name='dlkit.proto.repository.CanComposeAssetsReply.can_compose_assets', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11830,
  serialized_end=11881,
)


_CANCOMPOSEASSETSREQUEST = _descriptor.Descriptor(
  name='CanComposeAssetsRequest',
  full_name='dlkit.proto.repository.CanComposeAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11883,
  serialized_end=11908,
)


_ADDASSETREPLY = _descriptor.Descriptor(
  name='AddAssetReply',
  full_name='dlkit.proto.repository.AddAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11910,
  serialized_end=11925,
)


_ADDASSETREQUEST = _descriptor.Descriptor(
  name='AddAssetRequest',
  full_name='dlkit.proto.repository.AddAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.AddAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.AddAssetRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11928,
  serialized_end=12059,
)


_MOVEASSETAHEADREPLY = _descriptor.Descriptor(
  name='MoveAssetAheadReply',
  full_name='dlkit.proto.repository.MoveAssetAheadReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12061,
  serialized_end=12082,
)


_MOVEASSETAHEADREQUEST = _descriptor.Descriptor(
  name='MoveAssetAheadRequest',
  full_name='dlkit.proto.repository.MoveAssetAheadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.MoveAssetAheadRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.MoveAssetAheadRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reference_id', full_name='dlkit.proto.repository.MoveAssetAheadRequest.reference_id', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12085,
  serialized_end=12280,
)


_MOVEASSETBEHINDREPLY = _descriptor.Descriptor(
  name='MoveAssetBehindReply',
  full_name='dlkit.proto.repository.MoveAssetBehindReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12282,
  serialized_end=12304,
)


_MOVEASSETBEHINDREQUEST = _descriptor.Descriptor(
  name='MoveAssetBehindRequest',
  full_name='dlkit.proto.repository.MoveAssetBehindRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.MoveAssetBehindRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.MoveAssetBehindRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reference_id', full_name='dlkit.proto.repository.MoveAssetBehindRequest.reference_id', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12307,
  serialized_end=12503,
)


_ORDERASSETSREPLY = _descriptor.Descriptor(
  name='OrderAssetsReply',
  full_name='dlkit.proto.repository.OrderAssetsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12505,
  serialized_end=12523,
)


_ORDERASSETSREQUEST = _descriptor.Descriptor(
  name='OrderAssetsRequest',
  full_name='dlkit.proto.repository.OrderAssetsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_ids', full_name='dlkit.proto.repository.OrderAssetsRequest.asset_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.OrderAssetsRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12526,
  serialized_end=12661,
)


_REMOVEASSETREPLY = _descriptor.Descriptor(
  name='RemoveAssetReply',
  full_name='dlkit.proto.repository.RemoveAssetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12663,
  serialized_end=12681,
)


_REMOVEASSETREQUEST = _descriptor.Descriptor(
  name='RemoveAssetRequest',
  full_name='dlkit.proto.repository.RemoveAssetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='dlkit.proto.repository.RemoveAssetRequest.asset_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.RemoveAssetRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12684,
  serialized_end=12818,
)


_CANLOOKUPCOMPOSITIONSREPLY = _descriptor.Descriptor(
  name='CanLookupCompositionsReply',
  full_name='dlkit.proto.repository.CanLookupCompositionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_compositions', full_name='dlkit.proto.repository.CanLookupCompositionsReply.can_lookup_compositions', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12820,
  serialized_end=12881,
)


_CANLOOKUPCOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='CanLookupCompositionsRequest',
  full_name='dlkit.proto.repository.CanLookupCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12883,
  serialized_end=12913,
)


_USECOMPARATIVECOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeCompositionViewReply',
  full_name='dlkit.proto.repository.UseComparativeCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12915,
  serialized_end=12951,
)


_USECOMPARATIVECOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeCompositionViewRequest',
  full_name='dlkit.proto.repository.UseComparativeCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12953,
  serialized_end=12991,
)


_USEPLENARYCOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryCompositionViewReply',
  full_name='dlkit.proto.repository.UsePlenaryCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12993,
  serialized_end=13025,
)


_USEPLENARYCOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryCompositionViewRequest',
  full_name='dlkit.proto.repository.UsePlenaryCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13027,
  serialized_end=13061,
)


_USEACTIVECOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UseActiveCompositionViewReply',
  full_name='dlkit.proto.repository.UseActiveCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13063,
  serialized_end=13094,
)


_USEACTIVECOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UseActiveCompositionViewRequest',
  full_name='dlkit.proto.repository.UseActiveCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13096,
  serialized_end=13129,
)


_USEANYSTATUSCOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UseAnyStatusCompositionViewReply',
  full_name='dlkit.proto.repository.UseAnyStatusCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13131,
  serialized_end=13165,
)


_USEANYSTATUSCOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UseAnyStatusCompositionViewRequest',
  full_name='dlkit.proto.repository.UseAnyStatusCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13167,
  serialized_end=13203,
)


_USESEQUESTEREDCOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UseSequesteredCompositionViewReply',
  full_name='dlkit.proto.repository.UseSequesteredCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13205,
  serialized_end=13241,
)


_USESEQUESTEREDCOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UseSequesteredCompositionViewRequest',
  full_name='dlkit.proto.repository.UseSequesteredCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13243,
  serialized_end=13281,
)


_USEUNSEQUESTEREDCOMPOSITIONVIEWREPLY = _descriptor.Descriptor(
  name='UseUnsequesteredCompositionViewReply',
  full_name='dlkit.proto.repository.UseUnsequesteredCompositionViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13283,
  serialized_end=13321,
)


_USEUNSEQUESTEREDCOMPOSITIONVIEWREQUEST = _descriptor.Descriptor(
  name='UseUnsequesteredCompositionViewRequest',
  full_name='dlkit.proto.repository.UseUnsequesteredCompositionViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13323,
  serialized_end=13363,
)


_GETCOMPOSITIONREPLY = _descriptor.Descriptor(
  name='GetCompositionReply',
  full_name='dlkit.proto.repository.GetCompositionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition', full_name='dlkit.proto.repository.GetCompositionReply.composition', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13365,
  serialized_end=13444,
)


_GETCOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='GetCompositionRequest',
  full_name='dlkit.proto.repository.GetCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.GetCompositionRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13446,
  serialized_end=13529,
)


_GETCOMPOSITIONSBYIDSREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByIdsRequest',
  full_name='dlkit.proto.repository.GetCompositionsByIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_ids', full_name='dlkit.proto.repository.GetCompositionsByIdsRequest.composition_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13531,
  serialized_end=13621,
)


_GETCOMPOSITIONSBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByGenusTypeRequest',
  full_name='dlkit.proto.repository.GetCompositionsByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_genus_type', full_name='dlkit.proto.repository.GetCompositionsByGenusTypeRequest.composition_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13623,
  serialized_end=13730,
)


_GETCOMPOSITIONSBYPARENTGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByParentGenusTypeRequest',
  full_name='dlkit.proto.repository.GetCompositionsByParentGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_genus_type', full_name='dlkit.proto.repository.GetCompositionsByParentGenusTypeRequest.composition_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13732,
  serialized_end=13845,
)


_GETCOMPOSITIONSBYRECORDTYPEREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByRecordTypeRequest',
  full_name='dlkit.proto.repository.GetCompositionsByRecordTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_record_type', full_name='dlkit.proto.repository.GetCompositionsByRecordTypeRequest.composition_record_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13847,
  serialized_end=13956,
)


_GETCOMPOSITIONSBYPROVIDERREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByProviderRequest',
  full_name='dlkit.proto.repository.GetCompositionsByProviderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.repository.GetCompositionsByProviderRequest.resource_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13958,
  serialized_end=14049,
)


_GETCOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='GetCompositionsRequest',
  full_name='dlkit.proto.repository.GetCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14051,
  serialized_end=14075,
)


_CANSEARCHCOMPOSITIONSREPLY = _descriptor.Descriptor(
  name='CanSearchCompositionsReply',
  full_name='dlkit.proto.repository.CanSearchCompositionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_search_compositions', full_name='dlkit.proto.repository.CanSearchCompositionsReply.can_search_compositions', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14077,
  serialized_end=14138,
)


_CANSEARCHCOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='CanSearchCompositionsRequest',
  full_name='dlkit.proto.repository.CanSearchCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14140,
  serialized_end=14170,
)


_GETCOMPOSITIONQUERYREPLY = _descriptor.Descriptor(
  name='GetCompositionQueryReply',
  full_name='dlkit.proto.repository.GetCompositionQueryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_query', full_name='dlkit.proto.repository.GetCompositionQueryReply.composition_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14172,
  serialized_end=14267,
)


_GETCOMPOSITIONQUERYREQUEST = _descriptor.Descriptor(
  name='GetCompositionQueryRequest',
  full_name='dlkit.proto.repository.GetCompositionQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14269,
  serialized_end=14297,
)


_GETCOMPOSITIONSBYQUERYREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByQueryRequest',
  full_name='dlkit.proto.repository.GetCompositionsByQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_query', full_name='dlkit.proto.repository.GetCompositionsByQueryRequest.composition_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14299,
  serialized_end=14399,
)


_GETCOMPOSITIONSEARCHREPLY = _descriptor.Descriptor(
  name='GetCompositionSearchReply',
  full_name='dlkit.proto.repository.GetCompositionSearchReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_search', full_name='dlkit.proto.repository.GetCompositionSearchReply.composition_search', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14401,
  serialized_end=14499,
)


_GETCOMPOSITIONSEARCHREQUEST = _descriptor.Descriptor(
  name='GetCompositionSearchRequest',
  full_name='dlkit.proto.repository.GetCompositionSearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14501,
  serialized_end=14530,
)


_GETCOMPOSITIONSEARCHORDERREPLY = _descriptor.Descriptor(
  name='GetCompositionSearchOrderReply',
  full_name='dlkit.proto.repository.GetCompositionSearchOrderReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_search_order', full_name='dlkit.proto.repository.GetCompositionSearchOrderReply.composition_search_order', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14532,
  serialized_end=14646,
)


_GETCOMPOSITIONSEARCHORDERREQUEST = _descriptor.Descriptor(
  name='GetCompositionSearchOrderRequest',
  full_name='dlkit.proto.repository.GetCompositionSearchOrderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14648,
  serialized_end=14682,
)


_GETCOMPOSITIONSBYSEARCHREPLY = _descriptor.Descriptor(
  name='GetCompositionsBySearchReply',
  full_name='dlkit.proto.repository.GetCompositionsBySearchReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_search_results', full_name='dlkit.proto.repository.GetCompositionsBySearchReply.composition_search_results', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14684,
  serialized_end=14800,
)


_GETCOMPOSITIONSBYSEARCHREQUEST = _descriptor.Descriptor(
  name='GetCompositionsBySearchRequest',
  full_name='dlkit.proto.repository.GetCompositionsBySearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_query', full_name='dlkit.proto.repository.GetCompositionsBySearchRequest.composition_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_search', full_name='dlkit.proto.repository.GetCompositionsBySearchRequest.composition_search', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14803,
  serialized_end=14975,
)


_GETCOMPOSITIONQUERYFROMINSPECTORREPLY = _descriptor.Descriptor(
  name='GetCompositionQueryFromInspectorReply',
  full_name='dlkit.proto.repository.GetCompositionQueryFromInspectorReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_query', full_name='dlkit.proto.repository.GetCompositionQueryFromInspectorReply.composition_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14977,
  serialized_end=15085,
)


_GETCOMPOSITIONQUERYFROMINSPECTORREQUEST = _descriptor.Descriptor(
  name='GetCompositionQueryFromInspectorRequest',
  full_name='dlkit.proto.repository.GetCompositionQueryFromInspectorRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_query_inspector', full_name='dlkit.proto.repository.GetCompositionQueryFromInspectorRequest.composition_query_inspector', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15088,
  serialized_end=15217,
)


_CANCREATECOMPOSITIONSREPLY = _descriptor.Descriptor(
  name='CanCreateCompositionsReply',
  full_name='dlkit.proto.repository.CanCreateCompositionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_compositions', full_name='dlkit.proto.repository.CanCreateCompositionsReply.can_create_compositions', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15219,
  serialized_end=15280,
)


_CANCREATECOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='CanCreateCompositionsRequest',
  full_name='dlkit.proto.repository.CanCreateCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15282,
  serialized_end=15312,
)


_CANCREATECOMPOSITIONWITHRECORDTYPESREPLY = _descriptor.Descriptor(
  name='CanCreateCompositionWithRecordTypesReply',
  full_name='dlkit.proto.repository.CanCreateCompositionWithRecordTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_composition_with_record_types', full_name='dlkit.proto.repository.CanCreateCompositionWithRecordTypesReply.can_create_composition_with_record_types', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15314,
  serialized_end=15406,
)


_CANCREATECOMPOSITIONWITHRECORDTYPESREQUEST = _descriptor.Descriptor(
  name='CanCreateCompositionWithRecordTypesRequest',
  full_name='dlkit.proto.repository.CanCreateCompositionWithRecordTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_record_types', full_name='dlkit.proto.repository.CanCreateCompositionWithRecordTypesRequest.composition_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15408,
  serialized_end=15526,
)


_GETCOMPOSITIONFORMFORCREATEREPLY = _descriptor.Descriptor(
  name='GetCompositionFormForCreateReply',
  full_name='dlkit.proto.repository.GetCompositionFormForCreateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_form', full_name='dlkit.proto.repository.GetCompositionFormForCreateReply.composition_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15528,
  serialized_end=15629,
)


_GETCOMPOSITIONFORMFORCREATEREQUEST = _descriptor.Descriptor(
  name='GetCompositionFormForCreateRequest',
  full_name='dlkit.proto.repository.GetCompositionFormForCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_record_types', full_name='dlkit.proto.repository.GetCompositionFormForCreateRequest.composition_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15631,
  serialized_end=15741,
)


_CREATECOMPOSITIONREPLY = _descriptor.Descriptor(
  name='CreateCompositionReply',
  full_name='dlkit.proto.repository.CreateCompositionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition', full_name='dlkit.proto.repository.CreateCompositionReply.composition', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15743,
  serialized_end=15825,
)


_CREATECOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='CreateCompositionRequest',
  full_name='dlkit.proto.repository.CreateCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composiiton_form', full_name='dlkit.proto.repository.CreateCompositionRequest.composiiton_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15827,
  serialized_end=15920,
)


_CANUPDATECOMPOSITIONSREPLY = _descriptor.Descriptor(
  name='CanUpdateCompositionsReply',
  full_name='dlkit.proto.repository.CanUpdateCompositionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_update_compositions', full_name='dlkit.proto.repository.CanUpdateCompositionsReply.can_update_compositions', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15922,
  serialized_end=15983,
)


_CANUPDATECOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='CanUpdateCompositionsRequest',
  full_name='dlkit.proto.repository.CanUpdateCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15985,
  serialized_end=16015,
)


_GETCOMPOSITIONFORMFORUPDATEREPLY = _descriptor.Descriptor(
  name='GetCompositionFormForUpdateReply',
  full_name='dlkit.proto.repository.GetCompositionFormForUpdateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_form', full_name='dlkit.proto.repository.GetCompositionFormForUpdateReply.composition_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16017,
  serialized_end=16118,
)


_GETCOMPOSITIONFORMFORUPDATEREQUEST = _descriptor.Descriptor(
  name='GetCompositionFormForUpdateRequest',
  full_name='dlkit.proto.repository.GetCompositionFormForUpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.GetCompositionFormForUpdateRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16120,
  serialized_end=16216,
)


_UPDATECOMPOSITIONREPLY = _descriptor.Descriptor(
  name='UpdateCompositionReply',
  full_name='dlkit.proto.repository.UpdateCompositionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16218,
  serialized_end=16242,
)


_UPDATECOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='UpdateCompositionRequest',
  full_name='dlkit.proto.repository.UpdateCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composiiton_form', full_name='dlkit.proto.repository.UpdateCompositionRequest.composiiton_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16244,
  serialized_end=16337,
)


_CANDELETECOMPOSITIONSREPLY = _descriptor.Descriptor(
  name='CanDeleteCompositionsReply',
  full_name='dlkit.proto.repository.CanDeleteCompositionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_delete_compositions', full_name='dlkit.proto.repository.CanDeleteCompositionsReply.can_delete_compositions', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16339,
  serialized_end=16400,
)


_CANDELETECOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='CanDeleteCompositionsRequest',
  full_name='dlkit.proto.repository.CanDeleteCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16402,
  serialized_end=16432,
)


_DELETECOMPOSITIONREPLY = _descriptor.Descriptor(
  name='DeleteCompositionReply',
  full_name='dlkit.proto.repository.DeleteCompositionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16434,
  serialized_end=16458,
)


_DELETECOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='DeleteCompositionRequest',
  full_name='dlkit.proto.repository.DeleteCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.DeleteCompositionRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16460,
  serialized_end=16546,
)


_DELETECOMPOSITIONNODEREPLY = _descriptor.Descriptor(
  name='DeleteCompositionNodeReply',
  full_name='dlkit.proto.repository.DeleteCompositionNodeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16548,
  serialized_end=16576,
)


_DELETECOMPOSITIONNODEREQUEST = _descriptor.Descriptor(
  name='DeleteCompositionNodeRequest',
  full_name='dlkit.proto.repository.DeleteCompositionNodeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.DeleteCompositionNodeRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16578,
  serialized_end=16668,
)


_ADDCOMPOSITIONCHILDREPLY = _descriptor.Descriptor(
  name='AddCompositionChildReply',
  full_name='dlkit.proto.repository.AddCompositionChildReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16670,
  serialized_end=16696,
)


_ADDCOMPOSITIONCHILDREQUEST = _descriptor.Descriptor(
  name='AddCompositionChildRequest',
  full_name='dlkit.proto.repository.AddCompositionChildRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child_composition_id', full_name='dlkit.proto.repository.AddCompositionChildRequest.child_composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.AddCompositionChildRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16699,
  serialized_end=16853,
)


_REMOVECOMPOSITIONCHILDREPLY = _descriptor.Descriptor(
  name='RemoveCompositionChildReply',
  full_name='dlkit.proto.repository.RemoveCompositionChildReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16855,
  serialized_end=16884,
)


_REMOVECOMPOSITIONCHILDREQUEST = _descriptor.Descriptor(
  name='RemoveCompositionChildRequest',
  full_name='dlkit.proto.repository.RemoveCompositionChildRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child_composition_id', full_name='dlkit.proto.repository.RemoveCompositionChildRequest.child_composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.RemoveCompositionChildRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16887,
  serialized_end=17044,
)


_CANMANAGECOMPOSITIONALIASESREPLY = _descriptor.Descriptor(
  name='CanManageCompositionAliasesReply',
  full_name='dlkit.proto.repository.CanManageCompositionAliasesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_manage_composition_aliases', full_name='dlkit.proto.repository.CanManageCompositionAliasesReply.can_manage_composition_aliases', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17046,
  serialized_end=17120,
)


_CANMANAGECOMPOSITIONALIASESREQUEST = _descriptor.Descriptor(
  name='CanManageCompositionAliasesRequest',
  full_name='dlkit.proto.repository.CanManageCompositionAliasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17122,
  serialized_end=17158,
)


_ALIASCOMPOSITIONREPLY = _descriptor.Descriptor(
  name='AliasCompositionReply',
  full_name='dlkit.proto.repository.AliasCompositionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17160,
  serialized_end=17183,
)


_ALIASCOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='AliasCompositionRequest',
  full_name='dlkit.proto.repository.AliasCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias_id', full_name='dlkit.proto.repository.AliasCompositionRequest.alias_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.AliasCompositionRequest.composition_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17186,
  serialized_end=17325,
)


_USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREPLY = _descriptor.Descriptor(
  name='UseComparativeCompositionRepositoryViewReply',
  full_name='dlkit.proto.repository.UseComparativeCompositionRepositoryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17327,
  serialized_end=17373,
)


_USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREQUEST = _descriptor.Descriptor(
  name='UseComparativeCompositionRepositoryViewRequest',
  full_name='dlkit.proto.repository.UseComparativeCompositionRepositoryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17375,
  serialized_end=17423,
)


_USEPLENARYCOMPOSITIONREPOSITORYVIEWREPLY = _descriptor.Descriptor(
  name='UsePlenaryCompositionRepositoryViewReply',
  full_name='dlkit.proto.repository.UsePlenaryCompositionRepositoryViewReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17425,
  serialized_end=17467,
)


_USEPLENARYCOMPOSITIONREPOSITORYVIEWREQUEST = _descriptor.Descriptor(
  name='UsePlenaryCompositionRepositoryViewRequest',
  full_name='dlkit.proto.repository.UsePlenaryCompositionRepositoryViewRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17469,
  serialized_end=17513,
)


_CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREPLY = _descriptor.Descriptor(
  name='CanLookupCompositionRepositoryMappingsReply',
  full_name='dlkit.proto.repository.CanLookupCompositionRepositoryMappingsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_composition_repository_mappings', full_name='dlkit.proto.repository.CanLookupCompositionRepositoryMappingsReply.can_lookup_composition_repository_mappings', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17515,
  serialized_end=17612,
)


_CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREQUEST = _descriptor.Descriptor(
  name='CanLookupCompositionRepositoryMappingsRequest',
  full_name='dlkit.proto.repository.CanLookupCompositionRepositoryMappingsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17614,
  serialized_end=17661,
)


_GETCOMPOSITIONIDSBYREPOSITORYREQUEST = _descriptor.Descriptor(
  name='GetCompositionIdsByRepositoryRequest',
  full_name='dlkit.proto.repository.GetCompositionIdsByRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetCompositionIdsByRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17663,
  serialized_end=17760,
)


_GETCOMPOSITIONSBYREPOSITORYREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByRepositoryRequest',
  full_name='dlkit.proto.repository.GetCompositionsByRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetCompositionsByRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17762,
  serialized_end=17857,
)


_GETCOMPOSITIONIDSBYREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetCompositionIdsByRepositoriesRequest',
  full_name='dlkit.proto.repository.GetCompositionIdsByRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_ids', full_name='dlkit.proto.repository.GetCompositionIdsByRepositoriesRequest.repository_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17859,
  serialized_end=17959,
)


_GETCOMPOSITIONSBYREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetCompositionsByRepositoriesRequest',
  full_name='dlkit.proto.repository.GetCompositionsByRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_ids', full_name='dlkit.proto.repository.GetCompositionsByRepositoriesRequest.repository_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17961,
  serialized_end=18059,
)


_GETREPOSITORYIDSBYCOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='GetRepositoryIdsByCompositionRequest',
  full_name='dlkit.proto.repository.GetRepositoryIdsByCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.GetRepositoryIdsByCompositionRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18061,
  serialized_end=18159,
)


_GETREPOSITORIESBYCOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByCompositionRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.GetRepositoriesByCompositionRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18161,
  serialized_end=18258,
)


_CANASSIGNCOMPOSITIONSREPLY = _descriptor.Descriptor(
  name='CanAssignCompositionsReply',
  full_name='dlkit.proto.repository.CanAssignCompositionsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_assign_compositions', full_name='dlkit.proto.repository.CanAssignCompositionsReply.can_assign_compositions', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18260,
  serialized_end=18321,
)


_CANASSIGNCOMPOSITIONSREQUEST = _descriptor.Descriptor(
  name='CanAssignCompositionsRequest',
  full_name='dlkit.proto.repository.CanAssignCompositionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18323,
  serialized_end=18353,
)


_CANASSIGNCOMPOSITIONSTOREPOSITORYREPLY = _descriptor.Descriptor(
  name='CanAssignCompositionsToRepositoryReply',
  full_name='dlkit.proto.repository.CanAssignCompositionsToRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_assign_compositions_to_repository', full_name='dlkit.proto.repository.CanAssignCompositionsToRepositoryReply.can_assign_compositions_to_repository', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18355,
  serialized_end=18442,
)


_CANASSIGNCOMPOSITIONSTOREPOSITORYREQUEST = _descriptor.Descriptor(
  name='CanAssignCompositionsToRepositoryRequest',
  full_name='dlkit.proto.repository.CanAssignCompositionsToRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.CanAssignCompositionsToRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18444,
  serialized_end=18545,
)


_GETASSIGNABLEREPOSITORYIDSFORCOMPOSITIONREQUEST = _descriptor.Descriptor(
  name='GetAssignableRepositoryIdsForCompositionRequest',
  full_name='dlkit.proto.repository.GetAssignableRepositoryIdsForCompositionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.GetAssignableRepositoryIdsForCompositionRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetAssignableRepositoryIdsForCompositionRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18548,
  serialized_end=18716,
)


_ASSIGNCOMPOSITIONTOREPOSITORYREPLY = _descriptor.Descriptor(
  name='AssignCompositionToRepositoryReply',
  full_name='dlkit.proto.repository.AssignCompositionToRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18718,
  serialized_end=18754,
)


_ASSIGNCOMPOSITIONTOREPOSITORYREQUEST = _descriptor.Descriptor(
  name='AssignCompositionToRepositoryRequest',
  full_name='dlkit.proto.repository.AssignCompositionToRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.AssignCompositionToRepositoryRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.AssignCompositionToRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18757,
  serialized_end=18914,
)


_UNASSIGNCOMPOSITIONFROMREPOSITORYREPLY = _descriptor.Descriptor(
  name='UnassignCompositionFromRepositoryReply',
  full_name='dlkit.proto.repository.UnassignCompositionFromRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18916,
  serialized_end=18956,
)


_UNASSIGNCOMPOSITIONFROMREPOSITORYREQUEST = _descriptor.Descriptor(
  name='UnassignCompositionFromRepositoryRequest',
  full_name='dlkit.proto.repository.UnassignCompositionFromRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='composition_id', full_name='dlkit.proto.repository.UnassignCompositionFromRepositoryRequest.composition_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.UnassignCompositionFromRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18959,
  serialized_end=19120,
)


_CANLOOKUPREPOSITORIESREPLY = _descriptor.Descriptor(
  name='CanLookupRepositoriesReply',
  full_name='dlkit.proto.repository.CanLookupRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_lookup_repositories', full_name='dlkit.proto.repository.CanLookupRepositoriesReply.can_lookup_repositories', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19122,
  serialized_end=19183,
)


_CANLOOKUPREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='CanLookupRepositoriesRequest',
  full_name='dlkit.proto.repository.CanLookupRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19185,
  serialized_end=19215,
)


_GETREPOSITORIESBYIDSREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByIdsRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_ids', full_name='dlkit.proto.repository.GetRepositoriesByIdsRequest.repository_ids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19217,
  serialized_end=19306,
)


_GETREPOSITORIESBYGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByGenusTypeRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_genus_type', full_name='dlkit.proto.repository.GetRepositoriesByGenusTypeRequest.repository_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19308,
  serialized_end=19414,
)


_GETREPOSITORIESBYPARENTGENUSTYPEREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByParentGenusTypeRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByParentGenusTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_genus_type', full_name='dlkit.proto.repository.GetRepositoriesByParentGenusTypeRequest.repository_genus_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19416,
  serialized_end=19528,
)


_GETREPOSITORIESBYRECORDTYPEREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByRecordTypeRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByRecordTypeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_record_type', full_name='dlkit.proto.repository.GetRepositoriesByRecordTypeRequest.repository_record_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19530,
  serialized_end=19638,
)


_GETREPOSITORIESBYPROVIDERREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByProviderRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByProviderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='dlkit.proto.repository.GetRepositoriesByProviderRequest.resource_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19640,
  serialized_end=19731,
)


_GETREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesRequest',
  full_name='dlkit.proto.repository.GetRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19733,
  serialized_end=19757,
)


_CANSEARCHREPOSITORIESREPLY = _descriptor.Descriptor(
  name='CanSearchRepositoriesReply',
  full_name='dlkit.proto.repository.CanSearchRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_search_repositories', full_name='dlkit.proto.repository.CanSearchRepositoriesReply.can_search_repositories', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19759,
  serialized_end=19820,
)


_CANSEARCHREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='CanSearchRepositoriesRequest',
  full_name='dlkit.proto.repository.CanSearchRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19822,
  serialized_end=19852,
)


_GETREPOSITORYQUERYREPLY = _descriptor.Descriptor(
  name='GetRepositoryQueryReply',
  full_name='dlkit.proto.repository.GetRepositoryQueryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_query', full_name='dlkit.proto.repository.GetRepositoryQueryReply.repository_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19854,
  serialized_end=19946,
)


_GETREPOSITORYQUERYREQUEST = _descriptor.Descriptor(
  name='GetRepositoryQueryRequest',
  full_name='dlkit.proto.repository.GetRepositoryQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19948,
  serialized_end=19975,
)


_GETREPOSITORIESBYQUERYREQUEST = _descriptor.Descriptor(
  name='GetRepositoriesByQueryRequest',
  full_name='dlkit.proto.repository.GetRepositoriesByQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_query', full_name='dlkit.proto.repository.GetRepositoriesByQueryRequest.repository_query', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19977,
  serialized_end=20075,
)


_CANCREATEREPOSITORIESREPLY = _descriptor.Descriptor(
  name='CanCreateRepositoriesReply',
  full_name='dlkit.proto.repository.CanCreateRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_repositories', full_name='dlkit.proto.repository.CanCreateRepositoriesReply.can_create_repositories', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20077,
  serialized_end=20138,
)


_CANCREATEREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='CanCreateRepositoriesRequest',
  full_name='dlkit.proto.repository.CanCreateRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20140,
  serialized_end=20170,
)


_CANCREATEREPOSITORYWITHRECORDTYPESREPLY = _descriptor.Descriptor(
  name='CanCreateRepositoryWithRecordTypesReply',
  full_name='dlkit.proto.repository.CanCreateRepositoryWithRecordTypesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_create_repository_with_record_types', full_name='dlkit.proto.repository.CanCreateRepositoryWithRecordTypesReply.can_create_repository_with_record_types', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20172,
  serialized_end=20262,
)


_CANCREATEREPOSITORYWITHRECORDTYPESREQUEST = _descriptor.Descriptor(
  name='CanCreateRepositoryWithRecordTypesRequest',
  full_name='dlkit.proto.repository.CanCreateRepositoryWithRecordTypesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_record_types', full_name='dlkit.proto.repository.CanCreateRepositoryWithRecordTypesRequest.repository_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20264,
  serialized_end=20380,
)


_GETREPOSITORYFORMFORCREATEREPLY = _descriptor.Descriptor(
  name='GetRepositoryFormForCreateReply',
  full_name='dlkit.proto.repository.GetRepositoryFormForCreateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_form', full_name='dlkit.proto.repository.GetRepositoryFormForCreateReply.repository_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20382,
  serialized_end=20480,
)


_GETREPOSITORYFORMFORCREATEREQUEST = _descriptor.Descriptor(
  name='GetRepositoryFormForCreateRequest',
  full_name='dlkit.proto.repository.GetRepositoryFormForCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_record_types', full_name='dlkit.proto.repository.GetRepositoryFormForCreateRequest.repository_record_types', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20482,
  serialized_end=20590,
)


_CREATEREPOSITORYREPLY = _descriptor.Descriptor(
  name='CreateRepositoryReply',
  full_name='dlkit.proto.repository.CreateRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='dlkit.proto.repository.CreateRepositoryReply.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20592,
  serialized_end=20671,
)


_CREATEREPOSITORYREQUEST = _descriptor.Descriptor(
  name='CreateRepositoryRequest',
  full_name='dlkit.proto.repository.CreateRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_form', full_name='dlkit.proto.repository.CreateRepositoryRequest.repository_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20673,
  serialized_end=20763,
)


_CANUPDATEREPOSITORIESREPLY = _descriptor.Descriptor(
  name='CanUpdateRepositoriesReply',
  full_name='dlkit.proto.repository.CanUpdateRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_update_repositories', full_name='dlkit.proto.repository.CanUpdateRepositoriesReply.can_update_repositories', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20765,
  serialized_end=20826,
)


_CANUPDATEREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='CanUpdateRepositoriesRequest',
  full_name='dlkit.proto.repository.CanUpdateRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20828,
  serialized_end=20858,
)


_GETREPOSITORYFORMFORUPDATEREPLY = _descriptor.Descriptor(
  name='GetRepositoryFormForUpdateReply',
  full_name='dlkit.proto.repository.GetRepositoryFormForUpdateReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_form', full_name='dlkit.proto.repository.GetRepositoryFormForUpdateReply.repository_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20860,
  serialized_end=20958,
)


_GETREPOSITORYFORMFORUPDATEREQUEST = _descriptor.Descriptor(
  name='GetRepositoryFormForUpdateRequest',
  full_name='dlkit.proto.repository.GetRepositoryFormForUpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetRepositoryFormForUpdateRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20960,
  serialized_end=21054,
)


_UPDATEREPOSITORYREPLY = _descriptor.Descriptor(
  name='UpdateRepositoryReply',
  full_name='dlkit.proto.repository.UpdateRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21056,
  serialized_end=21079,
)


_UPDATEREPOSITORYREQUEST = _descriptor.Descriptor(
  name='UpdateRepositoryRequest',
  full_name='dlkit.proto.repository.UpdateRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_form', full_name='dlkit.proto.repository.UpdateRepositoryRequest.repository_form', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21081,
  serialized_end=21171,
)


_CANDELETEREPOSITORIESREPLY = _descriptor.Descriptor(
  name='CanDeleteRepositoriesReply',
  full_name='dlkit.proto.repository.CanDeleteRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_delete_repositories', full_name='dlkit.proto.repository.CanDeleteRepositoriesReply.can_delete_repositories', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21173,
  serialized_end=21234,
)


_CANDELETEREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='CanDeleteRepositoriesRequest',
  full_name='dlkit.proto.repository.CanDeleteRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21236,
  serialized_end=21266,
)


_DELETEREPOSITORYREPLY = _descriptor.Descriptor(
  name='DeleteRepositoryReply',
  full_name='dlkit.proto.repository.DeleteRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21268,
  serialized_end=21291,
)


_DELETEREPOSITORYREQUEST = _descriptor.Descriptor(
  name='DeleteRepositoryRequest',
  full_name='dlkit.proto.repository.DeleteRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.DeleteRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21293,
  serialized_end=21377,
)


_CANMANAGEREPOSITORYALIASESREPLY = _descriptor.Descriptor(
  name='CanManageRepositoryAliasesReply',
  full_name='dlkit.proto.repository.CanManageRepositoryAliasesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_manage_repository_aliases', full_name='dlkit.proto.repository.CanManageRepositoryAliasesReply.can_manage_repository_aliases', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21379,
  serialized_end=21451,
)


_CANMANAGEREPOSITORYALIASESREQUEST = _descriptor.Descriptor(
  name='CanManageRepositoryAliasesRequest',
  full_name='dlkit.proto.repository.CanManageRepositoryAliasesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21453,
  serialized_end=21488,
)


_ALIASREPOSITORYREPLY = _descriptor.Descriptor(
  name='AliasRepositoryReply',
  full_name='dlkit.proto.repository.AliasRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21490,
  serialized_end=21512,
)


_ALIASREPOSITORYREQUEST = _descriptor.Descriptor(
  name='AliasRepositoryRequest',
  full_name='dlkit.proto.repository.AliasRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias_id', full_name='dlkit.proto.repository.AliasRepositoryRequest.alias_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.AliasRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21515,
  serialized_end=21652,
)


_GETREPOSITORYHIERARCHYIDREPLY = _descriptor.Descriptor(
  name='GetRepositoryHierarchyIdReply',
  full_name='dlkit.proto.repository.GetRepositoryHierarchyIdReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='dlkit.proto.repository.GetRepositoryHierarchyIdReply.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21654,
  serialized_end=21733,
)


_GETREPOSITORYHIERARCHYIDREQUEST = _descriptor.Descriptor(
  name='GetRepositoryHierarchyIdRequest',
  full_name='dlkit.proto.repository.GetRepositoryHierarchyIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21735,
  serialized_end=21768,
)


_GETREPOSITORYHIERARCHYREPLY = _descriptor.Descriptor(
  name='GetRepositoryHierarchyReply',
  full_name='dlkit.proto.repository.GetRepositoryHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hierarchy', full_name='dlkit.proto.repository.GetRepositoryHierarchyReply.hierarchy', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21770,
  serialized_end=21852,
)


_GETREPOSITORYHIERARCHYREQUEST = _descriptor.Descriptor(
  name='GetRepositoryHierarchyRequest',
  full_name='dlkit.proto.repository.GetRepositoryHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21854,
  serialized_end=21885,
)


_CANACCESSREPOSITORYHIERARCHYREPLY = _descriptor.Descriptor(
  name='CanAccessRepositoryHierarchyReply',
  full_name='dlkit.proto.repository.CanAccessRepositoryHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_access_repository_hierarchy', full_name='dlkit.proto.repository.CanAccessRepositoryHierarchyReply.can_access_repository_hierarchy', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21887,
  serialized_end=21963,
)


_CANACCESSREPOSITORYHIERARCHYREQUEST = _descriptor.Descriptor(
  name='CanAccessRepositoryHierarchyRequest',
  full_name='dlkit.proto.repository.CanAccessRepositoryHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21965,
  serialized_end=22002,
)


_GETROOTREPOSITORYIDSREQUEST = _descriptor.Descriptor(
  name='GetRootRepositoryIdsRequest',
  full_name='dlkit.proto.repository.GetRootRepositoryIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22004,
  serialized_end=22033,
)


_GETROOTREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetRootRepositoriesRequest',
  full_name='dlkit.proto.repository.GetRootRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22035,
  serialized_end=22063,
)


_HASPARENTREPOSITORIESREPLY = _descriptor.Descriptor(
  name='HasParentRepositoriesReply',
  full_name='dlkit.proto.repository.HasParentRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='has_parent_repositories', full_name='dlkit.proto.repository.HasParentRepositoriesReply.has_parent_repositories', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22065,
  serialized_end=22126,
)


_HASPARENTREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='HasParentRepositoriesRequest',
  full_name='dlkit.proto.repository.HasParentRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.HasParentRepositoriesRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22128,
  serialized_end=22217,
)


_ISPARENTOFREPOSITORYREPLY = _descriptor.Descriptor(
  name='IsParentOfRepositoryReply',
  full_name='dlkit.proto.repository.IsParentOfRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_parent_of_repository', full_name='dlkit.proto.repository.IsParentOfRepositoryReply.is_parent_of_repository', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22219,
  serialized_end=22279,
)


_ISPARENTOFREPOSITORYREQUEST = _descriptor.Descriptor(
  name='IsParentOfRepositoryRequest',
  full_name='dlkit.proto.repository.IsParentOfRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.repository.IsParentOfRepositoryRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.IsParentOfRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22282,
  serialized_end=22419,
)


_GETPARENTREPOSITORYIDSREQUEST = _descriptor.Descriptor(
  name='GetParentRepositoryIdsRequest',
  full_name='dlkit.proto.repository.GetParentRepositoryIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetParentRepositoryIdsRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22421,
  serialized_end=22511,
)


_GETPARENTREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetParentRepositoriesRequest',
  full_name='dlkit.proto.repository.GetParentRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetParentRepositoriesRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22513,
  serialized_end=22602,
)


_ISANCESTOROFREPOSITORYREPLY = _descriptor.Descriptor(
  name='IsAncestorOfRepositoryReply',
  full_name='dlkit.proto.repository.IsAncestorOfRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_ancestor_of_repository', full_name='dlkit.proto.repository.IsAncestorOfRepositoryReply.is_ancestor_of_repository', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22604,
  serialized_end=22668,
)


_ISANCESTOROFREPOSITORYREQUEST = _descriptor.Descriptor(
  name='IsAncestorOfRepositoryRequest',
  full_name='dlkit.proto.repository.IsAncestorOfRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.repository.IsAncestorOfRepositoryRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.IsAncestorOfRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22671,
  serialized_end=22810,
)


_HASCHILDREPOSITORIESREPLY = _descriptor.Descriptor(
  name='HasChildRepositoriesReply',
  full_name='dlkit.proto.repository.HasChildRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='has_child_repositories', full_name='dlkit.proto.repository.HasChildRepositoriesReply.has_child_repositories', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22812,
  serialized_end=22871,
)


_HASCHILDREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='HasChildRepositoriesRequest',
  full_name='dlkit.proto.repository.HasChildRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.HasChildRepositoriesRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22873,
  serialized_end=22961,
)


_ISCHILDOFREPOSITORYREPLY = _descriptor.Descriptor(
  name='IsChildOfRepositoryReply',
  full_name='dlkit.proto.repository.IsChildOfRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_child_of_repository', full_name='dlkit.proto.repository.IsChildOfRepositoryReply.is_child_of_repository', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22963,
  serialized_end=23021,
)


_ISCHILDOFREPOSITORYREQUEST = _descriptor.Descriptor(
  name='IsChildOfRepositoryRequest',
  full_name='dlkit.proto.repository.IsChildOfRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.repository.IsChildOfRepositoryRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.IsChildOfRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23024,
  serialized_end=23160,
)


_GETCHILDREPOSITORYIDSREQUEST = _descriptor.Descriptor(
  name='GetChildRepositoryIdsRequest',
  full_name='dlkit.proto.repository.GetChildRepositoryIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetChildRepositoryIdsRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23162,
  serialized_end=23251,
)


_GETCHILDREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='GetChildRepositoriesRequest',
  full_name='dlkit.proto.repository.GetChildRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetChildRepositoriesRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23253,
  serialized_end=23341,
)


_ISDESCENDANTOFREPOSITORYREPLY = _descriptor.Descriptor(
  name='IsDescendantOfRepositoryReply',
  full_name='dlkit.proto.repository.IsDescendantOfRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_descendant_of_repository', full_name='dlkit.proto.repository.IsDescendantOfRepositoryReply.is_descendant_of_repository', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23343,
  serialized_end=23411,
)


_ISDESCENDANTOFREPOSITORYREQUEST = _descriptor.Descriptor(
  name='IsDescendantOfRepositoryRequest',
  full_name='dlkit.proto.repository.IsDescendantOfRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id_', full_name='dlkit.proto.repository.IsDescendantOfRepositoryRequest.id_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.IsDescendantOfRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23414,
  serialized_end=23555,
)


_GETREPOSITORYNODEIDSREPLY = _descriptor.Descriptor(
  name='GetRepositoryNodeIdsReply',
  full_name='dlkit.proto.repository.GetRepositoryNodeIdsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='dlkit.proto.repository.GetRepositoryNodeIdsReply.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23557,
  serialized_end=23627,
)


_GETREPOSITORYNODEIDSREQUEST = _descriptor.Descriptor(
  name='GetRepositoryNodeIdsRequest',
  full_name='dlkit.proto.repository.GetRepositoryNodeIdsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ancestor_levels', full_name='dlkit.proto.repository.GetRepositoryNodeIdsRequest.ancestor_levels', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='descendant_levels', full_name='dlkit.proto.repository.GetRepositoryNodeIdsRequest.descendant_levels', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include_siblings', full_name='dlkit.proto.repository.GetRepositoryNodeIdsRequest.include_siblings', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetRepositoryNodeIdsRequest.repository_id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23630,
  serialized_end=23796,
)


_GETREPOSITORYNODESREPLY = _descriptor.Descriptor(
  name='GetRepositoryNodesReply',
  full_name='dlkit.proto.repository.GetRepositoryNodesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_node', full_name='dlkit.proto.repository.GetRepositoryNodesReply.repository_node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23798,
  serialized_end=23888,
)


_GETREPOSITORYNODESREQUEST = _descriptor.Descriptor(
  name='GetRepositoryNodesRequest',
  full_name='dlkit.proto.repository.GetRepositoryNodesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ancestor_levels', full_name='dlkit.proto.repository.GetRepositoryNodesRequest.ancestor_levels', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='descendant_levels', full_name='dlkit.proto.repository.GetRepositoryNodesRequest.descendant_levels', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include_siblings', full_name='dlkit.proto.repository.GetRepositoryNodesRequest.include_siblings', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.GetRepositoryNodesRequest.repository_id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23891,
  serialized_end=24055,
)


_CANMODIFYREPOSITORYHIERARCHYREPLY = _descriptor.Descriptor(
  name='CanModifyRepositoryHierarchyReply',
  full_name='dlkit.proto.repository.CanModifyRepositoryHierarchyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_modify_repository_hierarchy', full_name='dlkit.proto.repository.CanModifyRepositoryHierarchyReply.can_modify_repository_hierarchy', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24057,
  serialized_end=24133,
)


_CANMODIFYREPOSITORYHIERARCHYREQUEST = _descriptor.Descriptor(
  name='CanModifyRepositoryHierarchyRequest',
  full_name='dlkit.proto.repository.CanModifyRepositoryHierarchyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24135,
  serialized_end=24172,
)


_ADDROOTREPOSITORYREPLY = _descriptor.Descriptor(
  name='AddRootRepositoryReply',
  full_name='dlkit.proto.repository.AddRootRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24174,
  serialized_end=24198,
)


_ADDROOTREPOSITORYREQUEST = _descriptor.Descriptor(
  name='AddRootRepositoryRequest',
  full_name='dlkit.proto.repository.AddRootRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.AddRootRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24200,
  serialized_end=24285,
)


_REMOVEROOTREPOSITORYREPLY = _descriptor.Descriptor(
  name='RemoveRootRepositoryReply',
  full_name='dlkit.proto.repository.RemoveRootRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24287,
  serialized_end=24314,
)


_REMOVEROOTREPOSITORYREQUEST = _descriptor.Descriptor(
  name='RemoveRootRepositoryRequest',
  full_name='dlkit.proto.repository.RemoveRootRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.RemoveRootRepositoryRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24316,
  serialized_end=24404,
)


_ADDCHILDREPOSITORYREPLY = _descriptor.Descriptor(
  name='AddChildRepositoryReply',
  full_name='dlkit.proto.repository.AddChildRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24406,
  serialized_end=24431,
)


_ADDCHILDREPOSITORYREQUEST = _descriptor.Descriptor(
  name='AddChildRepositoryRequest',
  full_name='dlkit.proto.repository.AddChildRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child_id', full_name='dlkit.proto.repository.AddChildRepositoryRequest.child_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.AddChildRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24434,
  serialized_end=24574,
)


_REMOVECHILDREPOSITORYREPLY = _descriptor.Descriptor(
  name='RemoveChildRepositoryReply',
  full_name='dlkit.proto.repository.RemoveChildRepositoryReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24576,
  serialized_end=24604,
)


_REMOVECHILDREPOSITORYREQUEST = _descriptor.Descriptor(
  name='RemoveChildRepositoryRequest',
  full_name='dlkit.proto.repository.RemoveChildRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child_id', full_name='dlkit.proto.repository.RemoveChildRepositoryRequest.child_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.RemoveChildRepositoryRequest.repository_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24607,
  serialized_end=24750,
)


_REMOVECHILDREPOSITORIESREPLY = _descriptor.Descriptor(
  name='RemoveChildRepositoriesReply',
  full_name='dlkit.proto.repository.RemoveChildRepositoriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24752,
  serialized_end=24782,
)


_REMOVECHILDREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='RemoveChildRepositoriesRequest',
  full_name='dlkit.proto.repository.RemoveChildRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='dlkit.proto.repository.RemoveChildRepositoriesRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24784,
  serialized_end=24875,
)

_ASSET.fields_by_name['asset_contents'].message_type = _ASSETCONTENT
_ASSET.fields_by_name['composition'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSET.fields_by_name['created_date'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ASSET.fields_by_name['description'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_ASSET.fields_by_name['display_name'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_ASSET.fields_by_name['genus_type_id'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_ASSET.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSET.fields_by_name['provider_links'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSET.fields_by_name['published_date'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ASSET.fields_by_name['record_type_ids'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_ASSET.fields_by_name['repository'].message_type = dlkit_dot_proto_dot_osid__pb2._OSIDCATALOG
_ASSET.fields_by_name['source'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSETLIST.fields_by_name['assets'].message_type = _ASSET
_ASSETCONTENT.fields_by_name['accessibility_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_ASSETCONTENT.fields_by_name['asset'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSETCONTENT.fields_by_name['data'].message_type = dlkit_dot_primordium_dot_transport_dot_objects__pb2._DATAINPUTSTREAM
_ASSETCONTENT.fields_by_name['description'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_ASSETCONTENT.fields_by_name['display_name'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_ASSETCONTENT.fields_by_name['genus_type_id'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_ASSETCONTENT.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSETCONTENT.fields_by_name['record_type_ids'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_ASSETCONTENT.fields_by_name['repository'].message_type = dlkit_dot_proto_dot_osid__pb2._OSIDCATALOG
_ASSETCONTENTLIST.fields_by_name['asset_contents'].message_type = _ASSETCONTENT
_COMPOSITION.fields_by_name['children'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_COMPOSITION.fields_by_name['description'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_COMPOSITION.fields_by_name['display_name'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_COMPOSITION.fields_by_name['genus_type_id'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_COMPOSITION.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_COMPOSITION.fields_by_name['record_type_ids'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_COMPOSITION.fields_by_name['repository'].message_type = dlkit_dot_proto_dot_osid__pb2._OSIDCATALOG
_COMPOSITIONLIST.fields_by_name['compositions'].message_type = _COMPOSITION
_REPOSITORY.fields_by_name['description'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_REPOSITORY.fields_by_name['display_name'].message_type = dlkit_dot_primordium_dot_locale_dot_primitives__pb2._DISPLAYTEXT
_REPOSITORY.fields_by_name['genus_type_id'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_REPOSITORY.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REPOSITORY.fields_by_name['record_type_ids'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_REPOSITORYLIST.fields_by_name['repositories'].message_type = _REPOSITORY
_REPOSITORYNODELIST.fields_by_name['repository_nodes'].message_type = _REPOSITORYNODE
_GETREPOSITORYIDREPLY.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYREPLY.fields_by_name['repository'].message_type = _REPOSITORY
_GETASSETREPLY.fields_by_name['asset'].message_type = _ASSET
_GETASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSETSBYIDSREQUEST.fields_by_name['asset_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSETSBYGENUSTYPEREQUEST.fields_by_name['asset_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETASSETSBYPARENTGENUSTYPEREQUEST.fields_by_name['asset_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETASSETSBYRECORDTYPEREQUEST.fields_by_name['asset_record_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETASSETSBYPROVIDERREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSETQUERYREPLY.fields_by_name['asset_query'].message_type = _ASSETQUERY
_GETASSETSBYQUERYREQUEST.fields_by_name['asset_query'].message_type = _ASSETQUERY
_GETASSETSEARCHREPLY.fields_by_name['asset_search'].message_type = _ASSETSEARCH
_GETASSETSEARCHORDERREPLY.fields_by_name['asset_search_order'].message_type = _ASSETSEARCHORDER
_GETASSETSBYSEARCHREPLY.fields_by_name['asset_search_results'].message_type = _ASSETSEARCHRESULTS
_GETASSETSBYSEARCHREQUEST.fields_by_name['asset_query'].message_type = _ASSETQUERY
_GETASSETSBYSEARCHREQUEST.fields_by_name['asset_search'].message_type = _ASSETSEARCH
_GETASSETQUERYFROMINSPECTORREPLY.fields_by_name['asset_query'].message_type = _ASSETQUERY
_GETASSETQUERYFROMINSPECTORREQUEST.fields_by_name['asset_query_inspector'].message_type = _ASSETQUERYINSPECTOR
_CANCREATEASSETWITHRECORDTYPESREQUEST.fields_by_name['asset_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETASSETFORMFORCREATEREPLY.fields_by_name['asset_form'].message_type = _ASSETFORM
_GETASSETFORMFORCREATEREQUEST.fields_by_name['asset_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_CREATEASSETREPLY.fields_by_name['asset'].message_type = _ASSET
_CREATEASSETREQUEST.fields_by_name['asset_form'].message_type = _ASSETFORM
_GETASSETFORMFORUPDATEREPLY.fields_by_name['asset_form'].message_type = _ASSETFORM
_GETASSETFORMFORUPDATEREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UPDATEASSETREQUEST.fields_by_name['asset_form'].message_type = _ASSETFORM
_DELETEASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASASSETREQUEST.fields_by_name['alias_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_CANCREATEASSETCONTENTWITHRECORDTYPESREQUEST.fields_by_name['asset_content_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETASSETCONTENTFORMFORCREATEREPLY.fields_by_name['asset_content_form'].message_type = _ASSETCONTENTFORM
_GETASSETCONTENTFORMFORCREATEREQUEST.fields_by_name['asset_content_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETASSETCONTENTFORMFORCREATEREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_CREATEASSETCONTENTREPLY.fields_by_name['asset_content'].message_type = _ASSETCONTENT
_CREATEASSETCONTENTREQUEST.fields_by_name['asset_content_form'].message_type = _ASSETCONTENTFORM
_GETASSETCONTENTFORMFORUPDATEREPLY.fields_by_name['asset_content_form'].message_type = _ASSETCONTENTFORM
_GETASSETCONTENTFORMFORUPDATEREQUEST.fields_by_name['asset_content_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UPDATEASSETCONTENTREQUEST.fields_by_name['asset_content_form'].message_type = _ASSETCONTENTFORM
_DELETEASSETCONTENTREQUEST.fields_by_name['asset_content_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REGISTERFORNEWASSETSBYGENUSTYPEREQUEST.fields_by_name['asset_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_REGISTERFORCHANGEDASSETSBYGENUSTYPEREQUEST.fields_by_name['asset_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_REGISTERFORCHANGEDASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REGISTERFORDELETEDASSETSBYGENUSTYPEREQUEST.fields_by_name['asset_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_REGISTERFORDELETEDASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ACKNOWLEDGEASSETNOTIFICATIONREQUEST.fields_by_name['notification_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSETIDSBYREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSETSBYREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSETIDSBYREPOSITORIESREQUEST.fields_by_name['repository_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSETSBYREPOSITORIESREQUEST.fields_by_name['repository_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYIDSBYASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORIESBYASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_CANASSIGNASSETSTOREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLEREPOSITORYIDSREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLEREPOSITORYIDSFORASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLEREPOSITORYIDSFORASSETREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSIGNASSETTOREPOSITORYREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSIGNASSETTOREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UNASSIGNASSETFROMREPOSITORYREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UNASSIGNASSETFROMREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONASSETSREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONSBYASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDASSETREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_MOVEASSETAHEADREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_MOVEASSETAHEADREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_MOVEASSETAHEADREQUEST.fields_by_name['reference_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_MOVEASSETBEHINDREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_MOVEASSETBEHINDREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_MOVEASSETBEHINDREQUEST.fields_by_name['reference_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ORDERASSETSREQUEST.fields_by_name['asset_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ORDERASSETSREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVEASSETREQUEST.fields_by_name['asset_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVEASSETREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONREPLY.fields_by_name['composition'].message_type = _COMPOSITION
_GETCOMPOSITIONREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONSBYIDSREQUEST.fields_by_name['composition_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONSBYGENUSTYPEREQUEST.fields_by_name['composition_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCOMPOSITIONSBYPARENTGENUSTYPEREQUEST.fields_by_name['composition_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCOMPOSITIONSBYRECORDTYPEREQUEST.fields_by_name['composition_record_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCOMPOSITIONSBYPROVIDERREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONQUERYREPLY.fields_by_name['composition_query'].message_type = _COMPOSITIONQUERY
_GETCOMPOSITIONSBYQUERYREQUEST.fields_by_name['composition_query'].message_type = _COMPOSITIONQUERY
_GETCOMPOSITIONSEARCHREPLY.fields_by_name['composition_search'].message_type = _COMPOSITIONSEARCH
_GETCOMPOSITIONSEARCHORDERREPLY.fields_by_name['composition_search_order'].message_type = _COMPOSITIONSEARCHORDER
_GETCOMPOSITIONSBYSEARCHREPLY.fields_by_name['composition_search_results'].message_type = _COMPOSITIONSEARCHRESULTS
_GETCOMPOSITIONSBYSEARCHREQUEST.fields_by_name['composition_query'].message_type = _COMPOSITIONQUERY
_GETCOMPOSITIONSBYSEARCHREQUEST.fields_by_name['composition_search'].message_type = _COMPOSITIONSEARCH
_GETCOMPOSITIONQUERYFROMINSPECTORREPLY.fields_by_name['composition_query'].message_type = _COMPOSITIONQUERY
_GETCOMPOSITIONQUERYFROMINSPECTORREQUEST.fields_by_name['composition_query_inspector'].message_type = _COMPOSITIONQUERYINSPECTOR
_CANCREATECOMPOSITIONWITHRECORDTYPESREQUEST.fields_by_name['composition_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETCOMPOSITIONFORMFORCREATEREPLY.fields_by_name['composition_form'].message_type = _COMPOSITIONFORM
_GETCOMPOSITIONFORMFORCREATEREQUEST.fields_by_name['composition_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_CREATECOMPOSITIONREPLY.fields_by_name['composition'].message_type = _COMPOSITION
_CREATECOMPOSITIONREQUEST.fields_by_name['composiiton_form'].message_type = _COMPOSITIONFORM
_GETCOMPOSITIONFORMFORUPDATEREPLY.fields_by_name['composition_form'].message_type = _COMPOSITIONFORM
_GETCOMPOSITIONFORMFORUPDATEREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UPDATECOMPOSITIONREQUEST.fields_by_name['composiiton_form'].message_type = _COMPOSITIONFORM
_DELETECOMPOSITIONREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_DELETECOMPOSITIONNODEREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCOMPOSITIONCHILDREQUEST.fields_by_name['child_composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCOMPOSITIONCHILDREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECOMPOSITIONCHILDREQUEST.fields_by_name['child_composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECOMPOSITIONCHILDREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASCOMPOSITIONREQUEST.fields_by_name['alias_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASCOMPOSITIONREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONIDSBYREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONSBYREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONIDSBYREPOSITORIESREQUEST.fields_by_name['repository_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCOMPOSITIONSBYREPOSITORIESREQUEST.fields_by_name['repository_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYIDSBYCOMPOSITIONREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORIESBYCOMPOSITIONREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_CANASSIGNCOMPOSITIONSTOREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLEREPOSITORYIDSFORCOMPOSITIONREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETASSIGNABLEREPOSITORYIDSFORCOMPOSITIONREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSIGNCOMPOSITIONTOREPOSITORYREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ASSIGNCOMPOSITIONTOREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UNASSIGNCOMPOSITIONFROMREPOSITORYREQUEST.fields_by_name['composition_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UNASSIGNCOMPOSITIONFROMREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORIESBYIDSREQUEST.fields_by_name['repository_ids'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORIESBYGENUSTYPEREQUEST.fields_by_name['repository_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETREPOSITORIESBYPARENTGENUSTYPEREQUEST.fields_by_name['repository_genus_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETREPOSITORIESBYRECORDTYPEREQUEST.fields_by_name['repository_record_type'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETREPOSITORIESBYPROVIDERREQUEST.fields_by_name['resource_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYQUERYREPLY.fields_by_name['repository_query'].message_type = _REPOSITORYQUERY
_GETREPOSITORIESBYQUERYREQUEST.fields_by_name['repository_query'].message_type = _REPOSITORYQUERY
_CANCREATEREPOSITORYWITHRECORDTYPESREQUEST.fields_by_name['repository_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_GETREPOSITORYFORMFORCREATEREPLY.fields_by_name['repository_form'].message_type = _REPOSITORYFORM
_GETREPOSITORYFORMFORCREATEREQUEST.fields_by_name['repository_record_types'].message_type = dlkit_dot_primordium_dot_type_dot_primitives__pb2._TYPE
_CREATEREPOSITORYREPLY.fields_by_name['repository'].message_type = _REPOSITORY
_CREATEREPOSITORYREQUEST.fields_by_name['repository_form'].message_type = _REPOSITORYFORM
_GETREPOSITORYFORMFORUPDATEREPLY.fields_by_name['repository_form'].message_type = _REPOSITORYFORM
_GETREPOSITORYFORMFORUPDATEREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_UPDATEREPOSITORYREQUEST.fields_by_name['repository_form'].message_type = _REPOSITORYFORM
_DELETEREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASREPOSITORYREQUEST.fields_by_name['alias_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ALIASREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYHIERARCHYIDREPLY.fields_by_name['id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYHIERARCHYREPLY.fields_by_name['hierarchy'].message_type = dlkit_dot_proto_dot_hierarchy__pb2._HIERARCHY
_HASPARENTREPOSITORIESREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISPARENTOFREPOSITORYREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISPARENTOFREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETPARENTREPOSITORYIDSREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETPARENTREPOSITORIESREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISANCESTOROFREPOSITORYREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISANCESTOROFREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_HASCHILDREPOSITORIESREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISCHILDOFREPOSITORYREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISCHILDOFREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCHILDREPOSITORYIDSREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETCHILDREPOSITORIESREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISDESCENDANTOFREPOSITORYREQUEST.fields_by_name['id_'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ISDESCENDANTOFREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYNODEIDSREPLY.fields_by_name['node'].message_type = dlkit_dot_proto_dot_hierarchy__pb2._NODE
_GETREPOSITORYNODEIDSREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_GETREPOSITORYNODESREPLY.fields_by_name['repository_node'].message_type = _REPOSITORYNODE
_GETREPOSITORYNODESREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDROOTREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVEROOTREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCHILDREPOSITORYREQUEST.fields_by_name['child_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_ADDCHILDREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDREPOSITORYREQUEST.fields_by_name['child_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDREPOSITORYREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
_REMOVECHILDREPOSITORIESREQUEST.fields_by_name['repository_id'].message_type = dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID
DESCRIPTOR.message_types_by_name['Asset'] = _ASSET
DESCRIPTOR.message_types_by_name['AssetQuery'] = _ASSETQUERY
DESCRIPTOR.message_types_by_name['AssetQueryInspector'] = _ASSETQUERYINSPECTOR
DESCRIPTOR.message_types_by_name['AssetForm'] = _ASSETFORM
DESCRIPTOR.message_types_by_name['AssetSearchOrder'] = _ASSETSEARCHORDER
DESCRIPTOR.message_types_by_name['AssetSearch'] = _ASSETSEARCH
DESCRIPTOR.message_types_by_name['AssetSearchResults'] = _ASSETSEARCHRESULTS
DESCRIPTOR.message_types_by_name['AssetList'] = _ASSETLIST
DESCRIPTOR.message_types_by_name['AssetContent'] = _ASSETCONTENT
DESCRIPTOR.message_types_by_name['AssetContentQuery'] = _ASSETCONTENTQUERY
DESCRIPTOR.message_types_by_name['AssetContentQueryInspector'] = _ASSETCONTENTQUERYINSPECTOR
DESCRIPTOR.message_types_by_name['AssetContentForm'] = _ASSETCONTENTFORM
DESCRIPTOR.message_types_by_name['AssetContentList'] = _ASSETCONTENTLIST
DESCRIPTOR.message_types_by_name['Composition'] = _COMPOSITION
DESCRIPTOR.message_types_by_name['CompositionQuery'] = _COMPOSITIONQUERY
DESCRIPTOR.message_types_by_name['CompositionQueryInspector'] = _COMPOSITIONQUERYINSPECTOR
DESCRIPTOR.message_types_by_name['CompositionForm'] = _COMPOSITIONFORM
DESCRIPTOR.message_types_by_name['CompositionSearchOrder'] = _COMPOSITIONSEARCHORDER
DESCRIPTOR.message_types_by_name['CompositionSearch'] = _COMPOSITIONSEARCH
DESCRIPTOR.message_types_by_name['CompositionSearchResults'] = _COMPOSITIONSEARCHRESULTS
DESCRIPTOR.message_types_by_name['CompositionList'] = _COMPOSITIONLIST
DESCRIPTOR.message_types_by_name['Repository'] = _REPOSITORY
DESCRIPTOR.message_types_by_name['RepositoryQuery'] = _REPOSITORYQUERY
DESCRIPTOR.message_types_by_name['RepositoryQueryInspector'] = _REPOSITORYQUERYINSPECTOR
DESCRIPTOR.message_types_by_name['RepositoryForm'] = _REPOSITORYFORM
DESCRIPTOR.message_types_by_name['RepositorySearchOrder'] = _REPOSITORYSEARCHORDER
DESCRIPTOR.message_types_by_name['RepositorySearch'] = _REPOSITORYSEARCH
DESCRIPTOR.message_types_by_name['RepositorySearchResults'] = _REPOSITORYSEARCHRESULTS
DESCRIPTOR.message_types_by_name['RepositoryList'] = _REPOSITORYLIST
DESCRIPTOR.message_types_by_name['RepositoryNode'] = _REPOSITORYNODE
DESCRIPTOR.message_types_by_name['RepositoryNodeList'] = _REPOSITORYNODELIST
DESCRIPTOR.message_types_by_name['GetRepositoryIdReply'] = _GETREPOSITORYIDREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryIdRequest'] = _GETREPOSITORYIDREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryReply'] = _GETREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryRequest'] = _GETREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['CanLookupAssetsReply'] = _CANLOOKUPASSETSREPLY
DESCRIPTOR.message_types_by_name['CanLookupAssetsRequest'] = _CANLOOKUPASSETSREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeAssetViewReply'] = _USECOMPARATIVEASSETVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeAssetViewRequest'] = _USECOMPARATIVEASSETVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryAssetViewReply'] = _USEPLENARYASSETVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryAssetViewRequest'] = _USEPLENARYASSETVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseFederatedRepositoryViewReply'] = _USEFEDERATEDREPOSITORYVIEWREPLY
DESCRIPTOR.message_types_by_name['UseFederatedRepositoryViewRequest'] = _USEFEDERATEDREPOSITORYVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseIsolatedRepositoryViewReply'] = _USEISOLATEDREPOSITORYVIEWREPLY
DESCRIPTOR.message_types_by_name['UseIsolatedRepositoryViewRequest'] = _USEISOLATEDREPOSITORYVIEWREQUEST
DESCRIPTOR.message_types_by_name['GetAssetReply'] = _GETASSETREPLY
DESCRIPTOR.message_types_by_name['GetAssetRequest'] = _GETASSETREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByIdsRequest'] = _GETASSETSBYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByGenusTypeRequest'] = _GETASSETSBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByParentGenusTypeRequest'] = _GETASSETSBYPARENTGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByRecordTypeRequest'] = _GETASSETSBYRECORDTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByProviderRequest'] = _GETASSETSBYPROVIDERREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsRequest'] = _GETASSETSREQUEST
DESCRIPTOR.message_types_by_name['CanSearchAssetsReply'] = _CANSEARCHASSETSREPLY
DESCRIPTOR.message_types_by_name['CanSearchAssetsRequest'] = _CANSEARCHASSETSREQUEST
DESCRIPTOR.message_types_by_name['GetAssetQueryReply'] = _GETASSETQUERYREPLY
DESCRIPTOR.message_types_by_name['GetAssetQueryRequest'] = _GETASSETQUERYREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByQueryRequest'] = _GETASSETSBYQUERYREQUEST
DESCRIPTOR.message_types_by_name['GetAssetSearchReply'] = _GETASSETSEARCHREPLY
DESCRIPTOR.message_types_by_name['GetAssetSearchRequest'] = _GETASSETSEARCHREQUEST
DESCRIPTOR.message_types_by_name['GetAssetSearchOrderReply'] = _GETASSETSEARCHORDERREPLY
DESCRIPTOR.message_types_by_name['GetAssetSearchOrderRequest'] = _GETASSETSEARCHORDERREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsBySearchReply'] = _GETASSETSBYSEARCHREPLY
DESCRIPTOR.message_types_by_name['GetAssetsBySearchRequest'] = _GETASSETSBYSEARCHREQUEST
DESCRIPTOR.message_types_by_name['GetAssetQueryFromInspectorReply'] = _GETASSETQUERYFROMINSPECTORREPLY
DESCRIPTOR.message_types_by_name['GetAssetQueryFromInspectorRequest'] = _GETASSETQUERYFROMINSPECTORREQUEST
DESCRIPTOR.message_types_by_name['CanCreateAssetsReply'] = _CANCREATEASSETSREPLY
DESCRIPTOR.message_types_by_name['CanCreateAssetsRequest'] = _CANCREATEASSETSREQUEST
DESCRIPTOR.message_types_by_name['CanCreateAssetWithRecordTypesReply'] = _CANCREATEASSETWITHRECORDTYPESREPLY
DESCRIPTOR.message_types_by_name['CanCreateAssetWithRecordTypesRequest'] = _CANCREATEASSETWITHRECORDTYPESREQUEST
DESCRIPTOR.message_types_by_name['GetAssetFormForCreateReply'] = _GETASSETFORMFORCREATEREPLY
DESCRIPTOR.message_types_by_name['GetAssetFormForCreateRequest'] = _GETASSETFORMFORCREATEREQUEST
DESCRIPTOR.message_types_by_name['CreateAssetReply'] = _CREATEASSETREPLY
DESCRIPTOR.message_types_by_name['CreateAssetRequest'] = _CREATEASSETREQUEST
DESCRIPTOR.message_types_by_name['CanUpdateAssetsReply'] = _CANUPDATEASSETSREPLY
DESCRIPTOR.message_types_by_name['CanUpdateAssetsRequest'] = _CANUPDATEASSETSREQUEST
DESCRIPTOR.message_types_by_name['GetAssetFormForUpdateReply'] = _GETASSETFORMFORUPDATEREPLY
DESCRIPTOR.message_types_by_name['GetAssetFormForUpdateRequest'] = _GETASSETFORMFORUPDATEREQUEST
DESCRIPTOR.message_types_by_name['UpdateAssetReply'] = _UPDATEASSETREPLY
DESCRIPTOR.message_types_by_name['UpdateAssetRequest'] = _UPDATEASSETREQUEST
DESCRIPTOR.message_types_by_name['CanDeleteAssetsReply'] = _CANDELETEASSETSREPLY
DESCRIPTOR.message_types_by_name['CanDeleteAssetsRequest'] = _CANDELETEASSETSREQUEST
DESCRIPTOR.message_types_by_name['DeleteAssetReply'] = _DELETEASSETREPLY
DESCRIPTOR.message_types_by_name['DeleteAssetRequest'] = _DELETEASSETREQUEST
DESCRIPTOR.message_types_by_name['CanManageAssetAliasesReply'] = _CANMANAGEASSETALIASESREPLY
DESCRIPTOR.message_types_by_name['CanManageAssetAliasesRequest'] = _CANMANAGEASSETALIASESREQUEST
DESCRIPTOR.message_types_by_name['AliasAssetReply'] = _ALIASASSETREPLY
DESCRIPTOR.message_types_by_name['AliasAssetRequest'] = _ALIASASSETREQUEST
DESCRIPTOR.message_types_by_name['CanCreateAssetContentReply'] = _CANCREATEASSETCONTENTREPLY
DESCRIPTOR.message_types_by_name['CanCreateAssetContentRequest'] = _CANCREATEASSETCONTENTREQUEST
DESCRIPTOR.message_types_by_name['CanCreateAssetContentWithRecordTypesReply'] = _CANCREATEASSETCONTENTWITHRECORDTYPESREPLY
DESCRIPTOR.message_types_by_name['CanCreateAssetContentWithRecordTypesRequest'] = _CANCREATEASSETCONTENTWITHRECORDTYPESREQUEST
DESCRIPTOR.message_types_by_name['GetAssetContentFormForCreateReply'] = _GETASSETCONTENTFORMFORCREATEREPLY
DESCRIPTOR.message_types_by_name['GetAssetContentFormForCreateRequest'] = _GETASSETCONTENTFORMFORCREATEREQUEST
DESCRIPTOR.message_types_by_name['CreateAssetContentReply'] = _CREATEASSETCONTENTREPLY
DESCRIPTOR.message_types_by_name['CreateAssetContentRequest'] = _CREATEASSETCONTENTREQUEST
DESCRIPTOR.message_types_by_name['CanUpdateAssetContentsReply'] = _CANUPDATEASSETCONTENTSREPLY
DESCRIPTOR.message_types_by_name['CanUpdateAssetContentsRequest'] = _CANUPDATEASSETCONTENTSREQUEST
DESCRIPTOR.message_types_by_name['GetAssetContentFormForUpdateReply'] = _GETASSETCONTENTFORMFORUPDATEREPLY
DESCRIPTOR.message_types_by_name['GetAssetContentFormForUpdateRequest'] = _GETASSETCONTENTFORMFORUPDATEREQUEST
DESCRIPTOR.message_types_by_name['UpdateAssetContentReply'] = _UPDATEASSETCONTENTREPLY
DESCRIPTOR.message_types_by_name['UpdateAssetContentRequest'] = _UPDATEASSETCONTENTREQUEST
DESCRIPTOR.message_types_by_name['CanDeleteAssetContentsReply'] = _CANDELETEASSETCONTENTSREPLY
DESCRIPTOR.message_types_by_name['CanDeleteAssetContentsRequest'] = _CANDELETEASSETCONTENTSREQUEST
DESCRIPTOR.message_types_by_name['DeleteAssetContentReply'] = _DELETEASSETCONTENTREPLY
DESCRIPTOR.message_types_by_name['DeleteAssetContentRequest'] = _DELETEASSETCONTENTREQUEST
DESCRIPTOR.message_types_by_name['CanRegisterForAssetNotificationsReply'] = _CANREGISTERFORASSETNOTIFICATIONSREPLY
DESCRIPTOR.message_types_by_name['CanRegisterForAssetNotificationsRequest'] = _CANREGISTERFORASSETNOTIFICATIONSREQUEST
DESCRIPTOR.message_types_by_name['RegisterForNewAssetsReply'] = _REGISTERFORNEWASSETSREPLY
DESCRIPTOR.message_types_by_name['RegisterForNewAssetsRequest'] = _REGISTERFORNEWASSETSREQUEST
DESCRIPTOR.message_types_by_name['RegisterForNewAssetsByGenusTypeReply'] = _REGISTERFORNEWASSETSBYGENUSTYPEREPLY
DESCRIPTOR.message_types_by_name['RegisterForNewAssetsByGenusTypeRequest'] = _REGISTERFORNEWASSETSBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['RegisterForChangedAssetsReply'] = _REGISTERFORCHANGEDASSETSREPLY
DESCRIPTOR.message_types_by_name['RegisterForChangedAssetsRequest'] = _REGISTERFORCHANGEDASSETSREQUEST
DESCRIPTOR.message_types_by_name['RegisterForChangedAssetsByGenusTypeReply'] = _REGISTERFORCHANGEDASSETSBYGENUSTYPEREPLY
DESCRIPTOR.message_types_by_name['RegisterForChangedAssetsByGenusTypeRequest'] = _REGISTERFORCHANGEDASSETSBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['RegisterForChangedAssetReply'] = _REGISTERFORCHANGEDASSETREPLY
DESCRIPTOR.message_types_by_name['RegisterForChangedAssetRequest'] = _REGISTERFORCHANGEDASSETREQUEST
DESCRIPTOR.message_types_by_name['RegisterForDeletedAssetsReply'] = _REGISTERFORDELETEDASSETSREPLY
DESCRIPTOR.message_types_by_name['RegisterForDeletedAssetsRequest'] = _REGISTERFORDELETEDASSETSREQUEST
DESCRIPTOR.message_types_by_name['RegisterForDeletedAssetsByGenusTypeReply'] = _REGISTERFORDELETEDASSETSBYGENUSTYPEREPLY
DESCRIPTOR.message_types_by_name['RegisterForDeletedAssetsByGenusTypeRequest'] = _REGISTERFORDELETEDASSETSBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['RegisterForDeletedAssetReply'] = _REGISTERFORDELETEDASSETREPLY
DESCRIPTOR.message_types_by_name['RegisterForDeletedAssetRequest'] = _REGISTERFORDELETEDASSETREQUEST
DESCRIPTOR.message_types_by_name['ReliableAssetNotificationsReply'] = _RELIABLEASSETNOTIFICATIONSREPLY
DESCRIPTOR.message_types_by_name['ReliableAssetNotificationsRequest'] = _RELIABLEASSETNOTIFICATIONSREQUEST
DESCRIPTOR.message_types_by_name['UnreliableAssetNotificationsReply'] = _UNRELIABLEASSETNOTIFICATIONSREPLY
DESCRIPTOR.message_types_by_name['UnreliableAssetNotificationsRequest'] = _UNRELIABLEASSETNOTIFICATIONSREQUEST
DESCRIPTOR.message_types_by_name['AcknowledgeAssetNotificationReply'] = _ACKNOWLEDGEASSETNOTIFICATIONREPLY
DESCRIPTOR.message_types_by_name['AcknowledgeAssetNotificationRequest'] = _ACKNOWLEDGEASSETNOTIFICATIONREQUEST
DESCRIPTOR.message_types_by_name['CanLookupAssetRepositoryMappingsReply'] = _CANLOOKUPASSETREPOSITORYMAPPINGSREPLY
DESCRIPTOR.message_types_by_name['CanLookupAssetRepositoryMappingsRequest'] = _CANLOOKUPASSETREPOSITORYMAPPINGSREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeRepositoryViewReply'] = _USECOMPARATIVEREPOSITORYVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeRepositoryViewRequest'] = _USECOMPARATIVEREPOSITORYVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryRepositoryViewReply'] = _USEPLENARYREPOSITORYVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryRepositoryViewRequest'] = _USEPLENARYREPOSITORYVIEWREQUEST
DESCRIPTOR.message_types_by_name['GetAssetIdsByRepositoryRequest'] = _GETASSETIDSBYREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByRepositoryRequest'] = _GETASSETSBYREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetAssetIdsByRepositoriesRequest'] = _GETASSETIDSBYREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetAssetsByRepositoriesRequest'] = _GETASSETSBYREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryIdsByAssetRequest'] = _GETREPOSITORYIDSBYASSETREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByAssetRequest'] = _GETREPOSITORIESBYASSETREQUEST
DESCRIPTOR.message_types_by_name['CanAssignAssetsReply'] = _CANASSIGNASSETSREPLY
DESCRIPTOR.message_types_by_name['CanAssignAssetsRequest'] = _CANASSIGNASSETSREQUEST
DESCRIPTOR.message_types_by_name['CanAssignAssetsToRepositoryReply'] = _CANASSIGNASSETSTOREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['CanAssignAssetsToRepositoryRequest'] = _CANASSIGNASSETSTOREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetAssignableRepositoryIdsRequest'] = _GETASSIGNABLEREPOSITORYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetAssignableRepositoryIdsForAssetRequest'] = _GETASSIGNABLEREPOSITORYIDSFORASSETREQUEST
DESCRIPTOR.message_types_by_name['AssignAssetToRepositoryReply'] = _ASSIGNASSETTOREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['AssignAssetToRepositoryRequest'] = _ASSIGNASSETTOREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['UnassignAssetFromRepositoryReply'] = _UNASSIGNASSETFROMREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['UnassignAssetFromRepositoryRequest'] = _UNASSIGNASSETFROMREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['CanAccessAssetCompositionsReply'] = _CANACCESSASSETCOMPOSITIONSREPLY
DESCRIPTOR.message_types_by_name['CanAccessAssetCompositionsRequest'] = _CANACCESSASSETCOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeAssetCompositionViewReply'] = _USECOMPARATIVEASSETCOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeAssetCompositionViewRequest'] = _USECOMPARATIVEASSETCOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryAssetCompositionViewReply'] = _USEPLENARYASSETCOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryAssetCompositionViewRequest'] = _USEPLENARYASSETCOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionAssetsRequest'] = _GETCOMPOSITIONASSETSREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByAssetRequest'] = _GETCOMPOSITIONSBYASSETREQUEST
DESCRIPTOR.message_types_by_name['CanComposeAssetsReply'] = _CANCOMPOSEASSETSREPLY
DESCRIPTOR.message_types_by_name['CanComposeAssetsRequest'] = _CANCOMPOSEASSETSREQUEST
DESCRIPTOR.message_types_by_name['AddAssetReply'] = _ADDASSETREPLY
DESCRIPTOR.message_types_by_name['AddAssetRequest'] = _ADDASSETREQUEST
DESCRIPTOR.message_types_by_name['MoveAssetAheadReply'] = _MOVEASSETAHEADREPLY
DESCRIPTOR.message_types_by_name['MoveAssetAheadRequest'] = _MOVEASSETAHEADREQUEST
DESCRIPTOR.message_types_by_name['MoveAssetBehindReply'] = _MOVEASSETBEHINDREPLY
DESCRIPTOR.message_types_by_name['MoveAssetBehindRequest'] = _MOVEASSETBEHINDREQUEST
DESCRIPTOR.message_types_by_name['OrderAssetsReply'] = _ORDERASSETSREPLY
DESCRIPTOR.message_types_by_name['OrderAssetsRequest'] = _ORDERASSETSREQUEST
DESCRIPTOR.message_types_by_name['RemoveAssetReply'] = _REMOVEASSETREPLY
DESCRIPTOR.message_types_by_name['RemoveAssetRequest'] = _REMOVEASSETREQUEST
DESCRIPTOR.message_types_by_name['CanLookupCompositionsReply'] = _CANLOOKUPCOMPOSITIONSREPLY
DESCRIPTOR.message_types_by_name['CanLookupCompositionsRequest'] = _CANLOOKUPCOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeCompositionViewReply'] = _USECOMPARATIVECOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeCompositionViewRequest'] = _USECOMPARATIVECOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryCompositionViewReply'] = _USEPLENARYCOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryCompositionViewRequest'] = _USEPLENARYCOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseActiveCompositionViewReply'] = _USEACTIVECOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UseActiveCompositionViewRequest'] = _USEACTIVECOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseAnyStatusCompositionViewReply'] = _USEANYSTATUSCOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UseAnyStatusCompositionViewRequest'] = _USEANYSTATUSCOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseSequesteredCompositionViewReply'] = _USESEQUESTEREDCOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UseSequesteredCompositionViewRequest'] = _USESEQUESTEREDCOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['UseUnsequesteredCompositionViewReply'] = _USEUNSEQUESTEREDCOMPOSITIONVIEWREPLY
DESCRIPTOR.message_types_by_name['UseUnsequesteredCompositionViewRequest'] = _USEUNSEQUESTEREDCOMPOSITIONVIEWREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionReply'] = _GETCOMPOSITIONREPLY
DESCRIPTOR.message_types_by_name['GetCompositionRequest'] = _GETCOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByIdsRequest'] = _GETCOMPOSITIONSBYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByGenusTypeRequest'] = _GETCOMPOSITIONSBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByParentGenusTypeRequest'] = _GETCOMPOSITIONSBYPARENTGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByRecordTypeRequest'] = _GETCOMPOSITIONSBYRECORDTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByProviderRequest'] = _GETCOMPOSITIONSBYPROVIDERREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsRequest'] = _GETCOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['CanSearchCompositionsReply'] = _CANSEARCHCOMPOSITIONSREPLY
DESCRIPTOR.message_types_by_name['CanSearchCompositionsRequest'] = _CANSEARCHCOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionQueryReply'] = _GETCOMPOSITIONQUERYREPLY
DESCRIPTOR.message_types_by_name['GetCompositionQueryRequest'] = _GETCOMPOSITIONQUERYREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByQueryRequest'] = _GETCOMPOSITIONSBYQUERYREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionSearchReply'] = _GETCOMPOSITIONSEARCHREPLY
DESCRIPTOR.message_types_by_name['GetCompositionSearchRequest'] = _GETCOMPOSITIONSEARCHREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionSearchOrderReply'] = _GETCOMPOSITIONSEARCHORDERREPLY
DESCRIPTOR.message_types_by_name['GetCompositionSearchOrderRequest'] = _GETCOMPOSITIONSEARCHORDERREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsBySearchReply'] = _GETCOMPOSITIONSBYSEARCHREPLY
DESCRIPTOR.message_types_by_name['GetCompositionsBySearchRequest'] = _GETCOMPOSITIONSBYSEARCHREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionQueryFromInspectorReply'] = _GETCOMPOSITIONQUERYFROMINSPECTORREPLY
DESCRIPTOR.message_types_by_name['GetCompositionQueryFromInspectorRequest'] = _GETCOMPOSITIONQUERYFROMINSPECTORREQUEST
DESCRIPTOR.message_types_by_name['CanCreateCompositionsReply'] = _CANCREATECOMPOSITIONSREPLY
DESCRIPTOR.message_types_by_name['CanCreateCompositionsRequest'] = _CANCREATECOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['CanCreateCompositionWithRecordTypesReply'] = _CANCREATECOMPOSITIONWITHRECORDTYPESREPLY
DESCRIPTOR.message_types_by_name['CanCreateCompositionWithRecordTypesRequest'] = _CANCREATECOMPOSITIONWITHRECORDTYPESREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionFormForCreateReply'] = _GETCOMPOSITIONFORMFORCREATEREPLY
DESCRIPTOR.message_types_by_name['GetCompositionFormForCreateRequest'] = _GETCOMPOSITIONFORMFORCREATEREQUEST
DESCRIPTOR.message_types_by_name['CreateCompositionReply'] = _CREATECOMPOSITIONREPLY
DESCRIPTOR.message_types_by_name['CreateCompositionRequest'] = _CREATECOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['CanUpdateCompositionsReply'] = _CANUPDATECOMPOSITIONSREPLY
DESCRIPTOR.message_types_by_name['CanUpdateCompositionsRequest'] = _CANUPDATECOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionFormForUpdateReply'] = _GETCOMPOSITIONFORMFORUPDATEREPLY
DESCRIPTOR.message_types_by_name['GetCompositionFormForUpdateRequest'] = _GETCOMPOSITIONFORMFORUPDATEREQUEST
DESCRIPTOR.message_types_by_name['UpdateCompositionReply'] = _UPDATECOMPOSITIONREPLY
DESCRIPTOR.message_types_by_name['UpdateCompositionRequest'] = _UPDATECOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['CanDeleteCompositionsReply'] = _CANDELETECOMPOSITIONSREPLY
DESCRIPTOR.message_types_by_name['CanDeleteCompositionsRequest'] = _CANDELETECOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['DeleteCompositionReply'] = _DELETECOMPOSITIONREPLY
DESCRIPTOR.message_types_by_name['DeleteCompositionRequest'] = _DELETECOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['DeleteCompositionNodeReply'] = _DELETECOMPOSITIONNODEREPLY
DESCRIPTOR.message_types_by_name['DeleteCompositionNodeRequest'] = _DELETECOMPOSITIONNODEREQUEST
DESCRIPTOR.message_types_by_name['AddCompositionChildReply'] = _ADDCOMPOSITIONCHILDREPLY
DESCRIPTOR.message_types_by_name['AddCompositionChildRequest'] = _ADDCOMPOSITIONCHILDREQUEST
DESCRIPTOR.message_types_by_name['RemoveCompositionChildReply'] = _REMOVECOMPOSITIONCHILDREPLY
DESCRIPTOR.message_types_by_name['RemoveCompositionChildRequest'] = _REMOVECOMPOSITIONCHILDREQUEST
DESCRIPTOR.message_types_by_name['CanManageCompositionAliasesReply'] = _CANMANAGECOMPOSITIONALIASESREPLY
DESCRIPTOR.message_types_by_name['CanManageCompositionAliasesRequest'] = _CANMANAGECOMPOSITIONALIASESREQUEST
DESCRIPTOR.message_types_by_name['AliasCompositionReply'] = _ALIASCOMPOSITIONREPLY
DESCRIPTOR.message_types_by_name['AliasCompositionRequest'] = _ALIASCOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['UseComparativeCompositionRepositoryViewReply'] = _USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREPLY
DESCRIPTOR.message_types_by_name['UseComparativeCompositionRepositoryViewRequest'] = _USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREQUEST
DESCRIPTOR.message_types_by_name['UsePlenaryCompositionRepositoryViewReply'] = _USEPLENARYCOMPOSITIONREPOSITORYVIEWREPLY
DESCRIPTOR.message_types_by_name['UsePlenaryCompositionRepositoryViewRequest'] = _USEPLENARYCOMPOSITIONREPOSITORYVIEWREQUEST
DESCRIPTOR.message_types_by_name['CanLookupCompositionRepositoryMappingsReply'] = _CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREPLY
DESCRIPTOR.message_types_by_name['CanLookupCompositionRepositoryMappingsRequest'] = _CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionIdsByRepositoryRequest'] = _GETCOMPOSITIONIDSBYREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByRepositoryRequest'] = _GETCOMPOSITIONSBYREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionIdsByRepositoriesRequest'] = _GETCOMPOSITIONIDSBYREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetCompositionsByRepositoriesRequest'] = _GETCOMPOSITIONSBYREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryIdsByCompositionRequest'] = _GETREPOSITORYIDSBYCOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByCompositionRequest'] = _GETREPOSITORIESBYCOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['CanAssignCompositionsReply'] = _CANASSIGNCOMPOSITIONSREPLY
DESCRIPTOR.message_types_by_name['CanAssignCompositionsRequest'] = _CANASSIGNCOMPOSITIONSREQUEST
DESCRIPTOR.message_types_by_name['CanAssignCompositionsToRepositoryReply'] = _CANASSIGNCOMPOSITIONSTOREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['CanAssignCompositionsToRepositoryRequest'] = _CANASSIGNCOMPOSITIONSTOREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetAssignableRepositoryIdsForCompositionRequest'] = _GETASSIGNABLEREPOSITORYIDSFORCOMPOSITIONREQUEST
DESCRIPTOR.message_types_by_name['AssignCompositionToRepositoryReply'] = _ASSIGNCOMPOSITIONTOREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['AssignCompositionToRepositoryRequest'] = _ASSIGNCOMPOSITIONTOREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['UnassignCompositionFromRepositoryReply'] = _UNASSIGNCOMPOSITIONFROMREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['UnassignCompositionFromRepositoryRequest'] = _UNASSIGNCOMPOSITIONFROMREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['CanLookupRepositoriesReply'] = _CANLOOKUPREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['CanLookupRepositoriesRequest'] = _CANLOOKUPREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByIdsRequest'] = _GETREPOSITORIESBYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByGenusTypeRequest'] = _GETREPOSITORIESBYGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByParentGenusTypeRequest'] = _GETREPOSITORIESBYPARENTGENUSTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByRecordTypeRequest'] = _GETREPOSITORIESBYRECORDTYPEREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByProviderRequest'] = _GETREPOSITORIESBYPROVIDERREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesRequest'] = _GETREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['CanSearchRepositoriesReply'] = _CANSEARCHREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['CanSearchRepositoriesRequest'] = _CANSEARCHREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryQueryReply'] = _GETREPOSITORYQUERYREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryQueryRequest'] = _GETREPOSITORYQUERYREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoriesByQueryRequest'] = _GETREPOSITORIESBYQUERYREQUEST
DESCRIPTOR.message_types_by_name['CanCreateRepositoriesReply'] = _CANCREATEREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['CanCreateRepositoriesRequest'] = _CANCREATEREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['CanCreateRepositoryWithRecordTypesReply'] = _CANCREATEREPOSITORYWITHRECORDTYPESREPLY
DESCRIPTOR.message_types_by_name['CanCreateRepositoryWithRecordTypesRequest'] = _CANCREATEREPOSITORYWITHRECORDTYPESREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryFormForCreateReply'] = _GETREPOSITORYFORMFORCREATEREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryFormForCreateRequest'] = _GETREPOSITORYFORMFORCREATEREQUEST
DESCRIPTOR.message_types_by_name['CreateRepositoryReply'] = _CREATEREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['CreateRepositoryRequest'] = _CREATEREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['CanUpdateRepositoriesReply'] = _CANUPDATEREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['CanUpdateRepositoriesRequest'] = _CANUPDATEREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryFormForUpdateReply'] = _GETREPOSITORYFORMFORUPDATEREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryFormForUpdateRequest'] = _GETREPOSITORYFORMFORUPDATEREQUEST
DESCRIPTOR.message_types_by_name['UpdateRepositoryReply'] = _UPDATEREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['UpdateRepositoryRequest'] = _UPDATEREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['CanDeleteRepositoriesReply'] = _CANDELETEREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['CanDeleteRepositoriesRequest'] = _CANDELETEREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['DeleteRepositoryReply'] = _DELETEREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['DeleteRepositoryRequest'] = _DELETEREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['CanManageRepositoryAliasesReply'] = _CANMANAGEREPOSITORYALIASESREPLY
DESCRIPTOR.message_types_by_name['CanManageRepositoryAliasesRequest'] = _CANMANAGEREPOSITORYALIASESREQUEST
DESCRIPTOR.message_types_by_name['AliasRepositoryReply'] = _ALIASREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['AliasRepositoryRequest'] = _ALIASREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryHierarchyIdReply'] = _GETREPOSITORYHIERARCHYIDREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryHierarchyIdRequest'] = _GETREPOSITORYHIERARCHYIDREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryHierarchyReply'] = _GETREPOSITORYHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryHierarchyRequest'] = _GETREPOSITORYHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['CanAccessRepositoryHierarchyReply'] = _CANACCESSREPOSITORYHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['CanAccessRepositoryHierarchyRequest'] = _CANACCESSREPOSITORYHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['GetRootRepositoryIdsRequest'] = _GETROOTREPOSITORYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetRootRepositoriesRequest'] = _GETROOTREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['HasParentRepositoriesReply'] = _HASPARENTREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['HasParentRepositoriesRequest'] = _HASPARENTREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['IsParentOfRepositoryReply'] = _ISPARENTOFREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['IsParentOfRepositoryRequest'] = _ISPARENTOFREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetParentRepositoryIdsRequest'] = _GETPARENTREPOSITORYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetParentRepositoriesRequest'] = _GETPARENTREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['IsAncestorOfRepositoryReply'] = _ISANCESTOROFREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['IsAncestorOfRepositoryRequest'] = _ISANCESTOROFREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['HasChildRepositoriesReply'] = _HASCHILDREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['HasChildRepositoriesRequest'] = _HASCHILDREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['IsChildOfRepositoryReply'] = _ISCHILDOFREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['IsChildOfRepositoryRequest'] = _ISCHILDOFREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetChildRepositoryIdsRequest'] = _GETCHILDREPOSITORYIDSREQUEST
DESCRIPTOR.message_types_by_name['GetChildRepositoriesRequest'] = _GETCHILDREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['IsDescendantOfRepositoryReply'] = _ISDESCENDANTOFREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['IsDescendantOfRepositoryRequest'] = _ISDESCENDANTOFREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryNodeIdsReply'] = _GETREPOSITORYNODEIDSREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryNodeIdsRequest'] = _GETREPOSITORYNODEIDSREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryNodesReply'] = _GETREPOSITORYNODESREPLY
DESCRIPTOR.message_types_by_name['GetRepositoryNodesRequest'] = _GETREPOSITORYNODESREQUEST
DESCRIPTOR.message_types_by_name['CanModifyRepositoryHierarchyReply'] = _CANMODIFYREPOSITORYHIERARCHYREPLY
DESCRIPTOR.message_types_by_name['CanModifyRepositoryHierarchyRequest'] = _CANMODIFYREPOSITORYHIERARCHYREQUEST
DESCRIPTOR.message_types_by_name['AddRootRepositoryReply'] = _ADDROOTREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['AddRootRepositoryRequest'] = _ADDROOTREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['RemoveRootRepositoryReply'] = _REMOVEROOTREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['RemoveRootRepositoryRequest'] = _REMOVEROOTREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['AddChildRepositoryReply'] = _ADDCHILDREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['AddChildRepositoryRequest'] = _ADDCHILDREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['RemoveChildRepositoryReply'] = _REMOVECHILDREPOSITORYREPLY
DESCRIPTOR.message_types_by_name['RemoveChildRepositoryRequest'] = _REMOVECHILDREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['RemoveChildRepositoriesReply'] = _REMOVECHILDREPOSITORIESREPLY
DESCRIPTOR.message_types_by_name['RemoveChildRepositoriesRequest'] = _REMOVECHILDREPOSITORIESREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Asset = _reflection.GeneratedProtocolMessageType('Asset', (_message.Message,), dict(
  DESCRIPTOR = _ASSET,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.Asset)
  ))
_sym_db.RegisterMessage(Asset)

AssetQuery = _reflection.GeneratedProtocolMessageType('AssetQuery', (_message.Message,), dict(
  DESCRIPTOR = _ASSETQUERY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetQuery)
  ))
_sym_db.RegisterMessage(AssetQuery)

AssetQueryInspector = _reflection.GeneratedProtocolMessageType('AssetQueryInspector', (_message.Message,), dict(
  DESCRIPTOR = _ASSETQUERYINSPECTOR,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetQueryInspector)
  ))
_sym_db.RegisterMessage(AssetQueryInspector)

AssetForm = _reflection.GeneratedProtocolMessageType('AssetForm', (_message.Message,), dict(
  DESCRIPTOR = _ASSETFORM,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetForm)
  ))
_sym_db.RegisterMessage(AssetForm)

AssetSearchOrder = _reflection.GeneratedProtocolMessageType('AssetSearchOrder', (_message.Message,), dict(
  DESCRIPTOR = _ASSETSEARCHORDER,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetSearchOrder)
  ))
_sym_db.RegisterMessage(AssetSearchOrder)

AssetSearch = _reflection.GeneratedProtocolMessageType('AssetSearch', (_message.Message,), dict(
  DESCRIPTOR = _ASSETSEARCH,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetSearch)
  ))
_sym_db.RegisterMessage(AssetSearch)

AssetSearchResults = _reflection.GeneratedProtocolMessageType('AssetSearchResults', (_message.Message,), dict(
  DESCRIPTOR = _ASSETSEARCHRESULTS,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetSearchResults)
  ))
_sym_db.RegisterMessage(AssetSearchResults)

AssetList = _reflection.GeneratedProtocolMessageType('AssetList', (_message.Message,), dict(
  DESCRIPTOR = _ASSETLIST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetList)
  ))
_sym_db.RegisterMessage(AssetList)

AssetContent = _reflection.GeneratedProtocolMessageType('AssetContent', (_message.Message,), dict(
  DESCRIPTOR = _ASSETCONTENT,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetContent)
  ))
_sym_db.RegisterMessage(AssetContent)

AssetContentQuery = _reflection.GeneratedProtocolMessageType('AssetContentQuery', (_message.Message,), dict(
  DESCRIPTOR = _ASSETCONTENTQUERY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetContentQuery)
  ))
_sym_db.RegisterMessage(AssetContentQuery)

AssetContentQueryInspector = _reflection.GeneratedProtocolMessageType('AssetContentQueryInspector', (_message.Message,), dict(
  DESCRIPTOR = _ASSETCONTENTQUERYINSPECTOR,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetContentQueryInspector)
  ))
_sym_db.RegisterMessage(AssetContentQueryInspector)

AssetContentForm = _reflection.GeneratedProtocolMessageType('AssetContentForm', (_message.Message,), dict(
  DESCRIPTOR = _ASSETCONTENTFORM,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetContentForm)
  ))
_sym_db.RegisterMessage(AssetContentForm)

AssetContentList = _reflection.GeneratedProtocolMessageType('AssetContentList', (_message.Message,), dict(
  DESCRIPTOR = _ASSETCONTENTLIST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssetContentList)
  ))
_sym_db.RegisterMessage(AssetContentList)

Composition = _reflection.GeneratedProtocolMessageType('Composition', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITION,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.Composition)
  ))
_sym_db.RegisterMessage(Composition)

CompositionQuery = _reflection.GeneratedProtocolMessageType('CompositionQuery', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITIONQUERY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CompositionQuery)
  ))
_sym_db.RegisterMessage(CompositionQuery)

CompositionQueryInspector = _reflection.GeneratedProtocolMessageType('CompositionQueryInspector', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITIONQUERYINSPECTOR,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CompositionQueryInspector)
  ))
_sym_db.RegisterMessage(CompositionQueryInspector)

CompositionForm = _reflection.GeneratedProtocolMessageType('CompositionForm', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITIONFORM,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CompositionForm)
  ))
_sym_db.RegisterMessage(CompositionForm)

CompositionSearchOrder = _reflection.GeneratedProtocolMessageType('CompositionSearchOrder', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITIONSEARCHORDER,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CompositionSearchOrder)
  ))
_sym_db.RegisterMessage(CompositionSearchOrder)

CompositionSearch = _reflection.GeneratedProtocolMessageType('CompositionSearch', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITIONSEARCH,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CompositionSearch)
  ))
_sym_db.RegisterMessage(CompositionSearch)

CompositionSearchResults = _reflection.GeneratedProtocolMessageType('CompositionSearchResults', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITIONSEARCHRESULTS,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CompositionSearchResults)
  ))
_sym_db.RegisterMessage(CompositionSearchResults)

CompositionList = _reflection.GeneratedProtocolMessageType('CompositionList', (_message.Message,), dict(
  DESCRIPTOR = _COMPOSITIONLIST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CompositionList)
  ))
_sym_db.RegisterMessage(CompositionList)

Repository = _reflection.GeneratedProtocolMessageType('Repository', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.Repository)
  ))
_sym_db.RegisterMessage(Repository)

RepositoryQuery = _reflection.GeneratedProtocolMessageType('RepositoryQuery', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYQUERY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositoryQuery)
  ))
_sym_db.RegisterMessage(RepositoryQuery)

RepositoryQueryInspector = _reflection.GeneratedProtocolMessageType('RepositoryQueryInspector', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYQUERYINSPECTOR,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositoryQueryInspector)
  ))
_sym_db.RegisterMessage(RepositoryQueryInspector)

RepositoryForm = _reflection.GeneratedProtocolMessageType('RepositoryForm', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYFORM,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositoryForm)
  ))
_sym_db.RegisterMessage(RepositoryForm)

RepositorySearchOrder = _reflection.GeneratedProtocolMessageType('RepositorySearchOrder', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYSEARCHORDER,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositorySearchOrder)
  ))
_sym_db.RegisterMessage(RepositorySearchOrder)

RepositorySearch = _reflection.GeneratedProtocolMessageType('RepositorySearch', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYSEARCH,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositorySearch)
  ))
_sym_db.RegisterMessage(RepositorySearch)

RepositorySearchResults = _reflection.GeneratedProtocolMessageType('RepositorySearchResults', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYSEARCHRESULTS,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositorySearchResults)
  ))
_sym_db.RegisterMessage(RepositorySearchResults)

RepositoryList = _reflection.GeneratedProtocolMessageType('RepositoryList', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYLIST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositoryList)
  ))
_sym_db.RegisterMessage(RepositoryList)

RepositoryNode = _reflection.GeneratedProtocolMessageType('RepositoryNode', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYNODE,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositoryNode)
  ))
_sym_db.RegisterMessage(RepositoryNode)

RepositoryNodeList = _reflection.GeneratedProtocolMessageType('RepositoryNodeList', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYNODELIST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RepositoryNodeList)
  ))
_sym_db.RegisterMessage(RepositoryNodeList)

GetRepositoryIdReply = _reflection.GeneratedProtocolMessageType('GetRepositoryIdReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYIDREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryIdReply)
  ))
_sym_db.RegisterMessage(GetRepositoryIdReply)

GetRepositoryIdRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYIDREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryIdRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryIdRequest)

GetRepositoryReply = _reflection.GeneratedProtocolMessageType('GetRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryReply)
  ))
_sym_db.RegisterMessage(GetRepositoryReply)

GetRepositoryRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryRequest)

CanLookupAssetsReply = _reflection.GeneratedProtocolMessageType('CanLookupAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupAssetsReply)
  ))
_sym_db.RegisterMessage(CanLookupAssetsReply)

CanLookupAssetsRequest = _reflection.GeneratedProtocolMessageType('CanLookupAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupAssetsRequest)
  ))
_sym_db.RegisterMessage(CanLookupAssetsRequest)

UseComparativeAssetViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeAssetViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVEASSETVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeAssetViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeAssetViewReply)

UseComparativeAssetViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeAssetViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVEASSETVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeAssetViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeAssetViewRequest)

UsePlenaryAssetViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryAssetViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYASSETVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryAssetViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryAssetViewReply)

UsePlenaryAssetViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryAssetViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYASSETVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryAssetViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryAssetViewRequest)

UseFederatedRepositoryViewReply = _reflection.GeneratedProtocolMessageType('UseFederatedRepositoryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEFEDERATEDREPOSITORYVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseFederatedRepositoryViewReply)
  ))
_sym_db.RegisterMessage(UseFederatedRepositoryViewReply)

UseFederatedRepositoryViewRequest = _reflection.GeneratedProtocolMessageType('UseFederatedRepositoryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEFEDERATEDREPOSITORYVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseFederatedRepositoryViewRequest)
  ))
_sym_db.RegisterMessage(UseFederatedRepositoryViewRequest)

UseIsolatedRepositoryViewReply = _reflection.GeneratedProtocolMessageType('UseIsolatedRepositoryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEISOLATEDREPOSITORYVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseIsolatedRepositoryViewReply)
  ))
_sym_db.RegisterMessage(UseIsolatedRepositoryViewReply)

UseIsolatedRepositoryViewRequest = _reflection.GeneratedProtocolMessageType('UseIsolatedRepositoryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEISOLATEDREPOSITORYVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseIsolatedRepositoryViewRequest)
  ))
_sym_db.RegisterMessage(UseIsolatedRepositoryViewRequest)

GetAssetReply = _reflection.GeneratedProtocolMessageType('GetAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetReply)
  ))
_sym_db.RegisterMessage(GetAssetReply)

GetAssetRequest = _reflection.GeneratedProtocolMessageType('GetAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetRequest)
  ))
_sym_db.RegisterMessage(GetAssetRequest)

GetAssetsByIdsRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByIdsRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByIdsRequest)

GetAssetsByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByGenusTypeRequest)

GetAssetsByParentGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByParentGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYPARENTGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByParentGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByParentGenusTypeRequest)

GetAssetsByRecordTypeRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByRecordTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYRECORDTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByRecordTypeRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByRecordTypeRequest)

GetAssetsByProviderRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByProviderRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYPROVIDERREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByProviderRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByProviderRequest)

GetAssetsRequest = _reflection.GeneratedProtocolMessageType('GetAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsRequest)
  ))
_sym_db.RegisterMessage(GetAssetsRequest)

CanSearchAssetsReply = _reflection.GeneratedProtocolMessageType('CanSearchAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanSearchAssetsReply)
  ))
_sym_db.RegisterMessage(CanSearchAssetsReply)

CanSearchAssetsRequest = _reflection.GeneratedProtocolMessageType('CanSearchAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanSearchAssetsRequest)
  ))
_sym_db.RegisterMessage(CanSearchAssetsRequest)

GetAssetQueryReply = _reflection.GeneratedProtocolMessageType('GetAssetQueryReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETQUERYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetQueryReply)
  ))
_sym_db.RegisterMessage(GetAssetQueryReply)

GetAssetQueryRequest = _reflection.GeneratedProtocolMessageType('GetAssetQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETQUERYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetQueryRequest)
  ))
_sym_db.RegisterMessage(GetAssetQueryRequest)

GetAssetsByQueryRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYQUERYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByQueryRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByQueryRequest)

GetAssetSearchReply = _reflection.GeneratedProtocolMessageType('GetAssetSearchReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSEARCHREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetSearchReply)
  ))
_sym_db.RegisterMessage(GetAssetSearchReply)

GetAssetSearchRequest = _reflection.GeneratedProtocolMessageType('GetAssetSearchRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSEARCHREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetSearchRequest)
  ))
_sym_db.RegisterMessage(GetAssetSearchRequest)

GetAssetSearchOrderReply = _reflection.GeneratedProtocolMessageType('GetAssetSearchOrderReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSEARCHORDERREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetSearchOrderReply)
  ))
_sym_db.RegisterMessage(GetAssetSearchOrderReply)

GetAssetSearchOrderRequest = _reflection.GeneratedProtocolMessageType('GetAssetSearchOrderRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSEARCHORDERREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetSearchOrderRequest)
  ))
_sym_db.RegisterMessage(GetAssetSearchOrderRequest)

GetAssetsBySearchReply = _reflection.GeneratedProtocolMessageType('GetAssetsBySearchReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYSEARCHREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsBySearchReply)
  ))
_sym_db.RegisterMessage(GetAssetsBySearchReply)

GetAssetsBySearchRequest = _reflection.GeneratedProtocolMessageType('GetAssetsBySearchRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYSEARCHREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsBySearchRequest)
  ))
_sym_db.RegisterMessage(GetAssetsBySearchRequest)

GetAssetQueryFromInspectorReply = _reflection.GeneratedProtocolMessageType('GetAssetQueryFromInspectorReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETQUERYFROMINSPECTORREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetQueryFromInspectorReply)
  ))
_sym_db.RegisterMessage(GetAssetQueryFromInspectorReply)

GetAssetQueryFromInspectorRequest = _reflection.GeneratedProtocolMessageType('GetAssetQueryFromInspectorRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETQUERYFROMINSPECTORREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetQueryFromInspectorRequest)
  ))
_sym_db.RegisterMessage(GetAssetQueryFromInspectorRequest)

CanCreateAssetsReply = _reflection.GeneratedProtocolMessageType('CanCreateAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetsReply)
  ))
_sym_db.RegisterMessage(CanCreateAssetsReply)

CanCreateAssetsRequest = _reflection.GeneratedProtocolMessageType('CanCreateAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetsRequest)
  ))
_sym_db.RegisterMessage(CanCreateAssetsRequest)

CanCreateAssetWithRecordTypesReply = _reflection.GeneratedProtocolMessageType('CanCreateAssetWithRecordTypesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETWITHRECORDTYPESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetWithRecordTypesReply)
  ))
_sym_db.RegisterMessage(CanCreateAssetWithRecordTypesReply)

CanCreateAssetWithRecordTypesRequest = _reflection.GeneratedProtocolMessageType('CanCreateAssetWithRecordTypesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETWITHRECORDTYPESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetWithRecordTypesRequest)
  ))
_sym_db.RegisterMessage(CanCreateAssetWithRecordTypesRequest)

GetAssetFormForCreateReply = _reflection.GeneratedProtocolMessageType('GetAssetFormForCreateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETFORMFORCREATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetFormForCreateReply)
  ))
_sym_db.RegisterMessage(GetAssetFormForCreateReply)

GetAssetFormForCreateRequest = _reflection.GeneratedProtocolMessageType('GetAssetFormForCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETFORMFORCREATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetFormForCreateRequest)
  ))
_sym_db.RegisterMessage(GetAssetFormForCreateRequest)

CreateAssetReply = _reflection.GeneratedProtocolMessageType('CreateAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATEASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateAssetReply)
  ))
_sym_db.RegisterMessage(CreateAssetReply)

CreateAssetRequest = _reflection.GeneratedProtocolMessageType('CreateAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateAssetRequest)
  ))
_sym_db.RegisterMessage(CreateAssetRequest)

CanUpdateAssetsReply = _reflection.GeneratedProtocolMessageType('CanUpdateAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATEASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateAssetsReply)
  ))
_sym_db.RegisterMessage(CanUpdateAssetsReply)

CanUpdateAssetsRequest = _reflection.GeneratedProtocolMessageType('CanUpdateAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATEASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateAssetsRequest)
  ))
_sym_db.RegisterMessage(CanUpdateAssetsRequest)

GetAssetFormForUpdateReply = _reflection.GeneratedProtocolMessageType('GetAssetFormForUpdateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETFORMFORUPDATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetFormForUpdateReply)
  ))
_sym_db.RegisterMessage(GetAssetFormForUpdateReply)

GetAssetFormForUpdateRequest = _reflection.GeneratedProtocolMessageType('GetAssetFormForUpdateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETFORMFORUPDATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetFormForUpdateRequest)
  ))
_sym_db.RegisterMessage(GetAssetFormForUpdateRequest)

UpdateAssetReply = _reflection.GeneratedProtocolMessageType('UpdateAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateAssetReply)
  ))
_sym_db.RegisterMessage(UpdateAssetReply)

UpdateAssetRequest = _reflection.GeneratedProtocolMessageType('UpdateAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateAssetRequest)
  ))
_sym_db.RegisterMessage(UpdateAssetRequest)

CanDeleteAssetsReply = _reflection.GeneratedProtocolMessageType('CanDeleteAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETEASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteAssetsReply)
  ))
_sym_db.RegisterMessage(CanDeleteAssetsReply)

CanDeleteAssetsRequest = _reflection.GeneratedProtocolMessageType('CanDeleteAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETEASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteAssetsRequest)
  ))
_sym_db.RegisterMessage(CanDeleteAssetsRequest)

DeleteAssetReply = _reflection.GeneratedProtocolMessageType('DeleteAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETEASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteAssetReply)
  ))
_sym_db.RegisterMessage(DeleteAssetReply)

DeleteAssetRequest = _reflection.GeneratedProtocolMessageType('DeleteAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteAssetRequest)
  ))
_sym_db.RegisterMessage(DeleteAssetRequest)

CanManageAssetAliasesReply = _reflection.GeneratedProtocolMessageType('CanManageAssetAliasesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGEASSETALIASESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanManageAssetAliasesReply)
  ))
_sym_db.RegisterMessage(CanManageAssetAliasesReply)

CanManageAssetAliasesRequest = _reflection.GeneratedProtocolMessageType('CanManageAssetAliasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGEASSETALIASESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanManageAssetAliasesRequest)
  ))
_sym_db.RegisterMessage(CanManageAssetAliasesRequest)

AliasAssetReply = _reflection.GeneratedProtocolMessageType('AliasAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _ALIASASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AliasAssetReply)
  ))
_sym_db.RegisterMessage(AliasAssetReply)

AliasAssetRequest = _reflection.GeneratedProtocolMessageType('AliasAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALIASASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AliasAssetRequest)
  ))
_sym_db.RegisterMessage(AliasAssetRequest)

CanCreateAssetContentReply = _reflection.GeneratedProtocolMessageType('CanCreateAssetContentReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETCONTENTREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetContentReply)
  ))
_sym_db.RegisterMessage(CanCreateAssetContentReply)

CanCreateAssetContentRequest = _reflection.GeneratedProtocolMessageType('CanCreateAssetContentRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETCONTENTREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetContentRequest)
  ))
_sym_db.RegisterMessage(CanCreateAssetContentRequest)

CanCreateAssetContentWithRecordTypesReply = _reflection.GeneratedProtocolMessageType('CanCreateAssetContentWithRecordTypesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETCONTENTWITHRECORDTYPESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetContentWithRecordTypesReply)
  ))
_sym_db.RegisterMessage(CanCreateAssetContentWithRecordTypesReply)

CanCreateAssetContentWithRecordTypesRequest = _reflection.GeneratedProtocolMessageType('CanCreateAssetContentWithRecordTypesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEASSETCONTENTWITHRECORDTYPESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateAssetContentWithRecordTypesRequest)
  ))
_sym_db.RegisterMessage(CanCreateAssetContentWithRecordTypesRequest)

GetAssetContentFormForCreateReply = _reflection.GeneratedProtocolMessageType('GetAssetContentFormForCreateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETCONTENTFORMFORCREATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetContentFormForCreateReply)
  ))
_sym_db.RegisterMessage(GetAssetContentFormForCreateReply)

GetAssetContentFormForCreateRequest = _reflection.GeneratedProtocolMessageType('GetAssetContentFormForCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETCONTENTFORMFORCREATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetContentFormForCreateRequest)
  ))
_sym_db.RegisterMessage(GetAssetContentFormForCreateRequest)

CreateAssetContentReply = _reflection.GeneratedProtocolMessageType('CreateAssetContentReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATEASSETCONTENTREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateAssetContentReply)
  ))
_sym_db.RegisterMessage(CreateAssetContentReply)

CreateAssetContentRequest = _reflection.GeneratedProtocolMessageType('CreateAssetContentRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEASSETCONTENTREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateAssetContentRequest)
  ))
_sym_db.RegisterMessage(CreateAssetContentRequest)

CanUpdateAssetContentsReply = _reflection.GeneratedProtocolMessageType('CanUpdateAssetContentsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATEASSETCONTENTSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateAssetContentsReply)
  ))
_sym_db.RegisterMessage(CanUpdateAssetContentsReply)

CanUpdateAssetContentsRequest = _reflection.GeneratedProtocolMessageType('CanUpdateAssetContentsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATEASSETCONTENTSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateAssetContentsRequest)
  ))
_sym_db.RegisterMessage(CanUpdateAssetContentsRequest)

GetAssetContentFormForUpdateReply = _reflection.GeneratedProtocolMessageType('GetAssetContentFormForUpdateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETCONTENTFORMFORUPDATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetContentFormForUpdateReply)
  ))
_sym_db.RegisterMessage(GetAssetContentFormForUpdateReply)

GetAssetContentFormForUpdateRequest = _reflection.GeneratedProtocolMessageType('GetAssetContentFormForUpdateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETCONTENTFORMFORUPDATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetContentFormForUpdateRequest)
  ))
_sym_db.RegisterMessage(GetAssetContentFormForUpdateRequest)

UpdateAssetContentReply = _reflection.GeneratedProtocolMessageType('UpdateAssetContentReply', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEASSETCONTENTREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateAssetContentReply)
  ))
_sym_db.RegisterMessage(UpdateAssetContentReply)

UpdateAssetContentRequest = _reflection.GeneratedProtocolMessageType('UpdateAssetContentRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEASSETCONTENTREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateAssetContentRequest)
  ))
_sym_db.RegisterMessage(UpdateAssetContentRequest)

CanDeleteAssetContentsReply = _reflection.GeneratedProtocolMessageType('CanDeleteAssetContentsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETEASSETCONTENTSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteAssetContentsReply)
  ))
_sym_db.RegisterMessage(CanDeleteAssetContentsReply)

CanDeleteAssetContentsRequest = _reflection.GeneratedProtocolMessageType('CanDeleteAssetContentsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETEASSETCONTENTSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteAssetContentsRequest)
  ))
_sym_db.RegisterMessage(CanDeleteAssetContentsRequest)

DeleteAssetContentReply = _reflection.GeneratedProtocolMessageType('DeleteAssetContentReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETEASSETCONTENTREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteAssetContentReply)
  ))
_sym_db.RegisterMessage(DeleteAssetContentReply)

DeleteAssetContentRequest = _reflection.GeneratedProtocolMessageType('DeleteAssetContentRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEASSETCONTENTREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteAssetContentRequest)
  ))
_sym_db.RegisterMessage(DeleteAssetContentRequest)

CanRegisterForAssetNotificationsReply = _reflection.GeneratedProtocolMessageType('CanRegisterForAssetNotificationsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANREGISTERFORASSETNOTIFICATIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanRegisterForAssetNotificationsReply)
  ))
_sym_db.RegisterMessage(CanRegisterForAssetNotificationsReply)

CanRegisterForAssetNotificationsRequest = _reflection.GeneratedProtocolMessageType('CanRegisterForAssetNotificationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANREGISTERFORASSETNOTIFICATIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanRegisterForAssetNotificationsRequest)
  ))
_sym_db.RegisterMessage(CanRegisterForAssetNotificationsRequest)

RegisterForNewAssetsReply = _reflection.GeneratedProtocolMessageType('RegisterForNewAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORNEWASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForNewAssetsReply)
  ))
_sym_db.RegisterMessage(RegisterForNewAssetsReply)

RegisterForNewAssetsRequest = _reflection.GeneratedProtocolMessageType('RegisterForNewAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORNEWASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForNewAssetsRequest)
  ))
_sym_db.RegisterMessage(RegisterForNewAssetsRequest)

RegisterForNewAssetsByGenusTypeReply = _reflection.GeneratedProtocolMessageType('RegisterForNewAssetsByGenusTypeReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORNEWASSETSBYGENUSTYPEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForNewAssetsByGenusTypeReply)
  ))
_sym_db.RegisterMessage(RegisterForNewAssetsByGenusTypeReply)

RegisterForNewAssetsByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('RegisterForNewAssetsByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORNEWASSETSBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForNewAssetsByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(RegisterForNewAssetsByGenusTypeRequest)

RegisterForChangedAssetsReply = _reflection.GeneratedProtocolMessageType('RegisterForChangedAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORCHANGEDASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForChangedAssetsReply)
  ))
_sym_db.RegisterMessage(RegisterForChangedAssetsReply)

RegisterForChangedAssetsRequest = _reflection.GeneratedProtocolMessageType('RegisterForChangedAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORCHANGEDASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForChangedAssetsRequest)
  ))
_sym_db.RegisterMessage(RegisterForChangedAssetsRequest)

RegisterForChangedAssetsByGenusTypeReply = _reflection.GeneratedProtocolMessageType('RegisterForChangedAssetsByGenusTypeReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORCHANGEDASSETSBYGENUSTYPEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForChangedAssetsByGenusTypeReply)
  ))
_sym_db.RegisterMessage(RegisterForChangedAssetsByGenusTypeReply)

RegisterForChangedAssetsByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('RegisterForChangedAssetsByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORCHANGEDASSETSBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForChangedAssetsByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(RegisterForChangedAssetsByGenusTypeRequest)

RegisterForChangedAssetReply = _reflection.GeneratedProtocolMessageType('RegisterForChangedAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORCHANGEDASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForChangedAssetReply)
  ))
_sym_db.RegisterMessage(RegisterForChangedAssetReply)

RegisterForChangedAssetRequest = _reflection.GeneratedProtocolMessageType('RegisterForChangedAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORCHANGEDASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForChangedAssetRequest)
  ))
_sym_db.RegisterMessage(RegisterForChangedAssetRequest)

RegisterForDeletedAssetsReply = _reflection.GeneratedProtocolMessageType('RegisterForDeletedAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORDELETEDASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForDeletedAssetsReply)
  ))
_sym_db.RegisterMessage(RegisterForDeletedAssetsReply)

RegisterForDeletedAssetsRequest = _reflection.GeneratedProtocolMessageType('RegisterForDeletedAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORDELETEDASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForDeletedAssetsRequest)
  ))
_sym_db.RegisterMessage(RegisterForDeletedAssetsRequest)

RegisterForDeletedAssetsByGenusTypeReply = _reflection.GeneratedProtocolMessageType('RegisterForDeletedAssetsByGenusTypeReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORDELETEDASSETSBYGENUSTYPEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForDeletedAssetsByGenusTypeReply)
  ))
_sym_db.RegisterMessage(RegisterForDeletedAssetsByGenusTypeReply)

RegisterForDeletedAssetsByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('RegisterForDeletedAssetsByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORDELETEDASSETSBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForDeletedAssetsByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(RegisterForDeletedAssetsByGenusTypeRequest)

RegisterForDeletedAssetReply = _reflection.GeneratedProtocolMessageType('RegisterForDeletedAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORDELETEDASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForDeletedAssetReply)
  ))
_sym_db.RegisterMessage(RegisterForDeletedAssetReply)

RegisterForDeletedAssetRequest = _reflection.GeneratedProtocolMessageType('RegisterForDeletedAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERFORDELETEDASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RegisterForDeletedAssetRequest)
  ))
_sym_db.RegisterMessage(RegisterForDeletedAssetRequest)

ReliableAssetNotificationsReply = _reflection.GeneratedProtocolMessageType('ReliableAssetNotificationsReply', (_message.Message,), dict(
  DESCRIPTOR = _RELIABLEASSETNOTIFICATIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.ReliableAssetNotificationsReply)
  ))
_sym_db.RegisterMessage(ReliableAssetNotificationsReply)

ReliableAssetNotificationsRequest = _reflection.GeneratedProtocolMessageType('ReliableAssetNotificationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _RELIABLEASSETNOTIFICATIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.ReliableAssetNotificationsRequest)
  ))
_sym_db.RegisterMessage(ReliableAssetNotificationsRequest)

UnreliableAssetNotificationsReply = _reflection.GeneratedProtocolMessageType('UnreliableAssetNotificationsReply', (_message.Message,), dict(
  DESCRIPTOR = _UNRELIABLEASSETNOTIFICATIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UnreliableAssetNotificationsReply)
  ))
_sym_db.RegisterMessage(UnreliableAssetNotificationsReply)

UnreliableAssetNotificationsRequest = _reflection.GeneratedProtocolMessageType('UnreliableAssetNotificationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _UNRELIABLEASSETNOTIFICATIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UnreliableAssetNotificationsRequest)
  ))
_sym_db.RegisterMessage(UnreliableAssetNotificationsRequest)

AcknowledgeAssetNotificationReply = _reflection.GeneratedProtocolMessageType('AcknowledgeAssetNotificationReply', (_message.Message,), dict(
  DESCRIPTOR = _ACKNOWLEDGEASSETNOTIFICATIONREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AcknowledgeAssetNotificationReply)
  ))
_sym_db.RegisterMessage(AcknowledgeAssetNotificationReply)

AcknowledgeAssetNotificationRequest = _reflection.GeneratedProtocolMessageType('AcknowledgeAssetNotificationRequest', (_message.Message,), dict(
  DESCRIPTOR = _ACKNOWLEDGEASSETNOTIFICATIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AcknowledgeAssetNotificationRequest)
  ))
_sym_db.RegisterMessage(AcknowledgeAssetNotificationRequest)

CanLookupAssetRepositoryMappingsReply = _reflection.GeneratedProtocolMessageType('CanLookupAssetRepositoryMappingsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPASSETREPOSITORYMAPPINGSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupAssetRepositoryMappingsReply)
  ))
_sym_db.RegisterMessage(CanLookupAssetRepositoryMappingsReply)

CanLookupAssetRepositoryMappingsRequest = _reflection.GeneratedProtocolMessageType('CanLookupAssetRepositoryMappingsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPASSETREPOSITORYMAPPINGSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupAssetRepositoryMappingsRequest)
  ))
_sym_db.RegisterMessage(CanLookupAssetRepositoryMappingsRequest)

UseComparativeRepositoryViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeRepositoryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVEREPOSITORYVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeRepositoryViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeRepositoryViewReply)

UseComparativeRepositoryViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeRepositoryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVEREPOSITORYVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeRepositoryViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeRepositoryViewRequest)

UsePlenaryRepositoryViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryRepositoryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYREPOSITORYVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryRepositoryViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryRepositoryViewReply)

UsePlenaryRepositoryViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryRepositoryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYREPOSITORYVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryRepositoryViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryRepositoryViewRequest)

GetAssetIdsByRepositoryRequest = _reflection.GeneratedProtocolMessageType('GetAssetIdsByRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETIDSBYREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetIdsByRepositoryRequest)
  ))
_sym_db.RegisterMessage(GetAssetIdsByRepositoryRequest)

GetAssetsByRepositoryRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByRepositoryRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByRepositoryRequest)

GetAssetIdsByRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetAssetIdsByRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETIDSBYREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetIdsByRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetAssetIdsByRepositoriesRequest)

GetAssetsByRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetAssetsByRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSETSBYREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssetsByRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetAssetsByRepositoriesRequest)

GetRepositoryIdsByAssetRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryIdsByAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYIDSBYASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryIdsByAssetRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryIdsByAssetRequest)

GetRepositoriesByAssetRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByAssetRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByAssetRequest)

CanAssignAssetsReply = _reflection.GeneratedProtocolMessageType('CanAssignAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignAssetsReply)
  ))
_sym_db.RegisterMessage(CanAssignAssetsReply)

CanAssignAssetsRequest = _reflection.GeneratedProtocolMessageType('CanAssignAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignAssetsRequest)
  ))
_sym_db.RegisterMessage(CanAssignAssetsRequest)

CanAssignAssetsToRepositoryReply = _reflection.GeneratedProtocolMessageType('CanAssignAssetsToRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNASSETSTOREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignAssetsToRepositoryReply)
  ))
_sym_db.RegisterMessage(CanAssignAssetsToRepositoryReply)

CanAssignAssetsToRepositoryRequest = _reflection.GeneratedProtocolMessageType('CanAssignAssetsToRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNASSETSTOREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignAssetsToRepositoryRequest)
  ))
_sym_db.RegisterMessage(CanAssignAssetsToRepositoryRequest)

GetAssignableRepositoryIdsRequest = _reflection.GeneratedProtocolMessageType('GetAssignableRepositoryIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSIGNABLEREPOSITORYIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssignableRepositoryIdsRequest)
  ))
_sym_db.RegisterMessage(GetAssignableRepositoryIdsRequest)

GetAssignableRepositoryIdsForAssetRequest = _reflection.GeneratedProtocolMessageType('GetAssignableRepositoryIdsForAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSIGNABLEREPOSITORYIDSFORASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssignableRepositoryIdsForAssetRequest)
  ))
_sym_db.RegisterMessage(GetAssignableRepositoryIdsForAssetRequest)

AssignAssetToRepositoryReply = _reflection.GeneratedProtocolMessageType('AssignAssetToRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ASSIGNASSETTOREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssignAssetToRepositoryReply)
  ))
_sym_db.RegisterMessage(AssignAssetToRepositoryReply)

AssignAssetToRepositoryRequest = _reflection.GeneratedProtocolMessageType('AssignAssetToRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ASSIGNASSETTOREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssignAssetToRepositoryRequest)
  ))
_sym_db.RegisterMessage(AssignAssetToRepositoryRequest)

UnassignAssetFromRepositoryReply = _reflection.GeneratedProtocolMessageType('UnassignAssetFromRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _UNASSIGNASSETFROMREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UnassignAssetFromRepositoryReply)
  ))
_sym_db.RegisterMessage(UnassignAssetFromRepositoryReply)

UnassignAssetFromRepositoryRequest = _reflection.GeneratedProtocolMessageType('UnassignAssetFromRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _UNASSIGNASSETFROMREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UnassignAssetFromRepositoryRequest)
  ))
_sym_db.RegisterMessage(UnassignAssetFromRepositoryRequest)

CanAccessAssetCompositionsReply = _reflection.GeneratedProtocolMessageType('CanAccessAssetCompositionsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSASSETCOMPOSITIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAccessAssetCompositionsReply)
  ))
_sym_db.RegisterMessage(CanAccessAssetCompositionsReply)

CanAccessAssetCompositionsRequest = _reflection.GeneratedProtocolMessageType('CanAccessAssetCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSASSETCOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAccessAssetCompositionsRequest)
  ))
_sym_db.RegisterMessage(CanAccessAssetCompositionsRequest)

UseComparativeAssetCompositionViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeAssetCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVEASSETCOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeAssetCompositionViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeAssetCompositionViewReply)

UseComparativeAssetCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeAssetCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVEASSETCOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeAssetCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeAssetCompositionViewRequest)

UsePlenaryAssetCompositionViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryAssetCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYASSETCOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryAssetCompositionViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryAssetCompositionViewReply)

UsePlenaryAssetCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryAssetCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYASSETCOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryAssetCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryAssetCompositionViewRequest)

GetCompositionAssetsRequest = _reflection.GeneratedProtocolMessageType('GetCompositionAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionAssetsRequest)
  ))
_sym_db.RegisterMessage(GetCompositionAssetsRequest)

GetCompositionsByAssetRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByAssetRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByAssetRequest)

CanComposeAssetsReply = _reflection.GeneratedProtocolMessageType('CanComposeAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCOMPOSEASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanComposeAssetsReply)
  ))
_sym_db.RegisterMessage(CanComposeAssetsReply)

CanComposeAssetsRequest = _reflection.GeneratedProtocolMessageType('CanComposeAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCOMPOSEASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanComposeAssetsRequest)
  ))
_sym_db.RegisterMessage(CanComposeAssetsRequest)

AddAssetReply = _reflection.GeneratedProtocolMessageType('AddAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddAssetReply)
  ))
_sym_db.RegisterMessage(AddAssetReply)

AddAssetRequest = _reflection.GeneratedProtocolMessageType('AddAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddAssetRequest)
  ))
_sym_db.RegisterMessage(AddAssetRequest)

MoveAssetAheadReply = _reflection.GeneratedProtocolMessageType('MoveAssetAheadReply', (_message.Message,), dict(
  DESCRIPTOR = _MOVEASSETAHEADREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.MoveAssetAheadReply)
  ))
_sym_db.RegisterMessage(MoveAssetAheadReply)

MoveAssetAheadRequest = _reflection.GeneratedProtocolMessageType('MoveAssetAheadRequest', (_message.Message,), dict(
  DESCRIPTOR = _MOVEASSETAHEADREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.MoveAssetAheadRequest)
  ))
_sym_db.RegisterMessage(MoveAssetAheadRequest)

MoveAssetBehindReply = _reflection.GeneratedProtocolMessageType('MoveAssetBehindReply', (_message.Message,), dict(
  DESCRIPTOR = _MOVEASSETBEHINDREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.MoveAssetBehindReply)
  ))
_sym_db.RegisterMessage(MoveAssetBehindReply)

MoveAssetBehindRequest = _reflection.GeneratedProtocolMessageType('MoveAssetBehindRequest', (_message.Message,), dict(
  DESCRIPTOR = _MOVEASSETBEHINDREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.MoveAssetBehindRequest)
  ))
_sym_db.RegisterMessage(MoveAssetBehindRequest)

OrderAssetsReply = _reflection.GeneratedProtocolMessageType('OrderAssetsReply', (_message.Message,), dict(
  DESCRIPTOR = _ORDERASSETSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.OrderAssetsReply)
  ))
_sym_db.RegisterMessage(OrderAssetsReply)

OrderAssetsRequest = _reflection.GeneratedProtocolMessageType('OrderAssetsRequest', (_message.Message,), dict(
  DESCRIPTOR = _ORDERASSETSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.OrderAssetsRequest)
  ))
_sym_db.RegisterMessage(OrderAssetsRequest)

RemoveAssetReply = _reflection.GeneratedProtocolMessageType('RemoveAssetReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEASSETREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveAssetReply)
  ))
_sym_db.RegisterMessage(RemoveAssetReply)

RemoveAssetRequest = _reflection.GeneratedProtocolMessageType('RemoveAssetRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEASSETREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveAssetRequest)
  ))
_sym_db.RegisterMessage(RemoveAssetRequest)

CanLookupCompositionsReply = _reflection.GeneratedProtocolMessageType('CanLookupCompositionsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPCOMPOSITIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupCompositionsReply)
  ))
_sym_db.RegisterMessage(CanLookupCompositionsReply)

CanLookupCompositionsRequest = _reflection.GeneratedProtocolMessageType('CanLookupCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPCOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupCompositionsRequest)
  ))
_sym_db.RegisterMessage(CanLookupCompositionsRequest)

UseComparativeCompositionViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVECOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeCompositionViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeCompositionViewReply)

UseComparativeCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVECOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeCompositionViewRequest)

UsePlenaryCompositionViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYCOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryCompositionViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryCompositionViewReply)

UsePlenaryCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYCOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryCompositionViewRequest)

UseActiveCompositionViewReply = _reflection.GeneratedProtocolMessageType('UseActiveCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEACTIVECOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseActiveCompositionViewReply)
  ))
_sym_db.RegisterMessage(UseActiveCompositionViewReply)

UseActiveCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UseActiveCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEACTIVECOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseActiveCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UseActiveCompositionViewRequest)

UseAnyStatusCompositionViewReply = _reflection.GeneratedProtocolMessageType('UseAnyStatusCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEANYSTATUSCOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseAnyStatusCompositionViewReply)
  ))
_sym_db.RegisterMessage(UseAnyStatusCompositionViewReply)

UseAnyStatusCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UseAnyStatusCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEANYSTATUSCOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseAnyStatusCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UseAnyStatusCompositionViewRequest)

UseSequesteredCompositionViewReply = _reflection.GeneratedProtocolMessageType('UseSequesteredCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USESEQUESTEREDCOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseSequesteredCompositionViewReply)
  ))
_sym_db.RegisterMessage(UseSequesteredCompositionViewReply)

UseSequesteredCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UseSequesteredCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USESEQUESTEREDCOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseSequesteredCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UseSequesteredCompositionViewRequest)

UseUnsequesteredCompositionViewReply = _reflection.GeneratedProtocolMessageType('UseUnsequesteredCompositionViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEUNSEQUESTEREDCOMPOSITIONVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseUnsequesteredCompositionViewReply)
  ))
_sym_db.RegisterMessage(UseUnsequesteredCompositionViewReply)

UseUnsequesteredCompositionViewRequest = _reflection.GeneratedProtocolMessageType('UseUnsequesteredCompositionViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEUNSEQUESTEREDCOMPOSITIONVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseUnsequesteredCompositionViewRequest)
  ))
_sym_db.RegisterMessage(UseUnsequesteredCompositionViewRequest)

GetCompositionReply = _reflection.GeneratedProtocolMessageType('GetCompositionReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionReply)
  ))
_sym_db.RegisterMessage(GetCompositionReply)

GetCompositionRequest = _reflection.GeneratedProtocolMessageType('GetCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionRequest)
  ))
_sym_db.RegisterMessage(GetCompositionRequest)

GetCompositionsByIdsRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByIdsRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByIdsRequest)

GetCompositionsByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByGenusTypeRequest)

GetCompositionsByParentGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByParentGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYPARENTGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByParentGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByParentGenusTypeRequest)

GetCompositionsByRecordTypeRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByRecordTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYRECORDTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByRecordTypeRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByRecordTypeRequest)

GetCompositionsByProviderRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByProviderRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYPROVIDERREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByProviderRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByProviderRequest)

GetCompositionsRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsRequest)

CanSearchCompositionsReply = _reflection.GeneratedProtocolMessageType('CanSearchCompositionsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHCOMPOSITIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanSearchCompositionsReply)
  ))
_sym_db.RegisterMessage(CanSearchCompositionsReply)

CanSearchCompositionsRequest = _reflection.GeneratedProtocolMessageType('CanSearchCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHCOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanSearchCompositionsRequest)
  ))
_sym_db.RegisterMessage(CanSearchCompositionsRequest)

GetCompositionQueryReply = _reflection.GeneratedProtocolMessageType('GetCompositionQueryReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONQUERYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionQueryReply)
  ))
_sym_db.RegisterMessage(GetCompositionQueryReply)

GetCompositionQueryRequest = _reflection.GeneratedProtocolMessageType('GetCompositionQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONQUERYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionQueryRequest)
  ))
_sym_db.RegisterMessage(GetCompositionQueryRequest)

GetCompositionsByQueryRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYQUERYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByQueryRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByQueryRequest)

GetCompositionSearchReply = _reflection.GeneratedProtocolMessageType('GetCompositionSearchReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSEARCHREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionSearchReply)
  ))
_sym_db.RegisterMessage(GetCompositionSearchReply)

GetCompositionSearchRequest = _reflection.GeneratedProtocolMessageType('GetCompositionSearchRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSEARCHREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionSearchRequest)
  ))
_sym_db.RegisterMessage(GetCompositionSearchRequest)

GetCompositionSearchOrderReply = _reflection.GeneratedProtocolMessageType('GetCompositionSearchOrderReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSEARCHORDERREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionSearchOrderReply)
  ))
_sym_db.RegisterMessage(GetCompositionSearchOrderReply)

GetCompositionSearchOrderRequest = _reflection.GeneratedProtocolMessageType('GetCompositionSearchOrderRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSEARCHORDERREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionSearchOrderRequest)
  ))
_sym_db.RegisterMessage(GetCompositionSearchOrderRequest)

GetCompositionsBySearchReply = _reflection.GeneratedProtocolMessageType('GetCompositionsBySearchReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYSEARCHREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsBySearchReply)
  ))
_sym_db.RegisterMessage(GetCompositionsBySearchReply)

GetCompositionsBySearchRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsBySearchRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYSEARCHREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsBySearchRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsBySearchRequest)

GetCompositionQueryFromInspectorReply = _reflection.GeneratedProtocolMessageType('GetCompositionQueryFromInspectorReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONQUERYFROMINSPECTORREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionQueryFromInspectorReply)
  ))
_sym_db.RegisterMessage(GetCompositionQueryFromInspectorReply)

GetCompositionQueryFromInspectorRequest = _reflection.GeneratedProtocolMessageType('GetCompositionQueryFromInspectorRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONQUERYFROMINSPECTORREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionQueryFromInspectorRequest)
  ))
_sym_db.RegisterMessage(GetCompositionQueryFromInspectorRequest)

CanCreateCompositionsReply = _reflection.GeneratedProtocolMessageType('CanCreateCompositionsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECOMPOSITIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateCompositionsReply)
  ))
_sym_db.RegisterMessage(CanCreateCompositionsReply)

CanCreateCompositionsRequest = _reflection.GeneratedProtocolMessageType('CanCreateCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateCompositionsRequest)
  ))
_sym_db.RegisterMessage(CanCreateCompositionsRequest)

CanCreateCompositionWithRecordTypesReply = _reflection.GeneratedProtocolMessageType('CanCreateCompositionWithRecordTypesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECOMPOSITIONWITHRECORDTYPESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateCompositionWithRecordTypesReply)
  ))
_sym_db.RegisterMessage(CanCreateCompositionWithRecordTypesReply)

CanCreateCompositionWithRecordTypesRequest = _reflection.GeneratedProtocolMessageType('CanCreateCompositionWithRecordTypesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATECOMPOSITIONWITHRECORDTYPESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateCompositionWithRecordTypesRequest)
  ))
_sym_db.RegisterMessage(CanCreateCompositionWithRecordTypesRequest)

GetCompositionFormForCreateReply = _reflection.GeneratedProtocolMessageType('GetCompositionFormForCreateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONFORMFORCREATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionFormForCreateReply)
  ))
_sym_db.RegisterMessage(GetCompositionFormForCreateReply)

GetCompositionFormForCreateRequest = _reflection.GeneratedProtocolMessageType('GetCompositionFormForCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONFORMFORCREATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionFormForCreateRequest)
  ))
_sym_db.RegisterMessage(GetCompositionFormForCreateRequest)

CreateCompositionReply = _reflection.GeneratedProtocolMessageType('CreateCompositionReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATECOMPOSITIONREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateCompositionReply)
  ))
_sym_db.RegisterMessage(CreateCompositionReply)

CreateCompositionRequest = _reflection.GeneratedProtocolMessageType('CreateCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATECOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateCompositionRequest)
  ))
_sym_db.RegisterMessage(CreateCompositionRequest)

CanUpdateCompositionsReply = _reflection.GeneratedProtocolMessageType('CanUpdateCompositionsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATECOMPOSITIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateCompositionsReply)
  ))
_sym_db.RegisterMessage(CanUpdateCompositionsReply)

CanUpdateCompositionsRequest = _reflection.GeneratedProtocolMessageType('CanUpdateCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATECOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateCompositionsRequest)
  ))
_sym_db.RegisterMessage(CanUpdateCompositionsRequest)

GetCompositionFormForUpdateReply = _reflection.GeneratedProtocolMessageType('GetCompositionFormForUpdateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONFORMFORUPDATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionFormForUpdateReply)
  ))
_sym_db.RegisterMessage(GetCompositionFormForUpdateReply)

GetCompositionFormForUpdateRequest = _reflection.GeneratedProtocolMessageType('GetCompositionFormForUpdateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONFORMFORUPDATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionFormForUpdateRequest)
  ))
_sym_db.RegisterMessage(GetCompositionFormForUpdateRequest)

UpdateCompositionReply = _reflection.GeneratedProtocolMessageType('UpdateCompositionReply', (_message.Message,), dict(
  DESCRIPTOR = _UPDATECOMPOSITIONREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateCompositionReply)
  ))
_sym_db.RegisterMessage(UpdateCompositionReply)

UpdateCompositionRequest = _reflection.GeneratedProtocolMessageType('UpdateCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATECOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateCompositionRequest)
  ))
_sym_db.RegisterMessage(UpdateCompositionRequest)

CanDeleteCompositionsReply = _reflection.GeneratedProtocolMessageType('CanDeleteCompositionsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETECOMPOSITIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteCompositionsReply)
  ))
_sym_db.RegisterMessage(CanDeleteCompositionsReply)

CanDeleteCompositionsRequest = _reflection.GeneratedProtocolMessageType('CanDeleteCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETECOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteCompositionsRequest)
  ))
_sym_db.RegisterMessage(CanDeleteCompositionsRequest)

DeleteCompositionReply = _reflection.GeneratedProtocolMessageType('DeleteCompositionReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETECOMPOSITIONREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteCompositionReply)
  ))
_sym_db.RegisterMessage(DeleteCompositionReply)

DeleteCompositionRequest = _reflection.GeneratedProtocolMessageType('DeleteCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETECOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteCompositionRequest)
  ))
_sym_db.RegisterMessage(DeleteCompositionRequest)

DeleteCompositionNodeReply = _reflection.GeneratedProtocolMessageType('DeleteCompositionNodeReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETECOMPOSITIONNODEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteCompositionNodeReply)
  ))
_sym_db.RegisterMessage(DeleteCompositionNodeReply)

DeleteCompositionNodeRequest = _reflection.GeneratedProtocolMessageType('DeleteCompositionNodeRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETECOMPOSITIONNODEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteCompositionNodeRequest)
  ))
_sym_db.RegisterMessage(DeleteCompositionNodeRequest)

AddCompositionChildReply = _reflection.GeneratedProtocolMessageType('AddCompositionChildReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDCOMPOSITIONCHILDREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddCompositionChildReply)
  ))
_sym_db.RegisterMessage(AddCompositionChildReply)

AddCompositionChildRequest = _reflection.GeneratedProtocolMessageType('AddCompositionChildRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDCOMPOSITIONCHILDREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddCompositionChildRequest)
  ))
_sym_db.RegisterMessage(AddCompositionChildRequest)

RemoveCompositionChildReply = _reflection.GeneratedProtocolMessageType('RemoveCompositionChildReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECOMPOSITIONCHILDREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveCompositionChildReply)
  ))
_sym_db.RegisterMessage(RemoveCompositionChildReply)

RemoveCompositionChildRequest = _reflection.GeneratedProtocolMessageType('RemoveCompositionChildRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECOMPOSITIONCHILDREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveCompositionChildRequest)
  ))
_sym_db.RegisterMessage(RemoveCompositionChildRequest)

CanManageCompositionAliasesReply = _reflection.GeneratedProtocolMessageType('CanManageCompositionAliasesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGECOMPOSITIONALIASESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanManageCompositionAliasesReply)
  ))
_sym_db.RegisterMessage(CanManageCompositionAliasesReply)

CanManageCompositionAliasesRequest = _reflection.GeneratedProtocolMessageType('CanManageCompositionAliasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGECOMPOSITIONALIASESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanManageCompositionAliasesRequest)
  ))
_sym_db.RegisterMessage(CanManageCompositionAliasesRequest)

AliasCompositionReply = _reflection.GeneratedProtocolMessageType('AliasCompositionReply', (_message.Message,), dict(
  DESCRIPTOR = _ALIASCOMPOSITIONREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AliasCompositionReply)
  ))
_sym_db.RegisterMessage(AliasCompositionReply)

AliasCompositionRequest = _reflection.GeneratedProtocolMessageType('AliasCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALIASCOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AliasCompositionRequest)
  ))
_sym_db.RegisterMessage(AliasCompositionRequest)

UseComparativeCompositionRepositoryViewReply = _reflection.GeneratedProtocolMessageType('UseComparativeCompositionRepositoryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeCompositionRepositoryViewReply)
  ))
_sym_db.RegisterMessage(UseComparativeCompositionRepositoryViewReply)

UseComparativeCompositionRepositoryViewRequest = _reflection.GeneratedProtocolMessageType('UseComparativeCompositionRepositoryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UseComparativeCompositionRepositoryViewRequest)
  ))
_sym_db.RegisterMessage(UseComparativeCompositionRepositoryViewRequest)

UsePlenaryCompositionRepositoryViewReply = _reflection.GeneratedProtocolMessageType('UsePlenaryCompositionRepositoryViewReply', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYCOMPOSITIONREPOSITORYVIEWREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryCompositionRepositoryViewReply)
  ))
_sym_db.RegisterMessage(UsePlenaryCompositionRepositoryViewReply)

UsePlenaryCompositionRepositoryViewRequest = _reflection.GeneratedProtocolMessageType('UsePlenaryCompositionRepositoryViewRequest', (_message.Message,), dict(
  DESCRIPTOR = _USEPLENARYCOMPOSITIONREPOSITORYVIEWREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UsePlenaryCompositionRepositoryViewRequest)
  ))
_sym_db.RegisterMessage(UsePlenaryCompositionRepositoryViewRequest)

CanLookupCompositionRepositoryMappingsReply = _reflection.GeneratedProtocolMessageType('CanLookupCompositionRepositoryMappingsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupCompositionRepositoryMappingsReply)
  ))
_sym_db.RegisterMessage(CanLookupCompositionRepositoryMappingsReply)

CanLookupCompositionRepositoryMappingsRequest = _reflection.GeneratedProtocolMessageType('CanLookupCompositionRepositoryMappingsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupCompositionRepositoryMappingsRequest)
  ))
_sym_db.RegisterMessage(CanLookupCompositionRepositoryMappingsRequest)

GetCompositionIdsByRepositoryRequest = _reflection.GeneratedProtocolMessageType('GetCompositionIdsByRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONIDSBYREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionIdsByRepositoryRequest)
  ))
_sym_db.RegisterMessage(GetCompositionIdsByRepositoryRequest)

GetCompositionsByRepositoryRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByRepositoryRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByRepositoryRequest)

GetCompositionIdsByRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetCompositionIdsByRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONIDSBYREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionIdsByRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetCompositionIdsByRepositoriesRequest)

GetCompositionsByRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetCompositionsByRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCOMPOSITIONSBYREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetCompositionsByRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetCompositionsByRepositoriesRequest)

GetRepositoryIdsByCompositionRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryIdsByCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYIDSBYCOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryIdsByCompositionRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryIdsByCompositionRequest)

GetRepositoriesByCompositionRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYCOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByCompositionRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByCompositionRequest)

CanAssignCompositionsReply = _reflection.GeneratedProtocolMessageType('CanAssignCompositionsReply', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNCOMPOSITIONSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignCompositionsReply)
  ))
_sym_db.RegisterMessage(CanAssignCompositionsReply)

CanAssignCompositionsRequest = _reflection.GeneratedProtocolMessageType('CanAssignCompositionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNCOMPOSITIONSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignCompositionsRequest)
  ))
_sym_db.RegisterMessage(CanAssignCompositionsRequest)

CanAssignCompositionsToRepositoryReply = _reflection.GeneratedProtocolMessageType('CanAssignCompositionsToRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNCOMPOSITIONSTOREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignCompositionsToRepositoryReply)
  ))
_sym_db.RegisterMessage(CanAssignCompositionsToRepositoryReply)

CanAssignCompositionsToRepositoryRequest = _reflection.GeneratedProtocolMessageType('CanAssignCompositionsToRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANASSIGNCOMPOSITIONSTOREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAssignCompositionsToRepositoryRequest)
  ))
_sym_db.RegisterMessage(CanAssignCompositionsToRepositoryRequest)

GetAssignableRepositoryIdsForCompositionRequest = _reflection.GeneratedProtocolMessageType('GetAssignableRepositoryIdsForCompositionRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETASSIGNABLEREPOSITORYIDSFORCOMPOSITIONREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetAssignableRepositoryIdsForCompositionRequest)
  ))
_sym_db.RegisterMessage(GetAssignableRepositoryIdsForCompositionRequest)

AssignCompositionToRepositoryReply = _reflection.GeneratedProtocolMessageType('AssignCompositionToRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ASSIGNCOMPOSITIONTOREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssignCompositionToRepositoryReply)
  ))
_sym_db.RegisterMessage(AssignCompositionToRepositoryReply)

AssignCompositionToRepositoryRequest = _reflection.GeneratedProtocolMessageType('AssignCompositionToRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ASSIGNCOMPOSITIONTOREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AssignCompositionToRepositoryRequest)
  ))
_sym_db.RegisterMessage(AssignCompositionToRepositoryRequest)

UnassignCompositionFromRepositoryReply = _reflection.GeneratedProtocolMessageType('UnassignCompositionFromRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _UNASSIGNCOMPOSITIONFROMREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UnassignCompositionFromRepositoryReply)
  ))
_sym_db.RegisterMessage(UnassignCompositionFromRepositoryReply)

UnassignCompositionFromRepositoryRequest = _reflection.GeneratedProtocolMessageType('UnassignCompositionFromRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _UNASSIGNCOMPOSITIONFROMREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UnassignCompositionFromRepositoryRequest)
  ))
_sym_db.RegisterMessage(UnassignCompositionFromRepositoryRequest)

CanLookupRepositoriesReply = _reflection.GeneratedProtocolMessageType('CanLookupRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupRepositoriesReply)
  ))
_sym_db.RegisterMessage(CanLookupRepositoriesReply)

CanLookupRepositoriesRequest = _reflection.GeneratedProtocolMessageType('CanLookupRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANLOOKUPREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanLookupRepositoriesRequest)
  ))
_sym_db.RegisterMessage(CanLookupRepositoriesRequest)

GetRepositoriesByIdsRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByIdsRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByIdsRequest)

GetRepositoriesByGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByGenusTypeRequest)

GetRepositoriesByParentGenusTypeRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByParentGenusTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYPARENTGENUSTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByParentGenusTypeRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByParentGenusTypeRequest)

GetRepositoriesByRecordTypeRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByRecordTypeRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYRECORDTYPEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByRecordTypeRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByRecordTypeRequest)

GetRepositoriesByProviderRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByProviderRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYPROVIDERREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByProviderRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByProviderRequest)

GetRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesRequest)

CanSearchRepositoriesReply = _reflection.GeneratedProtocolMessageType('CanSearchRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanSearchRepositoriesReply)
  ))
_sym_db.RegisterMessage(CanSearchRepositoriesReply)

CanSearchRepositoriesRequest = _reflection.GeneratedProtocolMessageType('CanSearchRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANSEARCHREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanSearchRepositoriesRequest)
  ))
_sym_db.RegisterMessage(CanSearchRepositoriesRequest)

GetRepositoryQueryReply = _reflection.GeneratedProtocolMessageType('GetRepositoryQueryReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYQUERYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryQueryReply)
  ))
_sym_db.RegisterMessage(GetRepositoryQueryReply)

GetRepositoryQueryRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYQUERYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryQueryRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryQueryRequest)

GetRepositoriesByQueryRequest = _reflection.GeneratedProtocolMessageType('GetRepositoriesByQueryRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORIESBYQUERYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoriesByQueryRequest)
  ))
_sym_db.RegisterMessage(GetRepositoriesByQueryRequest)

CanCreateRepositoriesReply = _reflection.GeneratedProtocolMessageType('CanCreateRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateRepositoriesReply)
  ))
_sym_db.RegisterMessage(CanCreateRepositoriesReply)

CanCreateRepositoriesRequest = _reflection.GeneratedProtocolMessageType('CanCreateRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateRepositoriesRequest)
  ))
_sym_db.RegisterMessage(CanCreateRepositoriesRequest)

CanCreateRepositoryWithRecordTypesReply = _reflection.GeneratedProtocolMessageType('CanCreateRepositoryWithRecordTypesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEREPOSITORYWITHRECORDTYPESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateRepositoryWithRecordTypesReply)
  ))
_sym_db.RegisterMessage(CanCreateRepositoryWithRecordTypesReply)

CanCreateRepositoryWithRecordTypesRequest = _reflection.GeneratedProtocolMessageType('CanCreateRepositoryWithRecordTypesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCREATEREPOSITORYWITHRECORDTYPESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanCreateRepositoryWithRecordTypesRequest)
  ))
_sym_db.RegisterMessage(CanCreateRepositoryWithRecordTypesRequest)

GetRepositoryFormForCreateReply = _reflection.GeneratedProtocolMessageType('GetRepositoryFormForCreateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYFORMFORCREATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryFormForCreateReply)
  ))
_sym_db.RegisterMessage(GetRepositoryFormForCreateReply)

GetRepositoryFormForCreateRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryFormForCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYFORMFORCREATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryFormForCreateRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryFormForCreateRequest)

CreateRepositoryReply = _reflection.GeneratedProtocolMessageType('CreateRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _CREATEREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateRepositoryReply)
  ))
_sym_db.RegisterMessage(CreateRepositoryReply)

CreateRepositoryRequest = _reflection.GeneratedProtocolMessageType('CreateRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CreateRepositoryRequest)
  ))
_sym_db.RegisterMessage(CreateRepositoryRequest)

CanUpdateRepositoriesReply = _reflection.GeneratedProtocolMessageType('CanUpdateRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATEREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateRepositoriesReply)
  ))
_sym_db.RegisterMessage(CanUpdateRepositoriesReply)

CanUpdateRepositoriesRequest = _reflection.GeneratedProtocolMessageType('CanUpdateRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANUPDATEREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanUpdateRepositoriesRequest)
  ))
_sym_db.RegisterMessage(CanUpdateRepositoriesRequest)

GetRepositoryFormForUpdateReply = _reflection.GeneratedProtocolMessageType('GetRepositoryFormForUpdateReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYFORMFORUPDATEREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryFormForUpdateReply)
  ))
_sym_db.RegisterMessage(GetRepositoryFormForUpdateReply)

GetRepositoryFormForUpdateRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryFormForUpdateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYFORMFORUPDATEREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryFormForUpdateRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryFormForUpdateRequest)

UpdateRepositoryReply = _reflection.GeneratedProtocolMessageType('UpdateRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateRepositoryReply)
  ))
_sym_db.RegisterMessage(UpdateRepositoryReply)

UpdateRepositoryRequest = _reflection.GeneratedProtocolMessageType('UpdateRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.UpdateRepositoryRequest)
  ))
_sym_db.RegisterMessage(UpdateRepositoryRequest)

CanDeleteRepositoriesReply = _reflection.GeneratedProtocolMessageType('CanDeleteRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETEREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteRepositoriesReply)
  ))
_sym_db.RegisterMessage(CanDeleteRepositoriesReply)

CanDeleteRepositoriesRequest = _reflection.GeneratedProtocolMessageType('CanDeleteRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDELETEREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanDeleteRepositoriesRequest)
  ))
_sym_db.RegisterMessage(CanDeleteRepositoriesRequest)

DeleteRepositoryReply = _reflection.GeneratedProtocolMessageType('DeleteRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _DELETEREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteRepositoryReply)
  ))
_sym_db.RegisterMessage(DeleteRepositoryReply)

DeleteRepositoryRequest = _reflection.GeneratedProtocolMessageType('DeleteRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.DeleteRepositoryRequest)
  ))
_sym_db.RegisterMessage(DeleteRepositoryRequest)

CanManageRepositoryAliasesReply = _reflection.GeneratedProtocolMessageType('CanManageRepositoryAliasesReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGEREPOSITORYALIASESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanManageRepositoryAliasesReply)
  ))
_sym_db.RegisterMessage(CanManageRepositoryAliasesReply)

CanManageRepositoryAliasesRequest = _reflection.GeneratedProtocolMessageType('CanManageRepositoryAliasesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMANAGEREPOSITORYALIASESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanManageRepositoryAliasesRequest)
  ))
_sym_db.RegisterMessage(CanManageRepositoryAliasesRequest)

AliasRepositoryReply = _reflection.GeneratedProtocolMessageType('AliasRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ALIASREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AliasRepositoryReply)
  ))
_sym_db.RegisterMessage(AliasRepositoryReply)

AliasRepositoryRequest = _reflection.GeneratedProtocolMessageType('AliasRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALIASREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AliasRepositoryRequest)
  ))
_sym_db.RegisterMessage(AliasRepositoryRequest)

GetRepositoryHierarchyIdReply = _reflection.GeneratedProtocolMessageType('GetRepositoryHierarchyIdReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYHIERARCHYIDREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryHierarchyIdReply)
  ))
_sym_db.RegisterMessage(GetRepositoryHierarchyIdReply)

GetRepositoryHierarchyIdRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryHierarchyIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYHIERARCHYIDREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryHierarchyIdRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryHierarchyIdRequest)

GetRepositoryHierarchyReply = _reflection.GeneratedProtocolMessageType('GetRepositoryHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYHIERARCHYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryHierarchyReply)
  ))
_sym_db.RegisterMessage(GetRepositoryHierarchyReply)

GetRepositoryHierarchyRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryHierarchyRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryHierarchyRequest)

CanAccessRepositoryHierarchyReply = _reflection.GeneratedProtocolMessageType('CanAccessRepositoryHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSREPOSITORYHIERARCHYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAccessRepositoryHierarchyReply)
  ))
_sym_db.RegisterMessage(CanAccessRepositoryHierarchyReply)

CanAccessRepositoryHierarchyRequest = _reflection.GeneratedProtocolMessageType('CanAccessRepositoryHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANACCESSREPOSITORYHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanAccessRepositoryHierarchyRequest)
  ))
_sym_db.RegisterMessage(CanAccessRepositoryHierarchyRequest)

GetRootRepositoryIdsRequest = _reflection.GeneratedProtocolMessageType('GetRootRepositoryIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETROOTREPOSITORYIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRootRepositoryIdsRequest)
  ))
_sym_db.RegisterMessage(GetRootRepositoryIdsRequest)

GetRootRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetRootRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETROOTREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRootRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetRootRepositoriesRequest)

HasParentRepositoriesReply = _reflection.GeneratedProtocolMessageType('HasParentRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _HASPARENTREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.HasParentRepositoriesReply)
  ))
_sym_db.RegisterMessage(HasParentRepositoriesReply)

HasParentRepositoriesRequest = _reflection.GeneratedProtocolMessageType('HasParentRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _HASPARENTREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.HasParentRepositoriesRequest)
  ))
_sym_db.RegisterMessage(HasParentRepositoriesRequest)

IsParentOfRepositoryReply = _reflection.GeneratedProtocolMessageType('IsParentOfRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ISPARENTOFREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsParentOfRepositoryReply)
  ))
_sym_db.RegisterMessage(IsParentOfRepositoryReply)

IsParentOfRepositoryRequest = _reflection.GeneratedProtocolMessageType('IsParentOfRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISPARENTOFREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsParentOfRepositoryRequest)
  ))
_sym_db.RegisterMessage(IsParentOfRepositoryRequest)

GetParentRepositoryIdsRequest = _reflection.GeneratedProtocolMessageType('GetParentRepositoryIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPARENTREPOSITORYIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetParentRepositoryIdsRequest)
  ))
_sym_db.RegisterMessage(GetParentRepositoryIdsRequest)

GetParentRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetParentRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPARENTREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetParentRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetParentRepositoriesRequest)

IsAncestorOfRepositoryReply = _reflection.GeneratedProtocolMessageType('IsAncestorOfRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ISANCESTOROFREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsAncestorOfRepositoryReply)
  ))
_sym_db.RegisterMessage(IsAncestorOfRepositoryReply)

IsAncestorOfRepositoryRequest = _reflection.GeneratedProtocolMessageType('IsAncestorOfRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISANCESTOROFREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsAncestorOfRepositoryRequest)
  ))
_sym_db.RegisterMessage(IsAncestorOfRepositoryRequest)

HasChildRepositoriesReply = _reflection.GeneratedProtocolMessageType('HasChildRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _HASCHILDREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.HasChildRepositoriesReply)
  ))
_sym_db.RegisterMessage(HasChildRepositoriesReply)

HasChildRepositoriesRequest = _reflection.GeneratedProtocolMessageType('HasChildRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _HASCHILDREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.HasChildRepositoriesRequest)
  ))
_sym_db.RegisterMessage(HasChildRepositoriesRequest)

IsChildOfRepositoryReply = _reflection.GeneratedProtocolMessageType('IsChildOfRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ISCHILDOFREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsChildOfRepositoryReply)
  ))
_sym_db.RegisterMessage(IsChildOfRepositoryReply)

IsChildOfRepositoryRequest = _reflection.GeneratedProtocolMessageType('IsChildOfRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISCHILDOFREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsChildOfRepositoryRequest)
  ))
_sym_db.RegisterMessage(IsChildOfRepositoryRequest)

GetChildRepositoryIdsRequest = _reflection.GeneratedProtocolMessageType('GetChildRepositoryIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCHILDREPOSITORYIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetChildRepositoryIdsRequest)
  ))
_sym_db.RegisterMessage(GetChildRepositoryIdsRequest)

GetChildRepositoriesRequest = _reflection.GeneratedProtocolMessageType('GetChildRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCHILDREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetChildRepositoriesRequest)
  ))
_sym_db.RegisterMessage(GetChildRepositoriesRequest)

IsDescendantOfRepositoryReply = _reflection.GeneratedProtocolMessageType('IsDescendantOfRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ISDESCENDANTOFREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsDescendantOfRepositoryReply)
  ))
_sym_db.RegisterMessage(IsDescendantOfRepositoryReply)

IsDescendantOfRepositoryRequest = _reflection.GeneratedProtocolMessageType('IsDescendantOfRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISDESCENDANTOFREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.IsDescendantOfRepositoryRequest)
  ))
_sym_db.RegisterMessage(IsDescendantOfRepositoryRequest)

GetRepositoryNodeIdsReply = _reflection.GeneratedProtocolMessageType('GetRepositoryNodeIdsReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYNODEIDSREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryNodeIdsReply)
  ))
_sym_db.RegisterMessage(GetRepositoryNodeIdsReply)

GetRepositoryNodeIdsRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryNodeIdsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYNODEIDSREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryNodeIdsRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryNodeIdsRequest)

GetRepositoryNodesReply = _reflection.GeneratedProtocolMessageType('GetRepositoryNodesReply', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYNODESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryNodesReply)
  ))
_sym_db.RegisterMessage(GetRepositoryNodesReply)

GetRepositoryNodesRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryNodesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREPOSITORYNODESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.GetRepositoryNodesRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryNodesRequest)

CanModifyRepositoryHierarchyReply = _reflection.GeneratedProtocolMessageType('CanModifyRepositoryHierarchyReply', (_message.Message,), dict(
  DESCRIPTOR = _CANMODIFYREPOSITORYHIERARCHYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanModifyRepositoryHierarchyReply)
  ))
_sym_db.RegisterMessage(CanModifyRepositoryHierarchyReply)

CanModifyRepositoryHierarchyRequest = _reflection.GeneratedProtocolMessageType('CanModifyRepositoryHierarchyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANMODIFYREPOSITORYHIERARCHYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.CanModifyRepositoryHierarchyRequest)
  ))
_sym_db.RegisterMessage(CanModifyRepositoryHierarchyRequest)

AddRootRepositoryReply = _reflection.GeneratedProtocolMessageType('AddRootRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDROOTREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddRootRepositoryReply)
  ))
_sym_db.RegisterMessage(AddRootRepositoryReply)

AddRootRepositoryRequest = _reflection.GeneratedProtocolMessageType('AddRootRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDROOTREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddRootRepositoryRequest)
  ))
_sym_db.RegisterMessage(AddRootRepositoryRequest)

RemoveRootRepositoryReply = _reflection.GeneratedProtocolMessageType('RemoveRootRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEROOTREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveRootRepositoryReply)
  ))
_sym_db.RegisterMessage(RemoveRootRepositoryReply)

RemoveRootRepositoryRequest = _reflection.GeneratedProtocolMessageType('RemoveRootRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVEROOTREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveRootRepositoryRequest)
  ))
_sym_db.RegisterMessage(RemoveRootRepositoryRequest)

AddChildRepositoryReply = _reflection.GeneratedProtocolMessageType('AddChildRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _ADDCHILDREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddChildRepositoryReply)
  ))
_sym_db.RegisterMessage(AddChildRepositoryReply)

AddChildRepositoryRequest = _reflection.GeneratedProtocolMessageType('AddChildRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDCHILDREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.AddChildRepositoryRequest)
  ))
_sym_db.RegisterMessage(AddChildRepositoryRequest)

RemoveChildRepositoryReply = _reflection.GeneratedProtocolMessageType('RemoveChildRepositoryReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDREPOSITORYREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveChildRepositoryReply)
  ))
_sym_db.RegisterMessage(RemoveChildRepositoryReply)

RemoveChildRepositoryRequest = _reflection.GeneratedProtocolMessageType('RemoveChildRepositoryRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDREPOSITORYREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveChildRepositoryRequest)
  ))
_sym_db.RegisterMessage(RemoveChildRepositoryRequest)

RemoveChildRepositoriesReply = _reflection.GeneratedProtocolMessageType('RemoveChildRepositoriesReply', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDREPOSITORIESREPLY,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveChildRepositoriesReply)
  ))
_sym_db.RegisterMessage(RemoveChildRepositoriesReply)

RemoveChildRepositoriesRequest = _reflection.GeneratedProtocolMessageType('RemoveChildRepositoriesRequest', (_message.Message,), dict(
  DESCRIPTOR = _REMOVECHILDREPOSITORIESREQUEST,
  __module__ = 'dlkit.proto.repository_pb2'
  # @@protoc_insertion_point(class_scope:dlkit.proto.repository.RemoveChildRepositoriesRequest)
  ))
_sym_db.RegisterMessage(RemoveChildRepositoriesRequest)



_ASSETLOOKUPSESSION = _descriptor.ServiceDescriptor(
  name='AssetLookupSession',
  full_name='dlkit.proto.repository.AssetLookupSession',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=24878,
  serialized_end=26543,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.AssetLookupSession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.AssetLookupSession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanLookupAssets',
    full_name='dlkit.proto.repository.AssetLookupSession.CanLookupAssets',
    index=2,
    containing_service=None,
    input_type=_CANLOOKUPASSETSREQUEST,
    output_type=_CANLOOKUPASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeAssetView',
    full_name='dlkit.proto.repository.AssetLookupSession.UseComparativeAssetView',
    index=3,
    containing_service=None,
    input_type=_USECOMPARATIVEASSETVIEWREQUEST,
    output_type=_USECOMPARATIVEASSETVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryAssetView',
    full_name='dlkit.proto.repository.AssetLookupSession.UsePlenaryAssetView',
    index=4,
    containing_service=None,
    input_type=_USEPLENARYASSETVIEWREQUEST,
    output_type=_USEPLENARYASSETVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedRepositoryView',
    full_name='dlkit.proto.repository.AssetLookupSession.UseFederatedRepositoryView',
    index=5,
    containing_service=None,
    input_type=_USEFEDERATEDREPOSITORYVIEWREQUEST,
    output_type=_USEFEDERATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedRepositoryView',
    full_name='dlkit.proto.repository.AssetLookupSession.UseIsolatedRepositoryView',
    index=6,
    containing_service=None,
    input_type=_USEISOLATEDREPOSITORYVIEWREQUEST,
    output_type=_USEISOLATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAsset',
    full_name='dlkit.proto.repository.AssetLookupSession.GetAsset',
    index=7,
    containing_service=None,
    input_type=_GETASSETREQUEST,
    output_type=_GETASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByIds',
    full_name='dlkit.proto.repository.AssetLookupSession.GetAssetsByIds',
    index=8,
    containing_service=None,
    input_type=_GETASSETSBYIDSREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByGenusType',
    full_name='dlkit.proto.repository.AssetLookupSession.GetAssetsByGenusType',
    index=9,
    containing_service=None,
    input_type=_GETASSETSBYGENUSTYPEREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByParentGenusType',
    full_name='dlkit.proto.repository.AssetLookupSession.GetAssetsByParentGenusType',
    index=10,
    containing_service=None,
    input_type=_GETASSETSBYPARENTGENUSTYPEREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByRecordType',
    full_name='dlkit.proto.repository.AssetLookupSession.GetAssetsByRecordType',
    index=11,
    containing_service=None,
    input_type=_GETASSETSBYRECORDTYPEREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByProvider',
    full_name='dlkit.proto.repository.AssetLookupSession.GetAssetsByProvider',
    index=12,
    containing_service=None,
    input_type=_GETASSETSBYPROVIDERREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssets',
    full_name='dlkit.proto.repository.AssetLookupSession.GetAssets',
    index=13,
    containing_service=None,
    input_type=_GETASSETSREQUEST,
    output_type=_ASSET,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETLOOKUPSESSION)

DESCRIPTOR.services_by_name['AssetLookupSession'] = _ASSETLOOKUPSESSION


_ASSETQUERYSESSION = _descriptor.ServiceDescriptor(
  name='AssetQuerySession',
  full_name='dlkit.proto.repository.AssetQuerySession',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=26546,
  serialized_end=27412,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.AssetQuerySession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.AssetQuerySession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanSearchAssets',
    full_name='dlkit.proto.repository.AssetQuerySession.CanSearchAssets',
    index=2,
    containing_service=None,
    input_type=_CANSEARCHASSETSREQUEST,
    output_type=_CANSEARCHASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedRepositoryView',
    full_name='dlkit.proto.repository.AssetQuerySession.UseFederatedRepositoryView',
    index=3,
    containing_service=None,
    input_type=_USEFEDERATEDREPOSITORYVIEWREQUEST,
    output_type=_USEFEDERATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedRepositoryView',
    full_name='dlkit.proto.repository.AssetQuerySession.UseIsolatedRepositoryView',
    index=4,
    containing_service=None,
    input_type=_USEISOLATEDREPOSITORYVIEWREQUEST,
    output_type=_USEISOLATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetQuery',
    full_name='dlkit.proto.repository.AssetQuerySession.GetAssetQuery',
    index=5,
    containing_service=None,
    input_type=_GETASSETQUERYREQUEST,
    output_type=_GETASSETQUERYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByQuery',
    full_name='dlkit.proto.repository.AssetQuerySession.GetAssetsByQuery',
    index=6,
    containing_service=None,
    input_type=_GETASSETSBYQUERYREQUEST,
    output_type=_ASSET,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETQUERYSESSION)

DESCRIPTOR.services_by_name['AssetQuerySession'] = _ASSETQUERYSESSION


_ASSETSEARCHSESSION = _descriptor.ServiceDescriptor(
  name='AssetSearchSession',
  full_name='dlkit.proto.repository.AssetSearchSession',
  file=DESCRIPTOR,
  index=2,
  options=None,
  serialized_start=27415,
  serialized_end=27944,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAssetSearch',
    full_name='dlkit.proto.repository.AssetSearchSession.GetAssetSearch',
    index=0,
    containing_service=None,
    input_type=_GETASSETSEARCHREQUEST,
    output_type=_GETASSETSEARCHREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetSearchOrder',
    full_name='dlkit.proto.repository.AssetSearchSession.GetAssetSearchOrder',
    index=1,
    containing_service=None,
    input_type=_GETASSETSEARCHORDERREQUEST,
    output_type=_GETASSETSEARCHORDERREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsBySearch',
    full_name='dlkit.proto.repository.AssetSearchSession.GetAssetsBySearch',
    index=2,
    containing_service=None,
    input_type=_GETASSETSBYSEARCHREQUEST,
    output_type=_GETASSETSBYSEARCHREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetQueryFromInspector',
    full_name='dlkit.proto.repository.AssetSearchSession.GetAssetQueryFromInspector',
    index=3,
    containing_service=None,
    input_type=_GETASSETQUERYFROMINSPECTORREQUEST,
    output_type=_GETASSETQUERYFROMINSPECTORREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETSEARCHSESSION)

DESCRIPTOR.services_by_name['AssetSearchSession'] = _ASSETSEARCHSESSION


_ASSETADMINSESSION = _descriptor.ServiceDescriptor(
  name='AssetAdminSession',
  full_name='dlkit.proto.repository.AssetAdminSession',
  file=DESCRIPTOR,
  index=3,
  options=None,
  serialized_start=27947,
  serialized_end=30773,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.AssetAdminSession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.AssetAdminSession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateAssets',
    full_name='dlkit.proto.repository.AssetAdminSession.CanCreateAssets',
    index=2,
    containing_service=None,
    input_type=_CANCREATEASSETSREQUEST,
    output_type=_CANCREATEASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateAssetWithRecordTypes',
    full_name='dlkit.proto.repository.AssetAdminSession.CanCreateAssetWithRecordTypes',
    index=3,
    containing_service=None,
    input_type=_CANCREATEASSETWITHRECORDTYPESREQUEST,
    output_type=_CANCREATEASSETWITHRECORDTYPESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetFormForCreate',
    full_name='dlkit.proto.repository.AssetAdminSession.GetAssetFormForCreate',
    index=4,
    containing_service=None,
    input_type=_GETASSETFORMFORCREATEREQUEST,
    output_type=_GETASSETFORMFORCREATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateAsset',
    full_name='dlkit.proto.repository.AssetAdminSession.CreateAsset',
    index=5,
    containing_service=None,
    input_type=_CREATEASSETREQUEST,
    output_type=_CREATEASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanUpdateAssets',
    full_name='dlkit.proto.repository.AssetAdminSession.CanUpdateAssets',
    index=6,
    containing_service=None,
    input_type=_CANUPDATEASSETSREQUEST,
    output_type=_CANUPDATEASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetFormForUpdate',
    full_name='dlkit.proto.repository.AssetAdminSession.GetAssetFormForUpdate',
    index=7,
    containing_service=None,
    input_type=_GETASSETFORMFORUPDATEREQUEST,
    output_type=_GETASSETFORMFORUPDATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateAsset',
    full_name='dlkit.proto.repository.AssetAdminSession.UpdateAsset',
    index=8,
    containing_service=None,
    input_type=_UPDATEASSETREQUEST,
    output_type=_UPDATEASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanDeleteAssets',
    full_name='dlkit.proto.repository.AssetAdminSession.CanDeleteAssets',
    index=9,
    containing_service=None,
    input_type=_CANDELETEASSETSREQUEST,
    output_type=_CANDELETEASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteAsset',
    full_name='dlkit.proto.repository.AssetAdminSession.DeleteAsset',
    index=10,
    containing_service=None,
    input_type=_DELETEASSETREQUEST,
    output_type=_DELETEASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanManageAssetAliases',
    full_name='dlkit.proto.repository.AssetAdminSession.CanManageAssetAliases',
    index=11,
    containing_service=None,
    input_type=_CANMANAGEASSETALIASESREQUEST,
    output_type=_CANMANAGEASSETALIASESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AliasAsset',
    full_name='dlkit.proto.repository.AssetAdminSession.AliasAsset',
    index=12,
    containing_service=None,
    input_type=_ALIASASSETREQUEST,
    output_type=_ALIASASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateAssetContent',
    full_name='dlkit.proto.repository.AssetAdminSession.CanCreateAssetContent',
    index=13,
    containing_service=None,
    input_type=_CANCREATEASSETCONTENTREQUEST,
    output_type=_CANCREATEASSETCONTENTREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateAssetContentWithRecordTypes',
    full_name='dlkit.proto.repository.AssetAdminSession.CanCreateAssetContentWithRecordTypes',
    index=14,
    containing_service=None,
    input_type=_CANCREATEASSETCONTENTWITHRECORDTYPESREQUEST,
    output_type=_CANCREATEASSETCONTENTWITHRECORDTYPESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetContentFormForCreate',
    full_name='dlkit.proto.repository.AssetAdminSession.GetAssetContentFormForCreate',
    index=15,
    containing_service=None,
    input_type=_GETASSETCONTENTFORMFORCREATEREQUEST,
    output_type=_GETASSETCONTENTFORMFORCREATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateAssetContent',
    full_name='dlkit.proto.repository.AssetAdminSession.CreateAssetContent',
    index=16,
    containing_service=None,
    input_type=_CREATEASSETCONTENTREQUEST,
    output_type=_CREATEASSETCONTENTREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanUpdateAssetContents',
    full_name='dlkit.proto.repository.AssetAdminSession.CanUpdateAssetContents',
    index=17,
    containing_service=None,
    input_type=_CANUPDATEASSETCONTENTSREQUEST,
    output_type=_CANUPDATEASSETCONTENTSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetContentFormForUpdate',
    full_name='dlkit.proto.repository.AssetAdminSession.GetAssetContentFormForUpdate',
    index=18,
    containing_service=None,
    input_type=_GETASSETCONTENTFORMFORUPDATEREQUEST,
    output_type=_GETASSETCONTENTFORMFORUPDATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateAssetContent',
    full_name='dlkit.proto.repository.AssetAdminSession.UpdateAssetContent',
    index=19,
    containing_service=None,
    input_type=_UPDATEASSETCONTENTREQUEST,
    output_type=_UPDATEASSETCONTENTREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanDeleteAssetContents',
    full_name='dlkit.proto.repository.AssetAdminSession.CanDeleteAssetContents',
    index=20,
    containing_service=None,
    input_type=_CANDELETEASSETCONTENTSREQUEST,
    output_type=_CANDELETEASSETCONTENTSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteAssetContent',
    full_name='dlkit.proto.repository.AssetAdminSession.DeleteAssetContent',
    index=21,
    containing_service=None,
    input_type=_DELETEASSETCONTENTREQUEST,
    output_type=_DELETEASSETCONTENTREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETADMINSESSION)

DESCRIPTOR.services_by_name['AssetAdminSession'] = _ASSETADMINSESSION


_ASSETNOTIFICATIONSESSION = _descriptor.ServiceDescriptor(
  name='AssetNotificationSession',
  full_name='dlkit.proto.repository.AssetNotificationSession',
  file=DESCRIPTOR,
  index=4,
  options=None,
  serialized_start=30776,
  serialized_end=33160,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.AssetNotificationSession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.AssetNotificationSession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanRegisterForAssetNotifications',
    full_name='dlkit.proto.repository.AssetNotificationSession.CanRegisterForAssetNotifications',
    index=2,
    containing_service=None,
    input_type=_CANREGISTERFORASSETNOTIFICATIONSREQUEST,
    output_type=_CANREGISTERFORASSETNOTIFICATIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedRepositoryView',
    full_name='dlkit.proto.repository.AssetNotificationSession.UseFederatedRepositoryView',
    index=3,
    containing_service=None,
    input_type=_USEFEDERATEDREPOSITORYVIEWREQUEST,
    output_type=_USEFEDERATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedRepositoryView',
    full_name='dlkit.proto.repository.AssetNotificationSession.UseIsolatedRepositoryView',
    index=4,
    containing_service=None,
    input_type=_USEISOLATEDREPOSITORYVIEWREQUEST,
    output_type=_USEISOLATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForNewAssets',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForNewAssets',
    index=5,
    containing_service=None,
    input_type=_REGISTERFORNEWASSETSREQUEST,
    output_type=_REGISTERFORNEWASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForNewAssetsByGenusType',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForNewAssetsByGenusType',
    index=6,
    containing_service=None,
    input_type=_REGISTERFORNEWASSETSBYGENUSTYPEREQUEST,
    output_type=_REGISTERFORNEWASSETSBYGENUSTYPEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForChangedAssets',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForChangedAssets',
    index=7,
    containing_service=None,
    input_type=_REGISTERFORCHANGEDASSETSREQUEST,
    output_type=_REGISTERFORCHANGEDASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForChangedAssetsByGenusType',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForChangedAssetsByGenusType',
    index=8,
    containing_service=None,
    input_type=_REGISTERFORCHANGEDASSETSBYGENUSTYPEREQUEST,
    output_type=_REGISTERFORCHANGEDASSETSBYGENUSTYPEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForChangedAsset',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForChangedAsset',
    index=9,
    containing_service=None,
    input_type=_REGISTERFORCHANGEDASSETREQUEST,
    output_type=_REGISTERFORCHANGEDASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForDeletedAssets',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForDeletedAssets',
    index=10,
    containing_service=None,
    input_type=_REGISTERFORDELETEDASSETSREQUEST,
    output_type=_REGISTERFORDELETEDASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForDeletedAssetsByGenusType',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForDeletedAssetsByGenusType',
    index=11,
    containing_service=None,
    input_type=_REGISTERFORDELETEDASSETSBYGENUSTYPEREQUEST,
    output_type=_REGISTERFORDELETEDASSETSBYGENUSTYPEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RegisterForDeletedAsset',
    full_name='dlkit.proto.repository.AssetNotificationSession.RegisterForDeletedAsset',
    index=12,
    containing_service=None,
    input_type=_REGISTERFORDELETEDASSETREQUEST,
    output_type=_REGISTERFORDELETEDASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ReliableAssetNotifications',
    full_name='dlkit.proto.repository.AssetNotificationSession.ReliableAssetNotifications',
    index=13,
    containing_service=None,
    input_type=_RELIABLEASSETNOTIFICATIONSREQUEST,
    output_type=_RELIABLEASSETNOTIFICATIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UnreliableAssetNotifications',
    full_name='dlkit.proto.repository.AssetNotificationSession.UnreliableAssetNotifications',
    index=14,
    containing_service=None,
    input_type=_UNRELIABLEASSETNOTIFICATIONSREQUEST,
    output_type=_UNRELIABLEASSETNOTIFICATIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AcknowledgeAssetNotification',
    full_name='dlkit.proto.repository.AssetNotificationSession.AcknowledgeAssetNotification',
    index=15,
    containing_service=None,
    input_type=_ACKNOWLEDGEASSETNOTIFICATIONREQUEST,
    output_type=_ACKNOWLEDGEASSETNOTIFICATIONREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETNOTIFICATIONSESSION)

DESCRIPTOR.services_by_name['AssetNotificationSession'] = _ASSETNOTIFICATIONSESSION


_ASSETREPOSITORYSESSION = _descriptor.ServiceDescriptor(
  name='AssetRepositorySession',
  full_name='dlkit.proto.repository.AssetRepositorySession',
  file=DESCRIPTOR,
  index=5,
  options=None,
  serialized_start=33163,
  serialized_end=34378,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanLookupAssetRepositoryMappings',
    full_name='dlkit.proto.repository.AssetRepositorySession.CanLookupAssetRepositoryMappings',
    index=0,
    containing_service=None,
    input_type=_CANLOOKUPASSETREPOSITORYMAPPINGSREQUEST,
    output_type=_CANLOOKUPASSETREPOSITORYMAPPINGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeRepositoryView',
    full_name='dlkit.proto.repository.AssetRepositorySession.UseComparativeRepositoryView',
    index=1,
    containing_service=None,
    input_type=_USECOMPARATIVEREPOSITORYVIEWREQUEST,
    output_type=_USECOMPARATIVEREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryRepositoryView',
    full_name='dlkit.proto.repository.AssetRepositorySession.UsePlenaryRepositoryView',
    index=2,
    containing_service=None,
    input_type=_USEPLENARYREPOSITORYVIEWREQUEST,
    output_type=_USEPLENARYREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetIdsByRepository',
    full_name='dlkit.proto.repository.AssetRepositorySession.GetAssetIdsByRepository',
    index=3,
    containing_service=None,
    input_type=_GETASSETIDSBYREPOSITORYREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByRepository',
    full_name='dlkit.proto.repository.AssetRepositorySession.GetAssetsByRepository',
    index=4,
    containing_service=None,
    input_type=_GETASSETSBYREPOSITORYREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetIdsByRepositories',
    full_name='dlkit.proto.repository.AssetRepositorySession.GetAssetIdsByRepositories',
    index=5,
    containing_service=None,
    input_type=_GETASSETIDSBYREPOSITORIESREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssetsByRepositories',
    full_name='dlkit.proto.repository.AssetRepositorySession.GetAssetsByRepositories',
    index=6,
    containing_service=None,
    input_type=_GETASSETSBYREPOSITORIESREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryIdsByAsset',
    full_name='dlkit.proto.repository.AssetRepositorySession.GetRepositoryIdsByAsset',
    index=7,
    containing_service=None,
    input_type=_GETREPOSITORYIDSBYASSETREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByAsset',
    full_name='dlkit.proto.repository.AssetRepositorySession.GetRepositoriesByAsset',
    index=8,
    containing_service=None,
    input_type=_GETREPOSITORIESBYASSETREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETREPOSITORYSESSION)

DESCRIPTOR.services_by_name['AssetRepositorySession'] = _ASSETREPOSITORYSESSION


_ASSETREPOSITORYASSIGNMENTSESSION = _descriptor.ServiceDescriptor(
  name='AssetRepositoryAssignmentSession',
  full_name='dlkit.proto.repository.AssetRepositoryAssignmentSession',
  file=DESCRIPTOR,
  index=6,
  options=None,
  serialized_start=34381,
  serialized_end=35249,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanAssignAssets',
    full_name='dlkit.proto.repository.AssetRepositoryAssignmentSession.CanAssignAssets',
    index=0,
    containing_service=None,
    input_type=_CANASSIGNASSETSREQUEST,
    output_type=_CANASSIGNASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanAssignAssetsToRepository',
    full_name='dlkit.proto.repository.AssetRepositoryAssignmentSession.CanAssignAssetsToRepository',
    index=1,
    containing_service=None,
    input_type=_CANASSIGNASSETSTOREPOSITORYREQUEST,
    output_type=_CANASSIGNASSETSTOREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssignableRepositoryIds',
    full_name='dlkit.proto.repository.AssetRepositoryAssignmentSession.GetAssignableRepositoryIds',
    index=2,
    containing_service=None,
    input_type=_GETASSIGNABLEREPOSITORYIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssignableRepositoryIdsForAsset',
    full_name='dlkit.proto.repository.AssetRepositoryAssignmentSession.GetAssignableRepositoryIdsForAsset',
    index=3,
    containing_service=None,
    input_type=_GETASSIGNABLEREPOSITORYIDSFORASSETREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AssignAssetToRepository',
    full_name='dlkit.proto.repository.AssetRepositoryAssignmentSession.AssignAssetToRepository',
    index=4,
    containing_service=None,
    input_type=_ASSIGNASSETTOREPOSITORYREQUEST,
    output_type=_ASSIGNASSETTOREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UnassignAssetFromRepository',
    full_name='dlkit.proto.repository.AssetRepositoryAssignmentSession.UnassignAssetFromRepository',
    index=5,
    containing_service=None,
    input_type=_UNASSIGNASSETFROMREPOSITORYREQUEST,
    output_type=_UNASSIGNASSETFROMREPOSITORYREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETREPOSITORYASSIGNMENTSESSION)

DESCRIPTOR.services_by_name['AssetRepositoryAssignmentSession'] = _ASSETREPOSITORYASSIGNMENTSESSION


_ASSETCOMPOSITIONSESSION = _descriptor.ServiceDescriptor(
  name='AssetCompositionSession',
  full_name='dlkit.proto.repository.AssetCompositionSession',
  file=DESCRIPTOR,
  index=7,
  options=None,
  serialized_start=35252,
  serialized_end=36513,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.AssetCompositionSession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.AssetCompositionSession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanAccessAssetCompositions',
    full_name='dlkit.proto.repository.AssetCompositionSession.CanAccessAssetCompositions',
    index=2,
    containing_service=None,
    input_type=_CANACCESSASSETCOMPOSITIONSREQUEST,
    output_type=_CANACCESSASSETCOMPOSITIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeAssetCompositionView',
    full_name='dlkit.proto.repository.AssetCompositionSession.UseComparativeAssetCompositionView',
    index=3,
    containing_service=None,
    input_type=_USECOMPARATIVEASSETCOMPOSITIONVIEWREQUEST,
    output_type=_USECOMPARATIVEASSETCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryAssetCompositionView',
    full_name='dlkit.proto.repository.AssetCompositionSession.UsePlenaryAssetCompositionView',
    index=4,
    containing_service=None,
    input_type=_USEPLENARYASSETCOMPOSITIONVIEWREQUEST,
    output_type=_USEPLENARYASSETCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedRepositoryView',
    full_name='dlkit.proto.repository.AssetCompositionSession.UseFederatedRepositoryView',
    index=5,
    containing_service=None,
    input_type=_USEFEDERATEDREPOSITORYVIEWREQUEST,
    output_type=_USEFEDERATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedRepositoryView',
    full_name='dlkit.proto.repository.AssetCompositionSession.UseIsolatedRepositoryView',
    index=6,
    containing_service=None,
    input_type=_USEISOLATEDREPOSITORYVIEWREQUEST,
    output_type=_USEISOLATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionAssets',
    full_name='dlkit.proto.repository.AssetCompositionSession.GetCompositionAssets',
    index=7,
    containing_service=None,
    input_type=_GETCOMPOSITIONASSETSREQUEST,
    output_type=_ASSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByAsset',
    full_name='dlkit.proto.repository.AssetCompositionSession.GetCompositionsByAsset',
    index=8,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYASSETREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETCOMPOSITIONSESSION)

DESCRIPTOR.services_by_name['AssetCompositionSession'] = _ASSETCOMPOSITIONSESSION


_ASSETCOMPOSITIONDESIGNSESSION = _descriptor.ServiceDescriptor(
  name='AssetCompositionDesignSession',
  full_name='dlkit.proto.repository.AssetCompositionDesignSession',
  file=DESCRIPTOR,
  index=8,
  options=None,
  serialized_start=36516,
  serialized_end=37416,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanComposeAssets',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.CanComposeAssets',
    index=2,
    containing_service=None,
    input_type=_CANCOMPOSEASSETSREQUEST,
    output_type=_CANCOMPOSEASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddAsset',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.AddAsset',
    index=3,
    containing_service=None,
    input_type=_ADDASSETREQUEST,
    output_type=_ADDASSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='MoveAssetAhead',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.MoveAssetAhead',
    index=4,
    containing_service=None,
    input_type=_MOVEASSETAHEADREQUEST,
    output_type=_MOVEASSETAHEADREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='MoveAssetBehind',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.MoveAssetBehind',
    index=5,
    containing_service=None,
    input_type=_MOVEASSETBEHINDREQUEST,
    output_type=_MOVEASSETBEHINDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='OrderAssets',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.OrderAssets',
    index=6,
    containing_service=None,
    input_type=_ORDERASSETSREQUEST,
    output_type=_ORDERASSETSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveAsset',
    full_name='dlkit.proto.repository.AssetCompositionDesignSession.RemoveAsset',
    index=7,
    containing_service=None,
    input_type=_REMOVEASSETREQUEST,
    output_type=_REMOVEASSETREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSETCOMPOSITIONDESIGNSESSION)

DESCRIPTOR.services_by_name['AssetCompositionDesignSession'] = _ASSETCOMPOSITIONDESIGNSESSION


_COMPOSITIONLOOKUPSESSION = _descriptor.ServiceDescriptor(
  name='CompositionLookupSession',
  full_name='dlkit.proto.repository.CompositionLookupSession',
  file=DESCRIPTOR,
  index=9,
  options=None,
  serialized_start=37419,
  serialized_end=39892,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanLookupCompositions',
    full_name='dlkit.proto.repository.CompositionLookupSession.CanLookupCompositions',
    index=2,
    containing_service=None,
    input_type=_CANLOOKUPCOMPOSITIONSREQUEST,
    output_type=_CANLOOKUPCOMPOSITIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeCompositionView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UseComparativeCompositionView',
    index=3,
    containing_service=None,
    input_type=_USECOMPARATIVECOMPOSITIONVIEWREQUEST,
    output_type=_USECOMPARATIVECOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryCompositionView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UsePlenaryCompositionView',
    index=4,
    containing_service=None,
    input_type=_USEPLENARYCOMPOSITIONVIEWREQUEST,
    output_type=_USEPLENARYCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedRepositoryView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UseFederatedRepositoryView',
    index=5,
    containing_service=None,
    input_type=_USEFEDERATEDREPOSITORYVIEWREQUEST,
    output_type=_USEFEDERATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedRepositoryView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UseIsolatedRepositoryView',
    index=6,
    containing_service=None,
    input_type=_USEISOLATEDREPOSITORYVIEWREQUEST,
    output_type=_USEISOLATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseActiveCompositionView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UseActiveCompositionView',
    index=7,
    containing_service=None,
    input_type=_USEACTIVECOMPOSITIONVIEWREQUEST,
    output_type=_USEACTIVECOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseAnyStatusCompositionView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UseAnyStatusCompositionView',
    index=8,
    containing_service=None,
    input_type=_USEANYSTATUSCOMPOSITIONVIEWREQUEST,
    output_type=_USEANYSTATUSCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseSequesteredCompositionView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UseSequesteredCompositionView',
    index=9,
    containing_service=None,
    input_type=_USESEQUESTEREDCOMPOSITIONVIEWREQUEST,
    output_type=_USESEQUESTEREDCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseUnsequesteredCompositionView',
    full_name='dlkit.proto.repository.CompositionLookupSession.UseUnsequesteredCompositionView',
    index=10,
    containing_service=None,
    input_type=_USEUNSEQUESTEREDCOMPOSITIONVIEWREQUEST,
    output_type=_USEUNSEQUESTEREDCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetComposition',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetComposition',
    index=11,
    containing_service=None,
    input_type=_GETCOMPOSITIONREQUEST,
    output_type=_GETCOMPOSITIONREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByIds',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetCompositionsByIds',
    index=12,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYIDSREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByGenusType',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetCompositionsByGenusType',
    index=13,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYGENUSTYPEREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByParentGenusType',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetCompositionsByParentGenusType',
    index=14,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYPARENTGENUSTYPEREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByRecordType',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetCompositionsByRecordType',
    index=15,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYRECORDTYPEREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByProvider',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetCompositionsByProvider',
    index=16,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYPROVIDERREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositions',
    full_name='dlkit.proto.repository.CompositionLookupSession.GetCompositions',
    index=17,
    containing_service=None,
    input_type=_GETCOMPOSITIONSREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPOSITIONLOOKUPSESSION)

DESCRIPTOR.services_by_name['CompositionLookupSession'] = _COMPOSITIONLOOKUPSESSION


_COMPOSITIONQUERYSESSION = _descriptor.ServiceDescriptor(
  name='CompositionQuerySession',
  full_name='dlkit.proto.repository.CompositionQuerySession',
  file=DESCRIPTOR,
  index=10,
  options=None,
  serialized_start=39895,
  serialized_end=41144,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.CompositionQuerySession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.CompositionQuerySession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanSearchCompositions',
    full_name='dlkit.proto.repository.CompositionQuerySession.CanSearchCompositions',
    index=2,
    containing_service=None,
    input_type=_CANSEARCHCOMPOSITIONSREQUEST,
    output_type=_CANSEARCHCOMPOSITIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseFederatedRepositoryView',
    full_name='dlkit.proto.repository.CompositionQuerySession.UseFederatedRepositoryView',
    index=3,
    containing_service=None,
    input_type=_USEFEDERATEDREPOSITORYVIEWREQUEST,
    output_type=_USEFEDERATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseIsolatedRepositoryView',
    full_name='dlkit.proto.repository.CompositionQuerySession.UseIsolatedRepositoryView',
    index=4,
    containing_service=None,
    input_type=_USEISOLATEDREPOSITORYVIEWREQUEST,
    output_type=_USEISOLATEDREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseSequesteredCompositionView',
    full_name='dlkit.proto.repository.CompositionQuerySession.UseSequesteredCompositionView',
    index=5,
    containing_service=None,
    input_type=_USESEQUESTEREDCOMPOSITIONVIEWREQUEST,
    output_type=_USESEQUESTEREDCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseUnsequesteredCompositionView',
    full_name='dlkit.proto.repository.CompositionQuerySession.UseUnsequesteredCompositionView',
    index=6,
    containing_service=None,
    input_type=_USEUNSEQUESTEREDCOMPOSITIONVIEWREQUEST,
    output_type=_USEUNSEQUESTEREDCOMPOSITIONVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionQuery',
    full_name='dlkit.proto.repository.CompositionQuerySession.GetCompositionQuery',
    index=7,
    containing_service=None,
    input_type=_GETCOMPOSITIONQUERYREQUEST,
    output_type=_GETCOMPOSITIONQUERYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByQuery',
    full_name='dlkit.proto.repository.CompositionQuerySession.GetCompositionsByQuery',
    index=8,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYQUERYREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPOSITIONQUERYSESSION)

DESCRIPTOR.services_by_name['CompositionQuerySession'] = _COMPOSITIONQUERYSESSION


_COMPOSITIONSEARCHSESSION = _descriptor.ServiceDescriptor(
  name='CompositionSearchSession',
  full_name='dlkit.proto.repository.CompositionSearchSession',
  file=DESCRIPTOR,
  index=11,
  options=None,
  serialized_start=41147,
  serialized_end=41757,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetCompositionSearch',
    full_name='dlkit.proto.repository.CompositionSearchSession.GetCompositionSearch',
    index=0,
    containing_service=None,
    input_type=_GETCOMPOSITIONSEARCHREQUEST,
    output_type=_GETCOMPOSITIONSEARCHREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionSearchOrder',
    full_name='dlkit.proto.repository.CompositionSearchSession.GetCompositionSearchOrder',
    index=1,
    containing_service=None,
    input_type=_GETCOMPOSITIONSEARCHORDERREQUEST,
    output_type=_GETCOMPOSITIONSEARCHORDERREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsBySearch',
    full_name='dlkit.proto.repository.CompositionSearchSession.GetCompositionsBySearch',
    index=2,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYSEARCHREQUEST,
    output_type=_GETCOMPOSITIONSBYSEARCHREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionQueryFromInspector',
    full_name='dlkit.proto.repository.CompositionSearchSession.GetCompositionQueryFromInspector',
    index=3,
    containing_service=None,
    input_type=_GETCOMPOSITIONQUERYFROMINSPECTORREQUEST,
    output_type=_GETCOMPOSITIONQUERYFROMINSPECTORREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPOSITIONSEARCHSESSION)

DESCRIPTOR.services_by_name['CompositionSearchSession'] = _COMPOSITIONSEARCHSESSION


_COMPOSITIONADMINSESSION = _descriptor.ServiceDescriptor(
  name='CompositionAdminSession',
  full_name='dlkit.proto.repository.CompositionAdminSession',
  file=DESCRIPTOR,
  index=12,
  options=None,
  serialized_start=41760,
  serialized_end=43922,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryId',
    full_name='dlkit.proto.repository.CompositionAdminSession.GetRepositoryId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYIDREQUEST,
    output_type=_GETREPOSITORYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.CompositionAdminSession.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateCompositions',
    full_name='dlkit.proto.repository.CompositionAdminSession.CanCreateCompositions',
    index=2,
    containing_service=None,
    input_type=_CANCREATECOMPOSITIONSREQUEST,
    output_type=_CANCREATECOMPOSITIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateCompositionWithRecordTypes',
    full_name='dlkit.proto.repository.CompositionAdminSession.CanCreateCompositionWithRecordTypes',
    index=3,
    containing_service=None,
    input_type=_CANCREATECOMPOSITIONWITHRECORDTYPESREQUEST,
    output_type=_CANCREATECOMPOSITIONWITHRECORDTYPESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionFormForCreate',
    full_name='dlkit.proto.repository.CompositionAdminSession.GetCompositionFormForCreate',
    index=4,
    containing_service=None,
    input_type=_GETCOMPOSITIONFORMFORCREATEREQUEST,
    output_type=_GETCOMPOSITIONFORMFORCREATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateComposition',
    full_name='dlkit.proto.repository.CompositionAdminSession.CreateComposition',
    index=5,
    containing_service=None,
    input_type=_CREATECOMPOSITIONREQUEST,
    output_type=_CREATECOMPOSITIONREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanUpdateCompositions',
    full_name='dlkit.proto.repository.CompositionAdminSession.CanUpdateCompositions',
    index=6,
    containing_service=None,
    input_type=_CANUPDATECOMPOSITIONSREQUEST,
    output_type=_CANUPDATECOMPOSITIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionFormForUpdate',
    full_name='dlkit.proto.repository.CompositionAdminSession.GetCompositionFormForUpdate',
    index=7,
    containing_service=None,
    input_type=_GETCOMPOSITIONFORMFORUPDATEREQUEST,
    output_type=_GETCOMPOSITIONFORMFORUPDATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateComposition',
    full_name='dlkit.proto.repository.CompositionAdminSession.UpdateComposition',
    index=8,
    containing_service=None,
    input_type=_UPDATECOMPOSITIONREQUEST,
    output_type=_UPDATECOMPOSITIONREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanDeleteCompositions',
    full_name='dlkit.proto.repository.CompositionAdminSession.CanDeleteCompositions',
    index=9,
    containing_service=None,
    input_type=_CANDELETECOMPOSITIONSREQUEST,
    output_type=_CANDELETECOMPOSITIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteComposition',
    full_name='dlkit.proto.repository.CompositionAdminSession.DeleteComposition',
    index=10,
    containing_service=None,
    input_type=_DELETECOMPOSITIONREQUEST,
    output_type=_DELETECOMPOSITIONREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteCompositionNode',
    full_name='dlkit.proto.repository.CompositionAdminSession.DeleteCompositionNode',
    index=11,
    containing_service=None,
    input_type=_DELETECOMPOSITIONNODEREQUEST,
    output_type=_DELETECOMPOSITIONNODEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddCompositionChild',
    full_name='dlkit.proto.repository.CompositionAdminSession.AddCompositionChild',
    index=12,
    containing_service=None,
    input_type=_ADDCOMPOSITIONCHILDREQUEST,
    output_type=_ADDCOMPOSITIONCHILDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveCompositionChild',
    full_name='dlkit.proto.repository.CompositionAdminSession.RemoveCompositionChild',
    index=13,
    containing_service=None,
    input_type=_REMOVECOMPOSITIONCHILDREQUEST,
    output_type=_REMOVECOMPOSITIONCHILDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanManageCompositionAliases',
    full_name='dlkit.proto.repository.CompositionAdminSession.CanManageCompositionAliases',
    index=14,
    containing_service=None,
    input_type=_CANMANAGECOMPOSITIONALIASESREQUEST,
    output_type=_CANMANAGECOMPOSITIONALIASESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AliasComposition',
    full_name='dlkit.proto.repository.CompositionAdminSession.AliasComposition',
    index=15,
    containing_service=None,
    input_type=_ALIASCOMPOSITIONREQUEST,
    output_type=_ALIASCOMPOSITIONREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPOSITIONADMINSESSION)

DESCRIPTOR.services_by_name['CompositionAdminSession'] = _COMPOSITIONADMINSESSION


_COMPOSITIONREPOSITORYSESSION = _descriptor.ServiceDescriptor(
  name='CompositionRepositorySession',
  full_name='dlkit.proto.repository.CompositionRepositorySession',
  file=DESCRIPTOR,
  index=13,
  options=None,
  serialized_start=43925,
  serialized_end=45320,
  methods=[
  _descriptor.MethodDescriptor(
    name='UseComparativeCompositionRepositoryView',
    full_name='dlkit.proto.repository.CompositionRepositorySession.UseComparativeCompositionRepositoryView',
    index=0,
    containing_service=None,
    input_type=_USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREQUEST,
    output_type=_USECOMPARATIVECOMPOSITIONREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryCompositionRepositoryView',
    full_name='dlkit.proto.repository.CompositionRepositorySession.UsePlenaryCompositionRepositoryView',
    index=1,
    containing_service=None,
    input_type=_USEPLENARYCOMPOSITIONREPOSITORYVIEWREQUEST,
    output_type=_USEPLENARYCOMPOSITIONREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanLookupCompositionRepositoryMappings',
    full_name='dlkit.proto.repository.CompositionRepositorySession.CanLookupCompositionRepositoryMappings',
    index=2,
    containing_service=None,
    input_type=_CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREQUEST,
    output_type=_CANLOOKUPCOMPOSITIONREPOSITORYMAPPINGSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionIdsByRepository',
    full_name='dlkit.proto.repository.CompositionRepositorySession.GetCompositionIdsByRepository',
    index=3,
    containing_service=None,
    input_type=_GETCOMPOSITIONIDSBYREPOSITORYREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByRepository',
    full_name='dlkit.proto.repository.CompositionRepositorySession.GetCompositionsByRepository',
    index=4,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYREPOSITORYREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionIdsByRepositories',
    full_name='dlkit.proto.repository.CompositionRepositorySession.GetCompositionIdsByRepositories',
    index=5,
    containing_service=None,
    input_type=_GETCOMPOSITIONIDSBYREPOSITORIESREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCompositionsByRepositories',
    full_name='dlkit.proto.repository.CompositionRepositorySession.GetCompositionsByRepositories',
    index=6,
    containing_service=None,
    input_type=_GETCOMPOSITIONSBYREPOSITORIESREQUEST,
    output_type=_COMPOSITION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryIdsByComposition',
    full_name='dlkit.proto.repository.CompositionRepositorySession.GetRepositoryIdsByComposition',
    index=7,
    containing_service=None,
    input_type=_GETREPOSITORYIDSBYCOMPOSITIONREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByComposition',
    full_name='dlkit.proto.repository.CompositionRepositorySession.GetRepositoriesByComposition',
    index=8,
    containing_service=None,
    input_type=_GETREPOSITORIESBYCOMPOSITIONREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPOSITIONREPOSITORYSESSION)

DESCRIPTOR.services_by_name['CompositionRepositorySession'] = _COMPOSITIONREPOSITORYSESSION


_COMPOSITIONREPOSITORYASSIGNMENTSESSION = _descriptor.ServiceDescriptor(
  name='CompositionRepositoryAssignmentSession',
  full_name='dlkit.proto.repository.CompositionRepositoryAssignmentSession',
  file=DESCRIPTOR,
  index=14,
  options=None,
  serialized_start=45323,
  serialized_end=46282,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanAssignCompositions',
    full_name='dlkit.proto.repository.CompositionRepositoryAssignmentSession.CanAssignCompositions',
    index=0,
    containing_service=None,
    input_type=_CANASSIGNCOMPOSITIONSREQUEST,
    output_type=_CANASSIGNCOMPOSITIONSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanAssignCompositionsToRepository',
    full_name='dlkit.proto.repository.CompositionRepositoryAssignmentSession.CanAssignCompositionsToRepository',
    index=1,
    containing_service=None,
    input_type=_CANASSIGNCOMPOSITIONSTOREPOSITORYREQUEST,
    output_type=_CANASSIGNCOMPOSITIONSTOREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssignableRepositoryIds',
    full_name='dlkit.proto.repository.CompositionRepositoryAssignmentSession.GetAssignableRepositoryIds',
    index=2,
    containing_service=None,
    input_type=_GETASSIGNABLEREPOSITORYIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAssignableRepositoryIdsForComposition',
    full_name='dlkit.proto.repository.CompositionRepositoryAssignmentSession.GetAssignableRepositoryIdsForComposition',
    index=3,
    containing_service=None,
    input_type=_GETASSIGNABLEREPOSITORYIDSFORCOMPOSITIONREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AssignCompositionToRepository',
    full_name='dlkit.proto.repository.CompositionRepositoryAssignmentSession.AssignCompositionToRepository',
    index=4,
    containing_service=None,
    input_type=_ASSIGNCOMPOSITIONTOREPOSITORYREQUEST,
    output_type=_ASSIGNCOMPOSITIONTOREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UnassignCompositionFromRepository',
    full_name='dlkit.proto.repository.CompositionRepositoryAssignmentSession.UnassignCompositionFromRepository',
    index=5,
    containing_service=None,
    input_type=_UNASSIGNCOMPOSITIONFROMREPOSITORYREQUEST,
    output_type=_UNASSIGNCOMPOSITIONFROMREPOSITORYREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPOSITIONREPOSITORYASSIGNMENTSESSION)

DESCRIPTOR.services_by_name['CompositionRepositoryAssignmentSession'] = _COMPOSITIONREPOSITORYASSIGNMENTSESSION


_REPOSITORYLOOKUPSESSION = _descriptor.ServiceDescriptor(
  name='RepositoryLookupSession',
  full_name='dlkit.proto.repository.RepositoryLookupSession',
  file=DESCRIPTOR,
  index=15,
  options=None,
  serialized_start=46285,
  serialized_end=47605,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanLookupRepositories',
    full_name='dlkit.proto.repository.RepositoryLookupSession.CanLookupRepositories',
    index=0,
    containing_service=None,
    input_type=_CANLOOKUPREPOSITORIESREQUEST,
    output_type=_CANLOOKUPREPOSITORIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeRepositoryView',
    full_name='dlkit.proto.repository.RepositoryLookupSession.UseComparativeRepositoryView',
    index=1,
    containing_service=None,
    input_type=_USECOMPARATIVEREPOSITORYVIEWREQUEST,
    output_type=_USECOMPARATIVEREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryRepositoryView',
    full_name='dlkit.proto.repository.RepositoryLookupSession.UsePlenaryRepositoryView',
    index=2,
    containing_service=None,
    input_type=_USEPLENARYREPOSITORYVIEWREQUEST,
    output_type=_USEPLENARYREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='dlkit.proto.repository.RepositoryLookupSession.GetRepository',
    index=3,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByIds',
    full_name='dlkit.proto.repository.RepositoryLookupSession.GetRepositoriesByIds',
    index=4,
    containing_service=None,
    input_type=_GETREPOSITORIESBYIDSREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByGenusType',
    full_name='dlkit.proto.repository.RepositoryLookupSession.GetRepositoriesByGenusType',
    index=5,
    containing_service=None,
    input_type=_GETREPOSITORIESBYGENUSTYPEREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByParentGenusType',
    full_name='dlkit.proto.repository.RepositoryLookupSession.GetRepositoriesByParentGenusType',
    index=6,
    containing_service=None,
    input_type=_GETREPOSITORIESBYPARENTGENUSTYPEREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByRecordType',
    full_name='dlkit.proto.repository.RepositoryLookupSession.GetRepositoriesByRecordType',
    index=7,
    containing_service=None,
    input_type=_GETREPOSITORIESBYRECORDTYPEREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByProvider',
    full_name='dlkit.proto.repository.RepositoryLookupSession.GetRepositoriesByProvider',
    index=8,
    containing_service=None,
    input_type=_GETREPOSITORIESBYPROVIDERREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositories',
    full_name='dlkit.proto.repository.RepositoryLookupSession.GetRepositories',
    index=9,
    containing_service=None,
    input_type=_GETREPOSITORIESREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_REPOSITORYLOOKUPSESSION)

DESCRIPTOR.services_by_name['RepositoryLookupSession'] = _REPOSITORYLOOKUPSESSION


_REPOSITORYQUERYSESSION = _descriptor.ServiceDescriptor(
  name='RepositoryQuerySession',
  full_name='dlkit.proto.repository.RepositoryQuerySession',
  file=DESCRIPTOR,
  index=16,
  options=None,
  serialized_start=47608,
  serialized_end=48011,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanSearchRepositories',
    full_name='dlkit.proto.repository.RepositoryQuerySession.CanSearchRepositories',
    index=0,
    containing_service=None,
    input_type=_CANSEARCHREPOSITORIESREQUEST,
    output_type=_CANSEARCHREPOSITORIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryQuery',
    full_name='dlkit.proto.repository.RepositoryQuerySession.GetRepositoryQuery',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYQUERYREQUEST,
    output_type=_GETREPOSITORYQUERYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoriesByQuery',
    full_name='dlkit.proto.repository.RepositoryQuerySession.GetRepositoriesByQuery',
    index=2,
    containing_service=None,
    input_type=_GETREPOSITORIESBYQUERYREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_REPOSITORYQUERYSESSION)

DESCRIPTOR.services_by_name['RepositoryQuerySession'] = _REPOSITORYQUERYSESSION


_REPOSITORYADMINSESSION = _descriptor.ServiceDescriptor(
  name='RepositoryAdminSession',
  full_name='dlkit.proto.repository.RepositoryAdminSession',
  file=DESCRIPTOR,
  index=17,
  options=None,
  serialized_start=48014,
  serialized_end=49529,
  methods=[
  _descriptor.MethodDescriptor(
    name='CanCreateRepositories',
    full_name='dlkit.proto.repository.RepositoryAdminSession.CanCreateRepositories',
    index=0,
    containing_service=None,
    input_type=_CANCREATEREPOSITORIESREQUEST,
    output_type=_CANCREATEREPOSITORIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanCreateRepositoryWithRecordTypes',
    full_name='dlkit.proto.repository.RepositoryAdminSession.CanCreateRepositoryWithRecordTypes',
    index=1,
    containing_service=None,
    input_type=_CANCREATEREPOSITORYWITHRECORDTYPESREQUEST,
    output_type=_CANCREATEREPOSITORYWITHRECORDTYPESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryFormForCreate',
    full_name='dlkit.proto.repository.RepositoryAdminSession.GetRepositoryFormForCreate',
    index=2,
    containing_service=None,
    input_type=_GETREPOSITORYFORMFORCREATEREQUEST,
    output_type=_GETREPOSITORYFORMFORCREATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateRepository',
    full_name='dlkit.proto.repository.RepositoryAdminSession.CreateRepository',
    index=3,
    containing_service=None,
    input_type=_CREATEREPOSITORYREQUEST,
    output_type=_CREATEREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanUpdateRepositories',
    full_name='dlkit.proto.repository.RepositoryAdminSession.CanUpdateRepositories',
    index=4,
    containing_service=None,
    input_type=_CANUPDATEREPOSITORIESREQUEST,
    output_type=_CANUPDATEREPOSITORIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryFormForUpdate',
    full_name='dlkit.proto.repository.RepositoryAdminSession.GetRepositoryFormForUpdate',
    index=5,
    containing_service=None,
    input_type=_GETREPOSITORYFORMFORUPDATEREQUEST,
    output_type=_GETREPOSITORYFORMFORUPDATEREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateRepository',
    full_name='dlkit.proto.repository.RepositoryAdminSession.UpdateRepository',
    index=6,
    containing_service=None,
    input_type=_UPDATEREPOSITORYREQUEST,
    output_type=_UPDATEREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanDeleteRepositories',
    full_name='dlkit.proto.repository.RepositoryAdminSession.CanDeleteRepositories',
    index=7,
    containing_service=None,
    input_type=_CANDELETEREPOSITORIESREQUEST,
    output_type=_CANDELETEREPOSITORIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteRepository',
    full_name='dlkit.proto.repository.RepositoryAdminSession.DeleteRepository',
    index=8,
    containing_service=None,
    input_type=_DELETEREPOSITORYREQUEST,
    output_type=_DELETEREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanManageRepositoryAliases',
    full_name='dlkit.proto.repository.RepositoryAdminSession.CanManageRepositoryAliases',
    index=9,
    containing_service=None,
    input_type=_CANMANAGEREPOSITORYALIASESREQUEST,
    output_type=_CANMANAGEREPOSITORYALIASESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AliasRepository',
    full_name='dlkit.proto.repository.RepositoryAdminSession.AliasRepository',
    index=10,
    containing_service=None,
    input_type=_ALIASREPOSITORYREQUEST,
    output_type=_ALIASREPOSITORYREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_REPOSITORYADMINSESSION)

DESCRIPTOR.services_by_name['RepositoryAdminSession'] = _REPOSITORYADMINSESSION


_REPOSITORYHIERARCHYSESSION = _descriptor.ServiceDescriptor(
  name='RepositoryHierarchySession',
  full_name='dlkit.proto.repository.RepositoryHierarchySession',
  file=DESCRIPTOR,
  index=18,
  options=None,
  serialized_start=49532,
  serialized_end=52059,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryHierarchyId',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetRepositoryHierarchyId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYHIERARCHYIDREQUEST,
    output_type=_GETREPOSITORYHIERARCHYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryHierarchy',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetRepositoryHierarchy',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYHIERARCHYREQUEST,
    output_type=_GETREPOSITORYHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanAccessRepositoryHierarchy',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.CanAccessRepositoryHierarchy',
    index=2,
    containing_service=None,
    input_type=_CANACCESSREPOSITORYHIERARCHYREQUEST,
    output_type=_CANACCESSREPOSITORYHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UseComparativeRepositoryView',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.UseComparativeRepositoryView',
    index=3,
    containing_service=None,
    input_type=_USECOMPARATIVEREPOSITORYVIEWREQUEST,
    output_type=_USECOMPARATIVEREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UsePlenaryRepositoryView',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.UsePlenaryRepositoryView',
    index=4,
    containing_service=None,
    input_type=_USEPLENARYREPOSITORYVIEWREQUEST,
    output_type=_USEPLENARYREPOSITORYVIEWREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRootRepositoryIds',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetRootRepositoryIds',
    index=5,
    containing_service=None,
    input_type=_GETROOTREPOSITORYIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRootRepositories',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetRootRepositories',
    index=6,
    containing_service=None,
    input_type=_GETROOTREPOSITORIESREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HasParentRepositories',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.HasParentRepositories',
    index=7,
    containing_service=None,
    input_type=_HASPARENTREPOSITORIESREQUEST,
    output_type=_HASPARENTREPOSITORIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsParentOfRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.IsParentOfRepository',
    index=8,
    containing_service=None,
    input_type=_ISPARENTOFREPOSITORYREQUEST,
    output_type=_ISPARENTOFREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParentRepositoryIds',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetParentRepositoryIds',
    index=9,
    containing_service=None,
    input_type=_GETPARENTREPOSITORYIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetParentRepositories',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetParentRepositories',
    index=10,
    containing_service=None,
    input_type=_GETPARENTREPOSITORIESREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsAncestorOfRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.IsAncestorOfRepository',
    index=11,
    containing_service=None,
    input_type=_ISANCESTOROFREPOSITORYREQUEST,
    output_type=_ISANCESTOROFREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HasChildRepositories',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.HasChildRepositories',
    index=12,
    containing_service=None,
    input_type=_HASCHILDREPOSITORIESREQUEST,
    output_type=_HASCHILDREPOSITORIESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsChildOfRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.IsChildOfRepository',
    index=13,
    containing_service=None,
    input_type=_ISCHILDOFREPOSITORYREQUEST,
    output_type=_ISCHILDOFREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetChildRepositoryIds',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetChildRepositoryIds',
    index=14,
    containing_service=None,
    input_type=_GETCHILDREPOSITORYIDSREQUEST,
    output_type=dlkit_dot_primordium_dot_id_dot_primitives__pb2._ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetChildRepositories',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetChildRepositories',
    index=15,
    containing_service=None,
    input_type=_GETCHILDREPOSITORIESREQUEST,
    output_type=_REPOSITORY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='IsDescendantOfRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.IsDescendantOfRepository',
    index=16,
    containing_service=None,
    input_type=_ISDESCENDANTOFREPOSITORYREQUEST,
    output_type=_ISDESCENDANTOFREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryNodeIds',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetRepositoryNodeIds',
    index=17,
    containing_service=None,
    input_type=_GETREPOSITORYNODEIDSREQUEST,
    output_type=_GETREPOSITORYNODEIDSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryNodes',
    full_name='dlkit.proto.repository.RepositoryHierarchySession.GetRepositoryNodes',
    index=18,
    containing_service=None,
    input_type=_GETREPOSITORYNODESREQUEST,
    output_type=_GETREPOSITORYNODESREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_REPOSITORYHIERARCHYSESSION)

DESCRIPTOR.services_by_name['RepositoryHierarchySession'] = _REPOSITORYHIERARCHYSESSION


_REPOSITORYHIERARCHYDESIGNSESSION = _descriptor.ServiceDescriptor(
  name='RepositoryHierarchyDesignSession',
  full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession',
  file=DESCRIPTOR,
  index=19,
  options=None,
  serialized_start=52062,
  serialized_end=53181,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRepositoryHierarchyId',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.GetRepositoryHierarchyId',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORYHIERARCHYIDREQUEST,
    output_type=_GETREPOSITORYHIERARCHYIDREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetRepositoryHierarchy',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.GetRepositoryHierarchy',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYHIERARCHYREQUEST,
    output_type=_GETREPOSITORYHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CanModifyRepositoryHierarchy',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.CanModifyRepositoryHierarchy',
    index=2,
    containing_service=None,
    input_type=_CANMODIFYREPOSITORYHIERARCHYREQUEST,
    output_type=_CANMODIFYREPOSITORYHIERARCHYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddRootRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.AddRootRepository',
    index=3,
    containing_service=None,
    input_type=_ADDROOTREPOSITORYREQUEST,
    output_type=_ADDROOTREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveRootRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.RemoveRootRepository',
    index=4,
    containing_service=None,
    input_type=_REMOVEROOTREPOSITORYREQUEST,
    output_type=_REMOVEROOTREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddChildRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.AddChildRepository',
    index=5,
    containing_service=None,
    input_type=_ADDCHILDREPOSITORYREQUEST,
    output_type=_ADDCHILDREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveChildRepository',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.RemoveChildRepository',
    index=6,
    containing_service=None,
    input_type=_REMOVECHILDREPOSITORYREQUEST,
    output_type=_REMOVECHILDREPOSITORYREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveChildRepositories',
    full_name='dlkit.proto.repository.RepositoryHierarchyDesignSession.RemoveChildRepositories',
    index=7,
    containing_service=None,
    input_type=_REMOVECHILDREPOSITORIESREQUEST,
    output_type=_REMOVECHILDREPOSITORIESREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_REPOSITORYHIERARCHYDESIGNSESSION)

DESCRIPTOR.services_by_name['RepositoryHierarchyDesignSession'] = _REPOSITORYHIERARCHYDESIGNSESSION

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class AssetLookupSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanLookupAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/CanLookupAssets',
          request_serializer=CanLookupAssetsRequest.SerializeToString,
          response_deserializer=CanLookupAssetsReply.FromString,
          )
      self.UseComparativeAssetView = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/UseComparativeAssetView',
          request_serializer=UseComparativeAssetViewRequest.SerializeToString,
          response_deserializer=UseComparativeAssetViewReply.FromString,
          )
      self.UsePlenaryAssetView = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/UsePlenaryAssetView',
          request_serializer=UsePlenaryAssetViewRequest.SerializeToString,
          response_deserializer=UsePlenaryAssetViewReply.FromString,
          )
      self.UseFederatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/UseFederatedRepositoryView',
          request_serializer=UseFederatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseFederatedRepositoryViewReply.FromString,
          )
      self.UseIsolatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/UseIsolatedRepositoryView',
          request_serializer=UseIsolatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseIsolatedRepositoryViewReply.FromString,
          )
      self.GetAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetLookupSession/GetAsset',
          request_serializer=GetAssetRequest.SerializeToString,
          response_deserializer=GetAssetReply.FromString,
          )
      self.GetAssetsByIds = channel.unary_stream(
          '/dlkit.proto.repository.AssetLookupSession/GetAssetsByIds',
          request_serializer=GetAssetsByIdsRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetAssetsByGenusType = channel.unary_stream(
          '/dlkit.proto.repository.AssetLookupSession/GetAssetsByGenusType',
          request_serializer=GetAssetsByGenusTypeRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetAssetsByParentGenusType = channel.unary_stream(
          '/dlkit.proto.repository.AssetLookupSession/GetAssetsByParentGenusType',
          request_serializer=GetAssetsByParentGenusTypeRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetAssetsByRecordType = channel.unary_stream(
          '/dlkit.proto.repository.AssetLookupSession/GetAssetsByRecordType',
          request_serializer=GetAssetsByRecordTypeRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetAssetsByProvider = channel.unary_stream(
          '/dlkit.proto.repository.AssetLookupSession/GetAssetsByProvider',
          request_serializer=GetAssetsByProviderRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetAssets = channel.unary_stream(
          '/dlkit.proto.repository.AssetLookupSession/GetAssets',
          request_serializer=GetAssetsRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )


  class AssetLookupSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanLookupAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeAssetView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryAssetView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetLookupSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanLookupAssets': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupAssets,
            request_deserializer=CanLookupAssetsRequest.FromString,
            response_serializer=CanLookupAssetsReply.SerializeToString,
        ),
        'UseComparativeAssetView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeAssetView,
            request_deserializer=UseComparativeAssetViewRequest.FromString,
            response_serializer=UseComparativeAssetViewReply.SerializeToString,
        ),
        'UsePlenaryAssetView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryAssetView,
            request_deserializer=UsePlenaryAssetViewRequest.FromString,
            response_serializer=UsePlenaryAssetViewReply.SerializeToString,
        ),
        'UseFederatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedRepositoryView,
            request_deserializer=UseFederatedRepositoryViewRequest.FromString,
            response_serializer=UseFederatedRepositoryViewReply.SerializeToString,
        ),
        'UseIsolatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedRepositoryView,
            request_deserializer=UseIsolatedRepositoryViewRequest.FromString,
            response_serializer=UseIsolatedRepositoryViewReply.SerializeToString,
        ),
        'GetAsset': grpc.unary_unary_rpc_method_handler(
            servicer.GetAsset,
            request_deserializer=GetAssetRequest.FromString,
            response_serializer=GetAssetReply.SerializeToString,
        ),
        'GetAssetsByIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByIds,
            request_deserializer=GetAssetsByIdsRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetAssetsByGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByGenusType,
            request_deserializer=GetAssetsByGenusTypeRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetAssetsByParentGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByParentGenusType,
            request_deserializer=GetAssetsByParentGenusTypeRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetAssetsByRecordType': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByRecordType,
            request_deserializer=GetAssetsByRecordTypeRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetAssetsByProvider': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByProvider,
            request_deserializer=GetAssetsByProviderRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetAssets': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssets,
            request_deserializer=GetAssetsRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetLookupSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetQuerySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.AssetQuerySession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetQuerySession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanSearchAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetQuerySession/CanSearchAssets',
          request_serializer=CanSearchAssetsRequest.SerializeToString,
          response_deserializer=CanSearchAssetsReply.FromString,
          )
      self.UseFederatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetQuerySession/UseFederatedRepositoryView',
          request_serializer=UseFederatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseFederatedRepositoryViewReply.FromString,
          )
      self.UseIsolatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetQuerySession/UseIsolatedRepositoryView',
          request_serializer=UseIsolatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseIsolatedRepositoryViewReply.FromString,
          )
      self.GetAssetQuery = channel.unary_unary(
          '/dlkit.proto.repository.AssetQuerySession/GetAssetQuery',
          request_serializer=GetAssetQueryRequest.SerializeToString,
          response_deserializer=GetAssetQueryReply.FromString,
          )
      self.GetAssetsByQuery = channel.unary_stream(
          '/dlkit.proto.repository.AssetQuerySession/GetAssetsByQuery',
          request_serializer=GetAssetsByQueryRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )


  class AssetQuerySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanSearchAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetQuerySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanSearchAssets': grpc.unary_unary_rpc_method_handler(
            servicer.CanSearchAssets,
            request_deserializer=CanSearchAssetsRequest.FromString,
            response_serializer=CanSearchAssetsReply.SerializeToString,
        ),
        'UseFederatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedRepositoryView,
            request_deserializer=UseFederatedRepositoryViewRequest.FromString,
            response_serializer=UseFederatedRepositoryViewReply.SerializeToString,
        ),
        'UseIsolatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedRepositoryView,
            request_deserializer=UseIsolatedRepositoryViewRequest.FromString,
            response_serializer=UseIsolatedRepositoryViewReply.SerializeToString,
        ),
        'GetAssetQuery': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetQuery,
            request_deserializer=GetAssetQueryRequest.FromString,
            response_serializer=GetAssetQueryReply.SerializeToString,
        ),
        'GetAssetsByQuery': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByQuery,
            request_deserializer=GetAssetsByQueryRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetQuerySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetSearchSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetAssetSearch = channel.unary_unary(
          '/dlkit.proto.repository.AssetSearchSession/GetAssetSearch',
          request_serializer=GetAssetSearchRequest.SerializeToString,
          response_deserializer=GetAssetSearchReply.FromString,
          )
      self.GetAssetSearchOrder = channel.unary_unary(
          '/dlkit.proto.repository.AssetSearchSession/GetAssetSearchOrder',
          request_serializer=GetAssetSearchOrderRequest.SerializeToString,
          response_deserializer=GetAssetSearchOrderReply.FromString,
          )
      self.GetAssetsBySearch = channel.unary_unary(
          '/dlkit.proto.repository.AssetSearchSession/GetAssetsBySearch',
          request_serializer=GetAssetsBySearchRequest.SerializeToString,
          response_deserializer=GetAssetsBySearchReply.FromString,
          )
      self.GetAssetQueryFromInspector = channel.unary_unary(
          '/dlkit.proto.repository.AssetSearchSession/GetAssetQueryFromInspector',
          request_serializer=GetAssetQueryFromInspectorRequest.SerializeToString,
          response_deserializer=GetAssetQueryFromInspectorReply.FromString,
          )


  class AssetSearchSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetAssetSearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetSearchOrder(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsBySearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetQueryFromInspector(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetSearchSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetAssetSearch': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetSearch,
            request_deserializer=GetAssetSearchRequest.FromString,
            response_serializer=GetAssetSearchReply.SerializeToString,
        ),
        'GetAssetSearchOrder': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetSearchOrder,
            request_deserializer=GetAssetSearchOrderRequest.FromString,
            response_serializer=GetAssetSearchOrderReply.SerializeToString,
        ),
        'GetAssetsBySearch': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetsBySearch,
            request_deserializer=GetAssetsBySearchRequest.FromString,
            response_serializer=GetAssetsBySearchReply.SerializeToString,
        ),
        'GetAssetQueryFromInspector': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetQueryFromInspector,
            request_deserializer=GetAssetQueryFromInspectorRequest.FromString,
            response_serializer=GetAssetQueryFromInspectorReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetSearchSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetAdminSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanCreateAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanCreateAssets',
          request_serializer=CanCreateAssetsRequest.SerializeToString,
          response_deserializer=CanCreateAssetsReply.FromString,
          )
      self.CanCreateAssetWithRecordTypes = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanCreateAssetWithRecordTypes',
          request_serializer=CanCreateAssetWithRecordTypesRequest.SerializeToString,
          response_deserializer=CanCreateAssetWithRecordTypesReply.FromString,
          )
      self.GetAssetFormForCreate = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/GetAssetFormForCreate',
          request_serializer=GetAssetFormForCreateRequest.SerializeToString,
          response_deserializer=GetAssetFormForCreateReply.FromString,
          )
      self.CreateAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CreateAsset',
          request_serializer=CreateAssetRequest.SerializeToString,
          response_deserializer=CreateAssetReply.FromString,
          )
      self.CanUpdateAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanUpdateAssets',
          request_serializer=CanUpdateAssetsRequest.SerializeToString,
          response_deserializer=CanUpdateAssetsReply.FromString,
          )
      self.GetAssetFormForUpdate = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/GetAssetFormForUpdate',
          request_serializer=GetAssetFormForUpdateRequest.SerializeToString,
          response_deserializer=GetAssetFormForUpdateReply.FromString,
          )
      self.UpdateAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/UpdateAsset',
          request_serializer=UpdateAssetRequest.SerializeToString,
          response_deserializer=UpdateAssetReply.FromString,
          )
      self.CanDeleteAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanDeleteAssets',
          request_serializer=CanDeleteAssetsRequest.SerializeToString,
          response_deserializer=CanDeleteAssetsReply.FromString,
          )
      self.DeleteAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/DeleteAsset',
          request_serializer=DeleteAssetRequest.SerializeToString,
          response_deserializer=DeleteAssetReply.FromString,
          )
      self.CanManageAssetAliases = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanManageAssetAliases',
          request_serializer=CanManageAssetAliasesRequest.SerializeToString,
          response_deserializer=CanManageAssetAliasesReply.FromString,
          )
      self.AliasAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/AliasAsset',
          request_serializer=AliasAssetRequest.SerializeToString,
          response_deserializer=AliasAssetReply.FromString,
          )
      self.CanCreateAssetContent = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanCreateAssetContent',
          request_serializer=CanCreateAssetContentRequest.SerializeToString,
          response_deserializer=CanCreateAssetContentReply.FromString,
          )
      self.CanCreateAssetContentWithRecordTypes = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanCreateAssetContentWithRecordTypes',
          request_serializer=CanCreateAssetContentWithRecordTypesRequest.SerializeToString,
          response_deserializer=CanCreateAssetContentWithRecordTypesReply.FromString,
          )
      self.GetAssetContentFormForCreate = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/GetAssetContentFormForCreate',
          request_serializer=GetAssetContentFormForCreateRequest.SerializeToString,
          response_deserializer=GetAssetContentFormForCreateReply.FromString,
          )
      self.CreateAssetContent = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CreateAssetContent',
          request_serializer=CreateAssetContentRequest.SerializeToString,
          response_deserializer=CreateAssetContentReply.FromString,
          )
      self.CanUpdateAssetContents = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanUpdateAssetContents',
          request_serializer=CanUpdateAssetContentsRequest.SerializeToString,
          response_deserializer=CanUpdateAssetContentsReply.FromString,
          )
      self.GetAssetContentFormForUpdate = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/GetAssetContentFormForUpdate',
          request_serializer=GetAssetContentFormForUpdateRequest.SerializeToString,
          response_deserializer=GetAssetContentFormForUpdateReply.FromString,
          )
      self.UpdateAssetContent = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/UpdateAssetContent',
          request_serializer=UpdateAssetContentRequest.SerializeToString,
          response_deserializer=UpdateAssetContentReply.FromString,
          )
      self.CanDeleteAssetContents = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/CanDeleteAssetContents',
          request_serializer=CanDeleteAssetContentsRequest.SerializeToString,
          response_deserializer=CanDeleteAssetContentsReply.FromString,
          )
      self.DeleteAssetContent = channel.unary_unary(
          '/dlkit.proto.repository.AssetAdminSession/DeleteAssetContent',
          request_serializer=DeleteAssetContentRequest.SerializeToString,
          response_deserializer=DeleteAssetContentReply.FromString,
          )


  class AssetAdminSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateAssetWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanUpdateAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanDeleteAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanManageAssetAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AliasAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateAssetContentWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetContentFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanUpdateAssetContents(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetContentFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanDeleteAssetContents(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetAdminSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanCreateAssets': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateAssets,
            request_deserializer=CanCreateAssetsRequest.FromString,
            response_serializer=CanCreateAssetsReply.SerializeToString,
        ),
        'CanCreateAssetWithRecordTypes': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateAssetWithRecordTypes,
            request_deserializer=CanCreateAssetWithRecordTypesRequest.FromString,
            response_serializer=CanCreateAssetWithRecordTypesReply.SerializeToString,
        ),
        'GetAssetFormForCreate': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetFormForCreate,
            request_deserializer=GetAssetFormForCreateRequest.FromString,
            response_serializer=GetAssetFormForCreateReply.SerializeToString,
        ),
        'CreateAsset': grpc.unary_unary_rpc_method_handler(
            servicer.CreateAsset,
            request_deserializer=CreateAssetRequest.FromString,
            response_serializer=CreateAssetReply.SerializeToString,
        ),
        'CanUpdateAssets': grpc.unary_unary_rpc_method_handler(
            servicer.CanUpdateAssets,
            request_deserializer=CanUpdateAssetsRequest.FromString,
            response_serializer=CanUpdateAssetsReply.SerializeToString,
        ),
        'GetAssetFormForUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetFormForUpdate,
            request_deserializer=GetAssetFormForUpdateRequest.FromString,
            response_serializer=GetAssetFormForUpdateReply.SerializeToString,
        ),
        'UpdateAsset': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateAsset,
            request_deserializer=UpdateAssetRequest.FromString,
            response_serializer=UpdateAssetReply.SerializeToString,
        ),
        'CanDeleteAssets': grpc.unary_unary_rpc_method_handler(
            servicer.CanDeleteAssets,
            request_deserializer=CanDeleteAssetsRequest.FromString,
            response_serializer=CanDeleteAssetsReply.SerializeToString,
        ),
        'DeleteAsset': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAsset,
            request_deserializer=DeleteAssetRequest.FromString,
            response_serializer=DeleteAssetReply.SerializeToString,
        ),
        'CanManageAssetAliases': grpc.unary_unary_rpc_method_handler(
            servicer.CanManageAssetAliases,
            request_deserializer=CanManageAssetAliasesRequest.FromString,
            response_serializer=CanManageAssetAliasesReply.SerializeToString,
        ),
        'AliasAsset': grpc.unary_unary_rpc_method_handler(
            servicer.AliasAsset,
            request_deserializer=AliasAssetRequest.FromString,
            response_serializer=AliasAssetReply.SerializeToString,
        ),
        'CanCreateAssetContent': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateAssetContent,
            request_deserializer=CanCreateAssetContentRequest.FromString,
            response_serializer=CanCreateAssetContentReply.SerializeToString,
        ),
        'CanCreateAssetContentWithRecordTypes': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateAssetContentWithRecordTypes,
            request_deserializer=CanCreateAssetContentWithRecordTypesRequest.FromString,
            response_serializer=CanCreateAssetContentWithRecordTypesReply.SerializeToString,
        ),
        'GetAssetContentFormForCreate': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetContentFormForCreate,
            request_deserializer=GetAssetContentFormForCreateRequest.FromString,
            response_serializer=GetAssetContentFormForCreateReply.SerializeToString,
        ),
        'CreateAssetContent': grpc.unary_unary_rpc_method_handler(
            servicer.CreateAssetContent,
            request_deserializer=CreateAssetContentRequest.FromString,
            response_serializer=CreateAssetContentReply.SerializeToString,
        ),
        'CanUpdateAssetContents': grpc.unary_unary_rpc_method_handler(
            servicer.CanUpdateAssetContents,
            request_deserializer=CanUpdateAssetContentsRequest.FromString,
            response_serializer=CanUpdateAssetContentsReply.SerializeToString,
        ),
        'GetAssetContentFormForUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetAssetContentFormForUpdate,
            request_deserializer=GetAssetContentFormForUpdateRequest.FromString,
            response_serializer=GetAssetContentFormForUpdateReply.SerializeToString,
        ),
        'UpdateAssetContent': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateAssetContent,
            request_deserializer=UpdateAssetContentRequest.FromString,
            response_serializer=UpdateAssetContentReply.SerializeToString,
        ),
        'CanDeleteAssetContents': grpc.unary_unary_rpc_method_handler(
            servicer.CanDeleteAssetContents,
            request_deserializer=CanDeleteAssetContentsRequest.FromString,
            response_serializer=CanDeleteAssetContentsReply.SerializeToString,
        ),
        'DeleteAssetContent': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAssetContent,
            request_deserializer=DeleteAssetContentRequest.FromString,
            response_serializer=DeleteAssetContentReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetAdminSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetNotificationSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanRegisterForAssetNotifications = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/CanRegisterForAssetNotifications',
          request_serializer=CanRegisterForAssetNotificationsRequest.SerializeToString,
          response_deserializer=CanRegisterForAssetNotificationsReply.FromString,
          )
      self.UseFederatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/UseFederatedRepositoryView',
          request_serializer=UseFederatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseFederatedRepositoryViewReply.FromString,
          )
      self.UseIsolatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/UseIsolatedRepositoryView',
          request_serializer=UseIsolatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseIsolatedRepositoryViewReply.FromString,
          )
      self.RegisterForNewAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForNewAssets',
          request_serializer=RegisterForNewAssetsRequest.SerializeToString,
          response_deserializer=RegisterForNewAssetsReply.FromString,
          )
      self.RegisterForNewAssetsByGenusType = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForNewAssetsByGenusType',
          request_serializer=RegisterForNewAssetsByGenusTypeRequest.SerializeToString,
          response_deserializer=RegisterForNewAssetsByGenusTypeReply.FromString,
          )
      self.RegisterForChangedAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForChangedAssets',
          request_serializer=RegisterForChangedAssetsRequest.SerializeToString,
          response_deserializer=RegisterForChangedAssetsReply.FromString,
          )
      self.RegisterForChangedAssetsByGenusType = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForChangedAssetsByGenusType',
          request_serializer=RegisterForChangedAssetsByGenusTypeRequest.SerializeToString,
          response_deserializer=RegisterForChangedAssetsByGenusTypeReply.FromString,
          )
      self.RegisterForChangedAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForChangedAsset',
          request_serializer=RegisterForChangedAssetRequest.SerializeToString,
          response_deserializer=RegisterForChangedAssetReply.FromString,
          )
      self.RegisterForDeletedAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForDeletedAssets',
          request_serializer=RegisterForDeletedAssetsRequest.SerializeToString,
          response_deserializer=RegisterForDeletedAssetsReply.FromString,
          )
      self.RegisterForDeletedAssetsByGenusType = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForDeletedAssetsByGenusType',
          request_serializer=RegisterForDeletedAssetsByGenusTypeRequest.SerializeToString,
          response_deserializer=RegisterForDeletedAssetsByGenusTypeReply.FromString,
          )
      self.RegisterForDeletedAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/RegisterForDeletedAsset',
          request_serializer=RegisterForDeletedAssetRequest.SerializeToString,
          response_deserializer=RegisterForDeletedAssetReply.FromString,
          )
      self.ReliableAssetNotifications = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/ReliableAssetNotifications',
          request_serializer=ReliableAssetNotificationsRequest.SerializeToString,
          response_deserializer=ReliableAssetNotificationsReply.FromString,
          )
      self.UnreliableAssetNotifications = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/UnreliableAssetNotifications',
          request_serializer=UnreliableAssetNotificationsRequest.SerializeToString,
          response_deserializer=UnreliableAssetNotificationsReply.FromString,
          )
      self.AcknowledgeAssetNotification = channel.unary_unary(
          '/dlkit.proto.repository.AssetNotificationSession/AcknowledgeAssetNotification',
          request_serializer=AcknowledgeAssetNotificationRequest.SerializeToString,
          response_deserializer=AcknowledgeAssetNotificationReply.FromString,
          )


  class AssetNotificationSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanRegisterForAssetNotifications(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForNewAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForNewAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForChangedAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForChangedAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForChangedAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForDeletedAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForDeletedAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterForDeletedAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ReliableAssetNotifications(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnreliableAssetNotifications(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AcknowledgeAssetNotification(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetNotificationSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanRegisterForAssetNotifications': grpc.unary_unary_rpc_method_handler(
            servicer.CanRegisterForAssetNotifications,
            request_deserializer=CanRegisterForAssetNotificationsRequest.FromString,
            response_serializer=CanRegisterForAssetNotificationsReply.SerializeToString,
        ),
        'UseFederatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedRepositoryView,
            request_deserializer=UseFederatedRepositoryViewRequest.FromString,
            response_serializer=UseFederatedRepositoryViewReply.SerializeToString,
        ),
        'UseIsolatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedRepositoryView,
            request_deserializer=UseIsolatedRepositoryViewRequest.FromString,
            response_serializer=UseIsolatedRepositoryViewReply.SerializeToString,
        ),
        'RegisterForNewAssets': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForNewAssets,
            request_deserializer=RegisterForNewAssetsRequest.FromString,
            response_serializer=RegisterForNewAssetsReply.SerializeToString,
        ),
        'RegisterForNewAssetsByGenusType': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForNewAssetsByGenusType,
            request_deserializer=RegisterForNewAssetsByGenusTypeRequest.FromString,
            response_serializer=RegisterForNewAssetsByGenusTypeReply.SerializeToString,
        ),
        'RegisterForChangedAssets': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForChangedAssets,
            request_deserializer=RegisterForChangedAssetsRequest.FromString,
            response_serializer=RegisterForChangedAssetsReply.SerializeToString,
        ),
        'RegisterForChangedAssetsByGenusType': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForChangedAssetsByGenusType,
            request_deserializer=RegisterForChangedAssetsByGenusTypeRequest.FromString,
            response_serializer=RegisterForChangedAssetsByGenusTypeReply.SerializeToString,
        ),
        'RegisterForChangedAsset': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForChangedAsset,
            request_deserializer=RegisterForChangedAssetRequest.FromString,
            response_serializer=RegisterForChangedAssetReply.SerializeToString,
        ),
        'RegisterForDeletedAssets': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForDeletedAssets,
            request_deserializer=RegisterForDeletedAssetsRequest.FromString,
            response_serializer=RegisterForDeletedAssetsReply.SerializeToString,
        ),
        'RegisterForDeletedAssetsByGenusType': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForDeletedAssetsByGenusType,
            request_deserializer=RegisterForDeletedAssetsByGenusTypeRequest.FromString,
            response_serializer=RegisterForDeletedAssetsByGenusTypeReply.SerializeToString,
        ),
        'RegisterForDeletedAsset': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterForDeletedAsset,
            request_deserializer=RegisterForDeletedAssetRequest.FromString,
            response_serializer=RegisterForDeletedAssetReply.SerializeToString,
        ),
        'ReliableAssetNotifications': grpc.unary_unary_rpc_method_handler(
            servicer.ReliableAssetNotifications,
            request_deserializer=ReliableAssetNotificationsRequest.FromString,
            response_serializer=ReliableAssetNotificationsReply.SerializeToString,
        ),
        'UnreliableAssetNotifications': grpc.unary_unary_rpc_method_handler(
            servicer.UnreliableAssetNotifications,
            request_deserializer=UnreliableAssetNotificationsRequest.FromString,
            response_serializer=UnreliableAssetNotificationsReply.SerializeToString,
        ),
        'AcknowledgeAssetNotification': grpc.unary_unary_rpc_method_handler(
            servicer.AcknowledgeAssetNotification,
            request_deserializer=AcknowledgeAssetNotificationRequest.FromString,
            response_serializer=AcknowledgeAssetNotificationReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetNotificationSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetRepositorySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanLookupAssetRepositoryMappings = channel.unary_unary(
          '/dlkit.proto.repository.AssetRepositorySession/CanLookupAssetRepositoryMappings',
          request_serializer=CanLookupAssetRepositoryMappingsRequest.SerializeToString,
          response_deserializer=CanLookupAssetRepositoryMappingsReply.FromString,
          )
      self.UseComparativeRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetRepositorySession/UseComparativeRepositoryView',
          request_serializer=UseComparativeRepositoryViewRequest.SerializeToString,
          response_deserializer=UseComparativeRepositoryViewReply.FromString,
          )
      self.UsePlenaryRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetRepositorySession/UsePlenaryRepositoryView',
          request_serializer=UsePlenaryRepositoryViewRequest.SerializeToString,
          response_deserializer=UsePlenaryRepositoryViewReply.FromString,
          )
      self.GetAssetIdsByRepository = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositorySession/GetAssetIdsByRepository',
          request_serializer=GetAssetIdsByRepositoryRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetAssetsByRepository = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositorySession/GetAssetsByRepository',
          request_serializer=GetAssetsByRepositoryRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetAssetIdsByRepositories = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositorySession/GetAssetIdsByRepositories',
          request_serializer=GetAssetIdsByRepositoriesRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetAssetsByRepositories = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositorySession/GetAssetsByRepositories',
          request_serializer=GetAssetsByRepositoriesRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetRepositoryIdsByAsset = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositorySession/GetRepositoryIdsByAsset',
          request_serializer=GetRepositoryIdsByAssetRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetRepositoriesByAsset = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositorySession/GetRepositoriesByAsset',
          request_serializer=GetRepositoriesByAssetRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )


  class AssetRepositorySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanLookupAssetRepositoryMappings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetIdsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetIdsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssetsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryIdsByAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetRepositorySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanLookupAssetRepositoryMappings': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupAssetRepositoryMappings,
            request_deserializer=CanLookupAssetRepositoryMappingsRequest.FromString,
            response_serializer=CanLookupAssetRepositoryMappingsReply.SerializeToString,
        ),
        'UseComparativeRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeRepositoryView,
            request_deserializer=UseComparativeRepositoryViewRequest.FromString,
            response_serializer=UseComparativeRepositoryViewReply.SerializeToString,
        ),
        'UsePlenaryRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryRepositoryView,
            request_deserializer=UsePlenaryRepositoryViewRequest.FromString,
            response_serializer=UsePlenaryRepositoryViewReply.SerializeToString,
        ),
        'GetAssetIdsByRepository': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetIdsByRepository,
            request_deserializer=GetAssetIdsByRepositoryRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetAssetsByRepository': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByRepository,
            request_deserializer=GetAssetsByRepositoryRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetAssetIdsByRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetIdsByRepositories,
            request_deserializer=GetAssetIdsByRepositoriesRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetAssetsByRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssetsByRepositories,
            request_deserializer=GetAssetsByRepositoriesRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetRepositoryIdsByAsset': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoryIdsByAsset,
            request_deserializer=GetRepositoryIdsByAssetRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetRepositoriesByAsset': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByAsset,
            request_deserializer=GetRepositoriesByAssetRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetRepositorySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetRepositoryAssignmentSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanAssignAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetRepositoryAssignmentSession/CanAssignAssets',
          request_serializer=CanAssignAssetsRequest.SerializeToString,
          response_deserializer=CanAssignAssetsReply.FromString,
          )
      self.CanAssignAssetsToRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetRepositoryAssignmentSession/CanAssignAssetsToRepository',
          request_serializer=CanAssignAssetsToRepositoryRequest.SerializeToString,
          response_deserializer=CanAssignAssetsToRepositoryReply.FromString,
          )
      self.GetAssignableRepositoryIds = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositoryAssignmentSession/GetAssignableRepositoryIds',
          request_serializer=GetAssignableRepositoryIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetAssignableRepositoryIdsForAsset = channel.unary_stream(
          '/dlkit.proto.repository.AssetRepositoryAssignmentSession/GetAssignableRepositoryIdsForAsset',
          request_serializer=GetAssignableRepositoryIdsForAssetRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.AssignAssetToRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetRepositoryAssignmentSession/AssignAssetToRepository',
          request_serializer=AssignAssetToRepositoryRequest.SerializeToString,
          response_deserializer=AssignAssetToRepositoryReply.FromString,
          )
      self.UnassignAssetFromRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetRepositoryAssignmentSession/UnassignAssetFromRepository',
          request_serializer=UnassignAssetFromRepositoryRequest.SerializeToString,
          response_deserializer=UnassignAssetFromRepositoryReply.FromString,
          )


  class AssetRepositoryAssignmentSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanAssignAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanAssignAssetsToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssignableRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssignableRepositoryIdsForAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AssignAssetToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnassignAssetFromRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetRepositoryAssignmentSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanAssignAssets': grpc.unary_unary_rpc_method_handler(
            servicer.CanAssignAssets,
            request_deserializer=CanAssignAssetsRequest.FromString,
            response_serializer=CanAssignAssetsReply.SerializeToString,
        ),
        'CanAssignAssetsToRepository': grpc.unary_unary_rpc_method_handler(
            servicer.CanAssignAssetsToRepository,
            request_deserializer=CanAssignAssetsToRepositoryRequest.FromString,
            response_serializer=CanAssignAssetsToRepositoryReply.SerializeToString,
        ),
        'GetAssignableRepositoryIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssignableRepositoryIds,
            request_deserializer=GetAssignableRepositoryIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetAssignableRepositoryIdsForAsset': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssignableRepositoryIdsForAsset,
            request_deserializer=GetAssignableRepositoryIdsForAssetRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'AssignAssetToRepository': grpc.unary_unary_rpc_method_handler(
            servicer.AssignAssetToRepository,
            request_deserializer=AssignAssetToRepositoryRequest.FromString,
            response_serializer=AssignAssetToRepositoryReply.SerializeToString,
        ),
        'UnassignAssetFromRepository': grpc.unary_unary_rpc_method_handler(
            servicer.UnassignAssetFromRepository,
            request_deserializer=UnassignAssetFromRepositoryRequest.FromString,
            response_serializer=UnassignAssetFromRepositoryReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetRepositoryAssignmentSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetCompositionSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionSession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanAccessAssetCompositions = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionSession/CanAccessAssetCompositions',
          request_serializer=CanAccessAssetCompositionsRequest.SerializeToString,
          response_deserializer=CanAccessAssetCompositionsReply.FromString,
          )
      self.UseComparativeAssetCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionSession/UseComparativeAssetCompositionView',
          request_serializer=UseComparativeAssetCompositionViewRequest.SerializeToString,
          response_deserializer=UseComparativeAssetCompositionViewReply.FromString,
          )
      self.UsePlenaryAssetCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionSession/UsePlenaryAssetCompositionView',
          request_serializer=UsePlenaryAssetCompositionViewRequest.SerializeToString,
          response_deserializer=UsePlenaryAssetCompositionViewReply.FromString,
          )
      self.UseFederatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionSession/UseFederatedRepositoryView',
          request_serializer=UseFederatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseFederatedRepositoryViewReply.FromString,
          )
      self.UseIsolatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionSession/UseIsolatedRepositoryView',
          request_serializer=UseIsolatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseIsolatedRepositoryViewReply.FromString,
          )
      self.GetCompositionAssets = channel.unary_stream(
          '/dlkit.proto.repository.AssetCompositionSession/GetCompositionAssets',
          request_serializer=GetCompositionAssetsRequest.SerializeToString,
          response_deserializer=Asset.FromString,
          )
      self.GetCompositionsByAsset = channel.unary_stream(
          '/dlkit.proto.repository.AssetCompositionSession/GetCompositionsByAsset',
          request_serializer=GetCompositionsByAssetRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )


  class AssetCompositionSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanAccessAssetCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeAssetCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryAssetCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetCompositionSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanAccessAssetCompositions': grpc.unary_unary_rpc_method_handler(
            servicer.CanAccessAssetCompositions,
            request_deserializer=CanAccessAssetCompositionsRequest.FromString,
            response_serializer=CanAccessAssetCompositionsReply.SerializeToString,
        ),
        'UseComparativeAssetCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeAssetCompositionView,
            request_deserializer=UseComparativeAssetCompositionViewRequest.FromString,
            response_serializer=UseComparativeAssetCompositionViewReply.SerializeToString,
        ),
        'UsePlenaryAssetCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryAssetCompositionView,
            request_deserializer=UsePlenaryAssetCompositionViewRequest.FromString,
            response_serializer=UsePlenaryAssetCompositionViewReply.SerializeToString,
        ),
        'UseFederatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedRepositoryView,
            request_deserializer=UseFederatedRepositoryViewRequest.FromString,
            response_serializer=UseFederatedRepositoryViewReply.SerializeToString,
        ),
        'UseIsolatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedRepositoryView,
            request_deserializer=UseIsolatedRepositoryViewRequest.FromString,
            response_serializer=UseIsolatedRepositoryViewReply.SerializeToString,
        ),
        'GetCompositionAssets': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionAssets,
            request_deserializer=GetCompositionAssetsRequest.FromString,
            response_serializer=Asset.SerializeToString,
        ),
        'GetCompositionsByAsset': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByAsset,
            request_deserializer=GetCompositionsByAssetRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetCompositionSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class AssetCompositionDesignSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanComposeAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/CanComposeAssets',
          request_serializer=CanComposeAssetsRequest.SerializeToString,
          response_deserializer=CanComposeAssetsReply.FromString,
          )
      self.AddAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/AddAsset',
          request_serializer=AddAssetRequest.SerializeToString,
          response_deserializer=AddAssetReply.FromString,
          )
      self.MoveAssetAhead = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/MoveAssetAhead',
          request_serializer=MoveAssetAheadRequest.SerializeToString,
          response_deserializer=MoveAssetAheadReply.FromString,
          )
      self.MoveAssetBehind = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/MoveAssetBehind',
          request_serializer=MoveAssetBehindRequest.SerializeToString,
          response_deserializer=MoveAssetBehindReply.FromString,
          )
      self.OrderAssets = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/OrderAssets',
          request_serializer=OrderAssetsRequest.SerializeToString,
          response_deserializer=OrderAssetsReply.FromString,
          )
      self.RemoveAsset = channel.unary_unary(
          '/dlkit.proto.repository.AssetCompositionDesignSession/RemoveAsset',
          request_serializer=RemoveAssetRequest.SerializeToString,
          response_deserializer=RemoveAssetReply.FromString,
          )


  class AssetCompositionDesignSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanComposeAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def MoveAssetAhead(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def MoveAssetBehind(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def OrderAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AssetCompositionDesignSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanComposeAssets': grpc.unary_unary_rpc_method_handler(
            servicer.CanComposeAssets,
            request_deserializer=CanComposeAssetsRequest.FromString,
            response_serializer=CanComposeAssetsReply.SerializeToString,
        ),
        'AddAsset': grpc.unary_unary_rpc_method_handler(
            servicer.AddAsset,
            request_deserializer=AddAssetRequest.FromString,
            response_serializer=AddAssetReply.SerializeToString,
        ),
        'MoveAssetAhead': grpc.unary_unary_rpc_method_handler(
            servicer.MoveAssetAhead,
            request_deserializer=MoveAssetAheadRequest.FromString,
            response_serializer=MoveAssetAheadReply.SerializeToString,
        ),
        'MoveAssetBehind': grpc.unary_unary_rpc_method_handler(
            servicer.MoveAssetBehind,
            request_deserializer=MoveAssetBehindRequest.FromString,
            response_serializer=MoveAssetBehindReply.SerializeToString,
        ),
        'OrderAssets': grpc.unary_unary_rpc_method_handler(
            servicer.OrderAssets,
            request_deserializer=OrderAssetsRequest.FromString,
            response_serializer=OrderAssetsReply.SerializeToString,
        ),
        'RemoveAsset': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveAsset,
            request_deserializer=RemoveAssetRequest.FromString,
            response_serializer=RemoveAssetReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.AssetCompositionDesignSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CompositionLookupSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanLookupCompositions = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/CanLookupCompositions',
          request_serializer=CanLookupCompositionsRequest.SerializeToString,
          response_deserializer=CanLookupCompositionsReply.FromString,
          )
      self.UseComparativeCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UseComparativeCompositionView',
          request_serializer=UseComparativeCompositionViewRequest.SerializeToString,
          response_deserializer=UseComparativeCompositionViewReply.FromString,
          )
      self.UsePlenaryCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UsePlenaryCompositionView',
          request_serializer=UsePlenaryCompositionViewRequest.SerializeToString,
          response_deserializer=UsePlenaryCompositionViewReply.FromString,
          )
      self.UseFederatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UseFederatedRepositoryView',
          request_serializer=UseFederatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseFederatedRepositoryViewReply.FromString,
          )
      self.UseIsolatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UseIsolatedRepositoryView',
          request_serializer=UseIsolatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseIsolatedRepositoryViewReply.FromString,
          )
      self.UseActiveCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UseActiveCompositionView',
          request_serializer=UseActiveCompositionViewRequest.SerializeToString,
          response_deserializer=UseActiveCompositionViewReply.FromString,
          )
      self.UseAnyStatusCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UseAnyStatusCompositionView',
          request_serializer=UseAnyStatusCompositionViewRequest.SerializeToString,
          response_deserializer=UseAnyStatusCompositionViewReply.FromString,
          )
      self.UseSequesteredCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UseSequesteredCompositionView',
          request_serializer=UseSequesteredCompositionViewRequest.SerializeToString,
          response_deserializer=UseSequesteredCompositionViewReply.FromString,
          )
      self.UseUnsequesteredCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/UseUnsequesteredCompositionView',
          request_serializer=UseUnsequesteredCompositionViewRequest.SerializeToString,
          response_deserializer=UseUnsequesteredCompositionViewReply.FromString,
          )
      self.GetComposition = channel.unary_unary(
          '/dlkit.proto.repository.CompositionLookupSession/GetComposition',
          request_serializer=GetCompositionRequest.SerializeToString,
          response_deserializer=GetCompositionReply.FromString,
          )
      self.GetCompositionsByIds = channel.unary_stream(
          '/dlkit.proto.repository.CompositionLookupSession/GetCompositionsByIds',
          request_serializer=GetCompositionsByIdsRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )
      self.GetCompositionsByGenusType = channel.unary_stream(
          '/dlkit.proto.repository.CompositionLookupSession/GetCompositionsByGenusType',
          request_serializer=GetCompositionsByGenusTypeRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )
      self.GetCompositionsByParentGenusType = channel.unary_stream(
          '/dlkit.proto.repository.CompositionLookupSession/GetCompositionsByParentGenusType',
          request_serializer=GetCompositionsByParentGenusTypeRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )
      self.GetCompositionsByRecordType = channel.unary_stream(
          '/dlkit.proto.repository.CompositionLookupSession/GetCompositionsByRecordType',
          request_serializer=GetCompositionsByRecordTypeRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )
      self.GetCompositionsByProvider = channel.unary_stream(
          '/dlkit.proto.repository.CompositionLookupSession/GetCompositionsByProvider',
          request_serializer=GetCompositionsByProviderRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )
      self.GetCompositions = channel.unary_stream(
          '/dlkit.proto.repository.CompositionLookupSession/GetCompositions',
          request_serializer=GetCompositionsRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )


  class CompositionLookupSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanLookupCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseActiveCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseAnyStatusCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseSequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseUnsequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CompositionLookupSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanLookupCompositions': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupCompositions,
            request_deserializer=CanLookupCompositionsRequest.FromString,
            response_serializer=CanLookupCompositionsReply.SerializeToString,
        ),
        'UseComparativeCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeCompositionView,
            request_deserializer=UseComparativeCompositionViewRequest.FromString,
            response_serializer=UseComparativeCompositionViewReply.SerializeToString,
        ),
        'UsePlenaryCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryCompositionView,
            request_deserializer=UsePlenaryCompositionViewRequest.FromString,
            response_serializer=UsePlenaryCompositionViewReply.SerializeToString,
        ),
        'UseFederatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedRepositoryView,
            request_deserializer=UseFederatedRepositoryViewRequest.FromString,
            response_serializer=UseFederatedRepositoryViewReply.SerializeToString,
        ),
        'UseIsolatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedRepositoryView,
            request_deserializer=UseIsolatedRepositoryViewRequest.FromString,
            response_serializer=UseIsolatedRepositoryViewReply.SerializeToString,
        ),
        'UseActiveCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseActiveCompositionView,
            request_deserializer=UseActiveCompositionViewRequest.FromString,
            response_serializer=UseActiveCompositionViewReply.SerializeToString,
        ),
        'UseAnyStatusCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseAnyStatusCompositionView,
            request_deserializer=UseAnyStatusCompositionViewRequest.FromString,
            response_serializer=UseAnyStatusCompositionViewReply.SerializeToString,
        ),
        'UseSequesteredCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseSequesteredCompositionView,
            request_deserializer=UseSequesteredCompositionViewRequest.FromString,
            response_serializer=UseSequesteredCompositionViewReply.SerializeToString,
        ),
        'UseUnsequesteredCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseUnsequesteredCompositionView,
            request_deserializer=UseUnsequesteredCompositionViewRequest.FromString,
            response_serializer=UseUnsequesteredCompositionViewReply.SerializeToString,
        ),
        'GetComposition': grpc.unary_unary_rpc_method_handler(
            servicer.GetComposition,
            request_deserializer=GetCompositionRequest.FromString,
            response_serializer=GetCompositionReply.SerializeToString,
        ),
        'GetCompositionsByIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByIds,
            request_deserializer=GetCompositionsByIdsRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
        'GetCompositionsByGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByGenusType,
            request_deserializer=GetCompositionsByGenusTypeRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
        'GetCompositionsByParentGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByParentGenusType,
            request_deserializer=GetCompositionsByParentGenusTypeRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
        'GetCompositionsByRecordType': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByRecordType,
            request_deserializer=GetCompositionsByRecordTypeRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
        'GetCompositionsByProvider': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByProvider,
            request_deserializer=GetCompositionsByProviderRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
        'GetCompositions': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositions,
            request_deserializer=GetCompositionsRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.CompositionLookupSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CompositionQuerySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanSearchCompositions = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/CanSearchCompositions',
          request_serializer=CanSearchCompositionsRequest.SerializeToString,
          response_deserializer=CanSearchCompositionsReply.FromString,
          )
      self.UseFederatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/UseFederatedRepositoryView',
          request_serializer=UseFederatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseFederatedRepositoryViewReply.FromString,
          )
      self.UseIsolatedRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/UseIsolatedRepositoryView',
          request_serializer=UseIsolatedRepositoryViewRequest.SerializeToString,
          response_deserializer=UseIsolatedRepositoryViewReply.FromString,
          )
      self.UseSequesteredCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/UseSequesteredCompositionView',
          request_serializer=UseSequesteredCompositionViewRequest.SerializeToString,
          response_deserializer=UseSequesteredCompositionViewReply.FromString,
          )
      self.UseUnsequesteredCompositionView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/UseUnsequesteredCompositionView',
          request_serializer=UseUnsequesteredCompositionViewRequest.SerializeToString,
          response_deserializer=UseUnsequesteredCompositionViewReply.FromString,
          )
      self.GetCompositionQuery = channel.unary_unary(
          '/dlkit.proto.repository.CompositionQuerySession/GetCompositionQuery',
          request_serializer=GetCompositionQueryRequest.SerializeToString,
          response_deserializer=GetCompositionQueryReply.FromString,
          )
      self.GetCompositionsByQuery = channel.unary_stream(
          '/dlkit.proto.repository.CompositionQuerySession/GetCompositionsByQuery',
          request_serializer=GetCompositionsByQueryRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )


  class CompositionQuerySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanSearchCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseSequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseUnsequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CompositionQuerySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanSearchCompositions': grpc.unary_unary_rpc_method_handler(
            servicer.CanSearchCompositions,
            request_deserializer=CanSearchCompositionsRequest.FromString,
            response_serializer=CanSearchCompositionsReply.SerializeToString,
        ),
        'UseFederatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseFederatedRepositoryView,
            request_deserializer=UseFederatedRepositoryViewRequest.FromString,
            response_serializer=UseFederatedRepositoryViewReply.SerializeToString,
        ),
        'UseIsolatedRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseIsolatedRepositoryView,
            request_deserializer=UseIsolatedRepositoryViewRequest.FromString,
            response_serializer=UseIsolatedRepositoryViewReply.SerializeToString,
        ),
        'UseSequesteredCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseSequesteredCompositionView,
            request_deserializer=UseSequesteredCompositionViewRequest.FromString,
            response_serializer=UseSequesteredCompositionViewReply.SerializeToString,
        ),
        'UseUnsequesteredCompositionView': grpc.unary_unary_rpc_method_handler(
            servicer.UseUnsequesteredCompositionView,
            request_deserializer=UseUnsequesteredCompositionViewRequest.FromString,
            response_serializer=UseUnsequesteredCompositionViewReply.SerializeToString,
        ),
        'GetCompositionQuery': grpc.unary_unary_rpc_method_handler(
            servicer.GetCompositionQuery,
            request_deserializer=GetCompositionQueryRequest.FromString,
            response_serializer=GetCompositionQueryReply.SerializeToString,
        ),
        'GetCompositionsByQuery': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByQuery,
            request_deserializer=GetCompositionsByQueryRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.CompositionQuerySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CompositionSearchSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetCompositionSearch = channel.unary_unary(
          '/dlkit.proto.repository.CompositionSearchSession/GetCompositionSearch',
          request_serializer=GetCompositionSearchRequest.SerializeToString,
          response_deserializer=GetCompositionSearchReply.FromString,
          )
      self.GetCompositionSearchOrder = channel.unary_unary(
          '/dlkit.proto.repository.CompositionSearchSession/GetCompositionSearchOrder',
          request_serializer=GetCompositionSearchOrderRequest.SerializeToString,
          response_deserializer=GetCompositionSearchOrderReply.FromString,
          )
      self.GetCompositionsBySearch = channel.unary_unary(
          '/dlkit.proto.repository.CompositionSearchSession/GetCompositionsBySearch',
          request_serializer=GetCompositionsBySearchRequest.SerializeToString,
          response_deserializer=GetCompositionsBySearchReply.FromString,
          )
      self.GetCompositionQueryFromInspector = channel.unary_unary(
          '/dlkit.proto.repository.CompositionSearchSession/GetCompositionQueryFromInspector',
          request_serializer=GetCompositionQueryFromInspectorRequest.SerializeToString,
          response_deserializer=GetCompositionQueryFromInspectorReply.FromString,
          )


  class CompositionSearchSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetCompositionSearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionSearchOrder(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsBySearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionQueryFromInspector(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CompositionSearchSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetCompositionSearch': grpc.unary_unary_rpc_method_handler(
            servicer.GetCompositionSearch,
            request_deserializer=GetCompositionSearchRequest.FromString,
            response_serializer=GetCompositionSearchReply.SerializeToString,
        ),
        'GetCompositionSearchOrder': grpc.unary_unary_rpc_method_handler(
            servicer.GetCompositionSearchOrder,
            request_deserializer=GetCompositionSearchOrderRequest.FromString,
            response_serializer=GetCompositionSearchOrderReply.SerializeToString,
        ),
        'GetCompositionsBySearch': grpc.unary_unary_rpc_method_handler(
            servicer.GetCompositionsBySearch,
            request_deserializer=GetCompositionsBySearchRequest.FromString,
            response_serializer=GetCompositionsBySearchReply.SerializeToString,
        ),
        'GetCompositionQueryFromInspector': grpc.unary_unary_rpc_method_handler(
            servicer.GetCompositionQueryFromInspector,
            request_deserializer=GetCompositionQueryFromInspectorRequest.FromString,
            response_serializer=GetCompositionQueryFromInspectorReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.CompositionSearchSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CompositionAdminSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryId = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/GetRepositoryId',
          request_serializer=GetRepositoryIdRequest.SerializeToString,
          response_deserializer=GetRepositoryIdReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.CanCreateCompositions = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/CanCreateCompositions',
          request_serializer=CanCreateCompositionsRequest.SerializeToString,
          response_deserializer=CanCreateCompositionsReply.FromString,
          )
      self.CanCreateCompositionWithRecordTypes = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/CanCreateCompositionWithRecordTypes',
          request_serializer=CanCreateCompositionWithRecordTypesRequest.SerializeToString,
          response_deserializer=CanCreateCompositionWithRecordTypesReply.FromString,
          )
      self.GetCompositionFormForCreate = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/GetCompositionFormForCreate',
          request_serializer=GetCompositionFormForCreateRequest.SerializeToString,
          response_deserializer=GetCompositionFormForCreateReply.FromString,
          )
      self.CreateComposition = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/CreateComposition',
          request_serializer=CreateCompositionRequest.SerializeToString,
          response_deserializer=CreateCompositionReply.FromString,
          )
      self.CanUpdateCompositions = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/CanUpdateCompositions',
          request_serializer=CanUpdateCompositionsRequest.SerializeToString,
          response_deserializer=CanUpdateCompositionsReply.FromString,
          )
      self.GetCompositionFormForUpdate = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/GetCompositionFormForUpdate',
          request_serializer=GetCompositionFormForUpdateRequest.SerializeToString,
          response_deserializer=GetCompositionFormForUpdateReply.FromString,
          )
      self.UpdateComposition = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/UpdateComposition',
          request_serializer=UpdateCompositionRequest.SerializeToString,
          response_deserializer=UpdateCompositionReply.FromString,
          )
      self.CanDeleteCompositions = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/CanDeleteCompositions',
          request_serializer=CanDeleteCompositionsRequest.SerializeToString,
          response_deserializer=CanDeleteCompositionsReply.FromString,
          )
      self.DeleteComposition = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/DeleteComposition',
          request_serializer=DeleteCompositionRequest.SerializeToString,
          response_deserializer=DeleteCompositionReply.FromString,
          )
      self.DeleteCompositionNode = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/DeleteCompositionNode',
          request_serializer=DeleteCompositionNodeRequest.SerializeToString,
          response_deserializer=DeleteCompositionNodeReply.FromString,
          )
      self.AddCompositionChild = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/AddCompositionChild',
          request_serializer=AddCompositionChildRequest.SerializeToString,
          response_deserializer=AddCompositionChildReply.FromString,
          )
      self.RemoveCompositionChild = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/RemoveCompositionChild',
          request_serializer=RemoveCompositionChildRequest.SerializeToString,
          response_deserializer=RemoveCompositionChildReply.FromString,
          )
      self.CanManageCompositionAliases = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/CanManageCompositionAliases',
          request_serializer=CanManageCompositionAliasesRequest.SerializeToString,
          response_deserializer=CanManageCompositionAliasesReply.FromString,
          )
      self.AliasComposition = channel.unary_unary(
          '/dlkit.proto.repository.CompositionAdminSession/AliasComposition',
          request_serializer=AliasCompositionRequest.SerializeToString,
          response_deserializer=AliasCompositionReply.FromString,
          )


  class CompositionAdminSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateCompositionWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanUpdateCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanDeleteCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteCompositionNode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddCompositionChild(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveCompositionChild(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanManageCompositionAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AliasComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CompositionAdminSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryId,
            request_deserializer=GetRepositoryIdRequest.FromString,
            response_serializer=GetRepositoryIdReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'CanCreateCompositions': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateCompositions,
            request_deserializer=CanCreateCompositionsRequest.FromString,
            response_serializer=CanCreateCompositionsReply.SerializeToString,
        ),
        'CanCreateCompositionWithRecordTypes': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateCompositionWithRecordTypes,
            request_deserializer=CanCreateCompositionWithRecordTypesRequest.FromString,
            response_serializer=CanCreateCompositionWithRecordTypesReply.SerializeToString,
        ),
        'GetCompositionFormForCreate': grpc.unary_unary_rpc_method_handler(
            servicer.GetCompositionFormForCreate,
            request_deserializer=GetCompositionFormForCreateRequest.FromString,
            response_serializer=GetCompositionFormForCreateReply.SerializeToString,
        ),
        'CreateComposition': grpc.unary_unary_rpc_method_handler(
            servicer.CreateComposition,
            request_deserializer=CreateCompositionRequest.FromString,
            response_serializer=CreateCompositionReply.SerializeToString,
        ),
        'CanUpdateCompositions': grpc.unary_unary_rpc_method_handler(
            servicer.CanUpdateCompositions,
            request_deserializer=CanUpdateCompositionsRequest.FromString,
            response_serializer=CanUpdateCompositionsReply.SerializeToString,
        ),
        'GetCompositionFormForUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetCompositionFormForUpdate,
            request_deserializer=GetCompositionFormForUpdateRequest.FromString,
            response_serializer=GetCompositionFormForUpdateReply.SerializeToString,
        ),
        'UpdateComposition': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateComposition,
            request_deserializer=UpdateCompositionRequest.FromString,
            response_serializer=UpdateCompositionReply.SerializeToString,
        ),
        'CanDeleteCompositions': grpc.unary_unary_rpc_method_handler(
            servicer.CanDeleteCompositions,
            request_deserializer=CanDeleteCompositionsRequest.FromString,
            response_serializer=CanDeleteCompositionsReply.SerializeToString,
        ),
        'DeleteComposition': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteComposition,
            request_deserializer=DeleteCompositionRequest.FromString,
            response_serializer=DeleteCompositionReply.SerializeToString,
        ),
        'DeleteCompositionNode': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteCompositionNode,
            request_deserializer=DeleteCompositionNodeRequest.FromString,
            response_serializer=DeleteCompositionNodeReply.SerializeToString,
        ),
        'AddCompositionChild': grpc.unary_unary_rpc_method_handler(
            servicer.AddCompositionChild,
            request_deserializer=AddCompositionChildRequest.FromString,
            response_serializer=AddCompositionChildReply.SerializeToString,
        ),
        'RemoveCompositionChild': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveCompositionChild,
            request_deserializer=RemoveCompositionChildRequest.FromString,
            response_serializer=RemoveCompositionChildReply.SerializeToString,
        ),
        'CanManageCompositionAliases': grpc.unary_unary_rpc_method_handler(
            servicer.CanManageCompositionAliases,
            request_deserializer=CanManageCompositionAliasesRequest.FromString,
            response_serializer=CanManageCompositionAliasesReply.SerializeToString,
        ),
        'AliasComposition': grpc.unary_unary_rpc_method_handler(
            servicer.AliasComposition,
            request_deserializer=AliasCompositionRequest.FromString,
            response_serializer=AliasCompositionReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.CompositionAdminSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CompositionRepositorySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.UseComparativeCompositionRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionRepositorySession/UseComparativeCompositionRepositoryView',
          request_serializer=UseComparativeCompositionRepositoryViewRequest.SerializeToString,
          response_deserializer=UseComparativeCompositionRepositoryViewReply.FromString,
          )
      self.UsePlenaryCompositionRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.CompositionRepositorySession/UsePlenaryCompositionRepositoryView',
          request_serializer=UsePlenaryCompositionRepositoryViewRequest.SerializeToString,
          response_deserializer=UsePlenaryCompositionRepositoryViewReply.FromString,
          )
      self.CanLookupCompositionRepositoryMappings = channel.unary_unary(
          '/dlkit.proto.repository.CompositionRepositorySession/CanLookupCompositionRepositoryMappings',
          request_serializer=CanLookupCompositionRepositoryMappingsRequest.SerializeToString,
          response_deserializer=CanLookupCompositionRepositoryMappingsReply.FromString,
          )
      self.GetCompositionIdsByRepository = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositorySession/GetCompositionIdsByRepository',
          request_serializer=GetCompositionIdsByRepositoryRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetCompositionsByRepository = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositorySession/GetCompositionsByRepository',
          request_serializer=GetCompositionsByRepositoryRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )
      self.GetCompositionIdsByRepositories = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositorySession/GetCompositionIdsByRepositories',
          request_serializer=GetCompositionIdsByRepositoriesRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetCompositionsByRepositories = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositorySession/GetCompositionsByRepositories',
          request_serializer=GetCompositionsByRepositoriesRequest.SerializeToString,
          response_deserializer=Composition.FromString,
          )
      self.GetRepositoryIdsByComposition = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositorySession/GetRepositoryIdsByComposition',
          request_serializer=GetRepositoryIdsByCompositionRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetRepositoriesByComposition = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositorySession/GetRepositoriesByComposition',
          request_serializer=GetRepositoriesByCompositionRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )


  class CompositionRepositorySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def UseComparativeCompositionRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryCompositionRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanLookupCompositionRepositoryMappings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionIdsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionIdsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCompositionsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryIdsByComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CompositionRepositorySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'UseComparativeCompositionRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeCompositionRepositoryView,
            request_deserializer=UseComparativeCompositionRepositoryViewRequest.FromString,
            response_serializer=UseComparativeCompositionRepositoryViewReply.SerializeToString,
        ),
        'UsePlenaryCompositionRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryCompositionRepositoryView,
            request_deserializer=UsePlenaryCompositionRepositoryViewRequest.FromString,
            response_serializer=UsePlenaryCompositionRepositoryViewReply.SerializeToString,
        ),
        'CanLookupCompositionRepositoryMappings': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupCompositionRepositoryMappings,
            request_deserializer=CanLookupCompositionRepositoryMappingsRequest.FromString,
            response_serializer=CanLookupCompositionRepositoryMappingsReply.SerializeToString,
        ),
        'GetCompositionIdsByRepository': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionIdsByRepository,
            request_deserializer=GetCompositionIdsByRepositoryRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetCompositionsByRepository': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByRepository,
            request_deserializer=GetCompositionsByRepositoryRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
        'GetCompositionIdsByRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionIdsByRepositories,
            request_deserializer=GetCompositionIdsByRepositoriesRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetCompositionsByRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetCompositionsByRepositories,
            request_deserializer=GetCompositionsByRepositoriesRequest.FromString,
            response_serializer=Composition.SerializeToString,
        ),
        'GetRepositoryIdsByComposition': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoryIdsByComposition,
            request_deserializer=GetRepositoryIdsByCompositionRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetRepositoriesByComposition': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByComposition,
            request_deserializer=GetRepositoriesByCompositionRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.CompositionRepositorySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class CompositionRepositoryAssignmentSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanAssignCompositions = channel.unary_unary(
          '/dlkit.proto.repository.CompositionRepositoryAssignmentSession/CanAssignCompositions',
          request_serializer=CanAssignCompositionsRequest.SerializeToString,
          response_deserializer=CanAssignCompositionsReply.FromString,
          )
      self.CanAssignCompositionsToRepository = channel.unary_unary(
          '/dlkit.proto.repository.CompositionRepositoryAssignmentSession/CanAssignCompositionsToRepository',
          request_serializer=CanAssignCompositionsToRepositoryRequest.SerializeToString,
          response_deserializer=CanAssignCompositionsToRepositoryReply.FromString,
          )
      self.GetAssignableRepositoryIds = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositoryAssignmentSession/GetAssignableRepositoryIds',
          request_serializer=GetAssignableRepositoryIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetAssignableRepositoryIdsForComposition = channel.unary_stream(
          '/dlkit.proto.repository.CompositionRepositoryAssignmentSession/GetAssignableRepositoryIdsForComposition',
          request_serializer=GetAssignableRepositoryIdsForCompositionRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.AssignCompositionToRepository = channel.unary_unary(
          '/dlkit.proto.repository.CompositionRepositoryAssignmentSession/AssignCompositionToRepository',
          request_serializer=AssignCompositionToRepositoryRequest.SerializeToString,
          response_deserializer=AssignCompositionToRepositoryReply.FromString,
          )
      self.UnassignCompositionFromRepository = channel.unary_unary(
          '/dlkit.proto.repository.CompositionRepositoryAssignmentSession/UnassignCompositionFromRepository',
          request_serializer=UnassignCompositionFromRepositoryRequest.SerializeToString,
          response_deserializer=UnassignCompositionFromRepositoryReply.FromString,
          )


  class CompositionRepositoryAssignmentSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanAssignCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanAssignCompositionsToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssignableRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetAssignableRepositoryIdsForComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AssignCompositionToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnassignCompositionFromRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_CompositionRepositoryAssignmentSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanAssignCompositions': grpc.unary_unary_rpc_method_handler(
            servicer.CanAssignCompositions,
            request_deserializer=CanAssignCompositionsRequest.FromString,
            response_serializer=CanAssignCompositionsReply.SerializeToString,
        ),
        'CanAssignCompositionsToRepository': grpc.unary_unary_rpc_method_handler(
            servicer.CanAssignCompositionsToRepository,
            request_deserializer=CanAssignCompositionsToRepositoryRequest.FromString,
            response_serializer=CanAssignCompositionsToRepositoryReply.SerializeToString,
        ),
        'GetAssignableRepositoryIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssignableRepositoryIds,
            request_deserializer=GetAssignableRepositoryIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetAssignableRepositoryIdsForComposition': grpc.unary_stream_rpc_method_handler(
            servicer.GetAssignableRepositoryIdsForComposition,
            request_deserializer=GetAssignableRepositoryIdsForCompositionRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'AssignCompositionToRepository': grpc.unary_unary_rpc_method_handler(
            servicer.AssignCompositionToRepository,
            request_deserializer=AssignCompositionToRepositoryRequest.FromString,
            response_serializer=AssignCompositionToRepositoryReply.SerializeToString,
        ),
        'UnassignCompositionFromRepository': grpc.unary_unary_rpc_method_handler(
            servicer.UnassignCompositionFromRepository,
            request_deserializer=UnassignCompositionFromRepositoryRequest.FromString,
            response_serializer=UnassignCompositionFromRepositoryReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.CompositionRepositoryAssignmentSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RepositoryLookupSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanLookupRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryLookupSession/CanLookupRepositories',
          request_serializer=CanLookupRepositoriesRequest.SerializeToString,
          response_deserializer=CanLookupRepositoriesReply.FromString,
          )
      self.UseComparativeRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryLookupSession/UseComparativeRepositoryView',
          request_serializer=UseComparativeRepositoryViewRequest.SerializeToString,
          response_deserializer=UseComparativeRepositoryViewReply.FromString,
          )
      self.UsePlenaryRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryLookupSession/UsePlenaryRepositoryView',
          request_serializer=UsePlenaryRepositoryViewRequest.SerializeToString,
          response_deserializer=UsePlenaryRepositoryViewReply.FromString,
          )
      self.GetRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryLookupSession/GetRepository',
          request_serializer=GetRepositoryRequest.SerializeToString,
          response_deserializer=GetRepositoryReply.FromString,
          )
      self.GetRepositoriesByIds = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryLookupSession/GetRepositoriesByIds',
          request_serializer=GetRepositoriesByIdsRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.GetRepositoriesByGenusType = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryLookupSession/GetRepositoriesByGenusType',
          request_serializer=GetRepositoriesByGenusTypeRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.GetRepositoriesByParentGenusType = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryLookupSession/GetRepositoriesByParentGenusType',
          request_serializer=GetRepositoriesByParentGenusTypeRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.GetRepositoriesByRecordType = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryLookupSession/GetRepositoriesByRecordType',
          request_serializer=GetRepositoriesByRecordTypeRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.GetRepositoriesByProvider = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryLookupSession/GetRepositoriesByProvider',
          request_serializer=GetRepositoriesByProviderRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.GetRepositories = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryLookupSession/GetRepositories',
          request_serializer=GetRepositoriesRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )


  class RepositoryLookupSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanLookupRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RepositoryLookupSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanLookupRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.CanLookupRepositories,
            request_deserializer=CanLookupRepositoriesRequest.FromString,
            response_serializer=CanLookupRepositoriesReply.SerializeToString,
        ),
        'UseComparativeRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeRepositoryView,
            request_deserializer=UseComparativeRepositoryViewRequest.FromString,
            response_serializer=UseComparativeRepositoryViewReply.SerializeToString,
        ),
        'UsePlenaryRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryRepositoryView,
            request_deserializer=UsePlenaryRepositoryViewRequest.FromString,
            response_serializer=UsePlenaryRepositoryViewReply.SerializeToString,
        ),
        'GetRepository': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepository,
            request_deserializer=GetRepositoryRequest.FromString,
            response_serializer=GetRepositoryReply.SerializeToString,
        ),
        'GetRepositoriesByIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByIds,
            request_deserializer=GetRepositoriesByIdsRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'GetRepositoriesByGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByGenusType,
            request_deserializer=GetRepositoriesByGenusTypeRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'GetRepositoriesByParentGenusType': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByParentGenusType,
            request_deserializer=GetRepositoriesByParentGenusTypeRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'GetRepositoriesByRecordType': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByRecordType,
            request_deserializer=GetRepositoriesByRecordTypeRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'GetRepositoriesByProvider': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByProvider,
            request_deserializer=GetRepositoriesByProviderRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'GetRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositories,
            request_deserializer=GetRepositoriesRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.RepositoryLookupSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RepositoryQuerySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanSearchRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryQuerySession/CanSearchRepositories',
          request_serializer=CanSearchRepositoriesRequest.SerializeToString,
          response_deserializer=CanSearchRepositoriesReply.FromString,
          )
      self.GetRepositoryQuery = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryQuerySession/GetRepositoryQuery',
          request_serializer=GetRepositoryQueryRequest.SerializeToString,
          response_deserializer=GetRepositoryQueryReply.FromString,
          )
      self.GetRepositoriesByQuery = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryQuerySession/GetRepositoriesByQuery',
          request_serializer=GetRepositoriesByQueryRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )


  class RepositoryQuerySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanSearchRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoriesByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RepositoryQuerySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanSearchRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.CanSearchRepositories,
            request_deserializer=CanSearchRepositoriesRequest.FromString,
            response_serializer=CanSearchRepositoriesReply.SerializeToString,
        ),
        'GetRepositoryQuery': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryQuery,
            request_deserializer=GetRepositoryQueryRequest.FromString,
            response_serializer=GetRepositoryQueryReply.SerializeToString,
        ),
        'GetRepositoriesByQuery': grpc.unary_stream_rpc_method_handler(
            servicer.GetRepositoriesByQuery,
            request_deserializer=GetRepositoriesByQueryRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.RepositoryQuerySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RepositoryAdminSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CanCreateRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/CanCreateRepositories',
          request_serializer=CanCreateRepositoriesRequest.SerializeToString,
          response_deserializer=CanCreateRepositoriesReply.FromString,
          )
      self.CanCreateRepositoryWithRecordTypes = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/CanCreateRepositoryWithRecordTypes',
          request_serializer=CanCreateRepositoryWithRecordTypesRequest.SerializeToString,
          response_deserializer=CanCreateRepositoryWithRecordTypesReply.FromString,
          )
      self.GetRepositoryFormForCreate = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/GetRepositoryFormForCreate',
          request_serializer=GetRepositoryFormForCreateRequest.SerializeToString,
          response_deserializer=GetRepositoryFormForCreateReply.FromString,
          )
      self.CreateRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/CreateRepository',
          request_serializer=CreateRepositoryRequest.SerializeToString,
          response_deserializer=CreateRepositoryReply.FromString,
          )
      self.CanUpdateRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/CanUpdateRepositories',
          request_serializer=CanUpdateRepositoriesRequest.SerializeToString,
          response_deserializer=CanUpdateRepositoriesReply.FromString,
          )
      self.GetRepositoryFormForUpdate = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/GetRepositoryFormForUpdate',
          request_serializer=GetRepositoryFormForUpdateRequest.SerializeToString,
          response_deserializer=GetRepositoryFormForUpdateReply.FromString,
          )
      self.UpdateRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/UpdateRepository',
          request_serializer=UpdateRepositoryRequest.SerializeToString,
          response_deserializer=UpdateRepositoryReply.FromString,
          )
      self.CanDeleteRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/CanDeleteRepositories',
          request_serializer=CanDeleteRepositoriesRequest.SerializeToString,
          response_deserializer=CanDeleteRepositoriesReply.FromString,
          )
      self.DeleteRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/DeleteRepository',
          request_serializer=DeleteRepositoryRequest.SerializeToString,
          response_deserializer=DeleteRepositoryReply.FromString,
          )
      self.CanManageRepositoryAliases = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/CanManageRepositoryAliases',
          request_serializer=CanManageRepositoryAliasesRequest.SerializeToString,
          response_deserializer=CanManageRepositoryAliasesReply.FromString,
          )
      self.AliasRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryAdminSession/AliasRepository',
          request_serializer=AliasRepositoryRequest.SerializeToString,
          response_deserializer=AliasRepositoryReply.FromString,
          )


  class RepositoryAdminSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CanCreateRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanCreateRepositoryWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanUpdateRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanDeleteRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanManageRepositoryAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AliasRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RepositoryAdminSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CanCreateRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateRepositories,
            request_deserializer=CanCreateRepositoriesRequest.FromString,
            response_serializer=CanCreateRepositoriesReply.SerializeToString,
        ),
        'CanCreateRepositoryWithRecordTypes': grpc.unary_unary_rpc_method_handler(
            servicer.CanCreateRepositoryWithRecordTypes,
            request_deserializer=CanCreateRepositoryWithRecordTypesRequest.FromString,
            response_serializer=CanCreateRepositoryWithRecordTypesReply.SerializeToString,
        ),
        'GetRepositoryFormForCreate': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryFormForCreate,
            request_deserializer=GetRepositoryFormForCreateRequest.FromString,
            response_serializer=GetRepositoryFormForCreateReply.SerializeToString,
        ),
        'CreateRepository': grpc.unary_unary_rpc_method_handler(
            servicer.CreateRepository,
            request_deserializer=CreateRepositoryRequest.FromString,
            response_serializer=CreateRepositoryReply.SerializeToString,
        ),
        'CanUpdateRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.CanUpdateRepositories,
            request_deserializer=CanUpdateRepositoriesRequest.FromString,
            response_serializer=CanUpdateRepositoriesReply.SerializeToString,
        ),
        'GetRepositoryFormForUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryFormForUpdate,
            request_deserializer=GetRepositoryFormForUpdateRequest.FromString,
            response_serializer=GetRepositoryFormForUpdateReply.SerializeToString,
        ),
        'UpdateRepository': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateRepository,
            request_deserializer=UpdateRepositoryRequest.FromString,
            response_serializer=UpdateRepositoryReply.SerializeToString,
        ),
        'CanDeleteRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.CanDeleteRepositories,
            request_deserializer=CanDeleteRepositoriesRequest.FromString,
            response_serializer=CanDeleteRepositoriesReply.SerializeToString,
        ),
        'DeleteRepository': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteRepository,
            request_deserializer=DeleteRepositoryRequest.FromString,
            response_serializer=DeleteRepositoryReply.SerializeToString,
        ),
        'CanManageRepositoryAliases': grpc.unary_unary_rpc_method_handler(
            servicer.CanManageRepositoryAliases,
            request_deserializer=CanManageRepositoryAliasesRequest.FromString,
            response_serializer=CanManageRepositoryAliasesReply.SerializeToString,
        ),
        'AliasRepository': grpc.unary_unary_rpc_method_handler(
            servicer.AliasRepository,
            request_deserializer=AliasRepositoryRequest.FromString,
            response_serializer=AliasRepositoryReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.RepositoryAdminSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RepositoryHierarchySessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryHierarchyId = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetRepositoryHierarchyId',
          request_serializer=GetRepositoryHierarchyIdRequest.SerializeToString,
          response_deserializer=GetRepositoryHierarchyIdReply.FromString,
          )
      self.GetRepositoryHierarchy = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetRepositoryHierarchy',
          request_serializer=GetRepositoryHierarchyRequest.SerializeToString,
          response_deserializer=GetRepositoryHierarchyReply.FromString,
          )
      self.CanAccessRepositoryHierarchy = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/CanAccessRepositoryHierarchy',
          request_serializer=CanAccessRepositoryHierarchyRequest.SerializeToString,
          response_deserializer=CanAccessRepositoryHierarchyReply.FromString,
          )
      self.UseComparativeRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/UseComparativeRepositoryView',
          request_serializer=UseComparativeRepositoryViewRequest.SerializeToString,
          response_deserializer=UseComparativeRepositoryViewReply.FromString,
          )
      self.UsePlenaryRepositoryView = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/UsePlenaryRepositoryView',
          request_serializer=UsePlenaryRepositoryViewRequest.SerializeToString,
          response_deserializer=UsePlenaryRepositoryViewReply.FromString,
          )
      self.GetRootRepositoryIds = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetRootRepositoryIds',
          request_serializer=GetRootRepositoryIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetRootRepositories = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetRootRepositories',
          request_serializer=GetRootRepositoriesRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.HasParentRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/HasParentRepositories',
          request_serializer=HasParentRepositoriesRequest.SerializeToString,
          response_deserializer=HasParentRepositoriesReply.FromString,
          )
      self.IsParentOfRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/IsParentOfRepository',
          request_serializer=IsParentOfRepositoryRequest.SerializeToString,
          response_deserializer=IsParentOfRepositoryReply.FromString,
          )
      self.GetParentRepositoryIds = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetParentRepositoryIds',
          request_serializer=GetParentRepositoryIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetParentRepositories = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetParentRepositories',
          request_serializer=GetParentRepositoriesRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.IsAncestorOfRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/IsAncestorOfRepository',
          request_serializer=IsAncestorOfRepositoryRequest.SerializeToString,
          response_deserializer=IsAncestorOfRepositoryReply.FromString,
          )
      self.HasChildRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/HasChildRepositories',
          request_serializer=HasChildRepositoriesRequest.SerializeToString,
          response_deserializer=HasChildRepositoriesReply.FromString,
          )
      self.IsChildOfRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/IsChildOfRepository',
          request_serializer=IsChildOfRepositoryRequest.SerializeToString,
          response_deserializer=IsChildOfRepositoryReply.FromString,
          )
      self.GetChildRepositoryIds = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetChildRepositoryIds',
          request_serializer=GetChildRepositoryIdsRequest.SerializeToString,
          response_deserializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
          )
      self.GetChildRepositories = channel.unary_stream(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetChildRepositories',
          request_serializer=GetChildRepositoriesRequest.SerializeToString,
          response_deserializer=Repository.FromString,
          )
      self.IsDescendantOfRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/IsDescendantOfRepository',
          request_serializer=IsDescendantOfRepositoryRequest.SerializeToString,
          response_deserializer=IsDescendantOfRepositoryReply.FromString,
          )
      self.GetRepositoryNodeIds = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetRepositoryNodeIds',
          request_serializer=GetRepositoryNodeIdsRequest.SerializeToString,
          response_deserializer=GetRepositoryNodeIdsReply.FromString,
          )
      self.GetRepositoryNodes = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchySession/GetRepositoryNodes',
          request_serializer=GetRepositoryNodesRequest.SerializeToString,
          response_deserializer=GetRepositoryNodesReply.FromString,
          )


  class RepositoryHierarchySessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanAccessRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UseComparativeRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UsePlenaryRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRootRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRootRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HasParentRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsParentOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParentRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetParentRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsAncestorOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HasChildRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsChildOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetChildRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetChildRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IsDescendantOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryNodeIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryNodes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RepositoryHierarchySessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryHierarchyId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryHierarchyId,
            request_deserializer=GetRepositoryHierarchyIdRequest.FromString,
            response_serializer=GetRepositoryHierarchyIdReply.SerializeToString,
        ),
        'GetRepositoryHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryHierarchy,
            request_deserializer=GetRepositoryHierarchyRequest.FromString,
            response_serializer=GetRepositoryHierarchyReply.SerializeToString,
        ),
        'CanAccessRepositoryHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.CanAccessRepositoryHierarchy,
            request_deserializer=CanAccessRepositoryHierarchyRequest.FromString,
            response_serializer=CanAccessRepositoryHierarchyReply.SerializeToString,
        ),
        'UseComparativeRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UseComparativeRepositoryView,
            request_deserializer=UseComparativeRepositoryViewRequest.FromString,
            response_serializer=UseComparativeRepositoryViewReply.SerializeToString,
        ),
        'UsePlenaryRepositoryView': grpc.unary_unary_rpc_method_handler(
            servicer.UsePlenaryRepositoryView,
            request_deserializer=UsePlenaryRepositoryViewRequest.FromString,
            response_serializer=UsePlenaryRepositoryViewReply.SerializeToString,
        ),
        'GetRootRepositoryIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetRootRepositoryIds,
            request_deserializer=GetRootRepositoryIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetRootRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetRootRepositories,
            request_deserializer=GetRootRepositoriesRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'HasParentRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.HasParentRepositories,
            request_deserializer=HasParentRepositoriesRequest.FromString,
            response_serializer=HasParentRepositoriesReply.SerializeToString,
        ),
        'IsParentOfRepository': grpc.unary_unary_rpc_method_handler(
            servicer.IsParentOfRepository,
            request_deserializer=IsParentOfRepositoryRequest.FromString,
            response_serializer=IsParentOfRepositoryReply.SerializeToString,
        ),
        'GetParentRepositoryIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetParentRepositoryIds,
            request_deserializer=GetParentRepositoryIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetParentRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetParentRepositories,
            request_deserializer=GetParentRepositoriesRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'IsAncestorOfRepository': grpc.unary_unary_rpc_method_handler(
            servicer.IsAncestorOfRepository,
            request_deserializer=IsAncestorOfRepositoryRequest.FromString,
            response_serializer=IsAncestorOfRepositoryReply.SerializeToString,
        ),
        'HasChildRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.HasChildRepositories,
            request_deserializer=HasChildRepositoriesRequest.FromString,
            response_serializer=HasChildRepositoriesReply.SerializeToString,
        ),
        'IsChildOfRepository': grpc.unary_unary_rpc_method_handler(
            servicer.IsChildOfRepository,
            request_deserializer=IsChildOfRepositoryRequest.FromString,
            response_serializer=IsChildOfRepositoryReply.SerializeToString,
        ),
        'GetChildRepositoryIds': grpc.unary_stream_rpc_method_handler(
            servicer.GetChildRepositoryIds,
            request_deserializer=GetChildRepositoryIdsRequest.FromString,
            response_serializer=dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
        ),
        'GetChildRepositories': grpc.unary_stream_rpc_method_handler(
            servicer.GetChildRepositories,
            request_deserializer=GetChildRepositoriesRequest.FromString,
            response_serializer=Repository.SerializeToString,
        ),
        'IsDescendantOfRepository': grpc.unary_unary_rpc_method_handler(
            servicer.IsDescendantOfRepository,
            request_deserializer=IsDescendantOfRepositoryRequest.FromString,
            response_serializer=IsDescendantOfRepositoryReply.SerializeToString,
        ),
        'GetRepositoryNodeIds': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryNodeIds,
            request_deserializer=GetRepositoryNodeIdsRequest.FromString,
            response_serializer=GetRepositoryNodeIdsReply.SerializeToString,
        ),
        'GetRepositoryNodes': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryNodes,
            request_deserializer=GetRepositoryNodesRequest.FromString,
            response_serializer=GetRepositoryNodesReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.RepositoryHierarchySession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class RepositoryHierarchyDesignSessionStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetRepositoryHierarchyId = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/GetRepositoryHierarchyId',
          request_serializer=GetRepositoryHierarchyIdRequest.SerializeToString,
          response_deserializer=GetRepositoryHierarchyIdReply.FromString,
          )
      self.GetRepositoryHierarchy = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/GetRepositoryHierarchy',
          request_serializer=GetRepositoryHierarchyRequest.SerializeToString,
          response_deserializer=GetRepositoryHierarchyReply.FromString,
          )
      self.CanModifyRepositoryHierarchy = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/CanModifyRepositoryHierarchy',
          request_serializer=CanModifyRepositoryHierarchyRequest.SerializeToString,
          response_deserializer=CanModifyRepositoryHierarchyReply.FromString,
          )
      self.AddRootRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/AddRootRepository',
          request_serializer=AddRootRepositoryRequest.SerializeToString,
          response_deserializer=AddRootRepositoryReply.FromString,
          )
      self.RemoveRootRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/RemoveRootRepository',
          request_serializer=RemoveRootRepositoryRequest.SerializeToString,
          response_deserializer=RemoveRootRepositoryReply.FromString,
          )
      self.AddChildRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/AddChildRepository',
          request_serializer=AddChildRepositoryRequest.SerializeToString,
          response_deserializer=AddChildRepositoryReply.FromString,
          )
      self.RemoveChildRepository = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/RemoveChildRepository',
          request_serializer=RemoveChildRepositoryRequest.SerializeToString,
          response_deserializer=RemoveChildRepositoryReply.FromString,
          )
      self.RemoveChildRepositories = channel.unary_unary(
          '/dlkit.proto.repository.RepositoryHierarchyDesignSession/RemoveChildRepositories',
          request_serializer=RemoveChildRepositoriesRequest.SerializeToString,
          response_deserializer=RemoveChildRepositoriesReply.FromString,
          )


  class RepositoryHierarchyDesignSessionServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetRepositoryHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CanModifyRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddRootRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveRootRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddChildRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveChildRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveChildRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_RepositoryHierarchyDesignSessionServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetRepositoryHierarchyId': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryHierarchyId,
            request_deserializer=GetRepositoryHierarchyIdRequest.FromString,
            response_serializer=GetRepositoryHierarchyIdReply.SerializeToString,
        ),
        'GetRepositoryHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.GetRepositoryHierarchy,
            request_deserializer=GetRepositoryHierarchyRequest.FromString,
            response_serializer=GetRepositoryHierarchyReply.SerializeToString,
        ),
        'CanModifyRepositoryHierarchy': grpc.unary_unary_rpc_method_handler(
            servicer.CanModifyRepositoryHierarchy,
            request_deserializer=CanModifyRepositoryHierarchyRequest.FromString,
            response_serializer=CanModifyRepositoryHierarchyReply.SerializeToString,
        ),
        'AddRootRepository': grpc.unary_unary_rpc_method_handler(
            servicer.AddRootRepository,
            request_deserializer=AddRootRepositoryRequest.FromString,
            response_serializer=AddRootRepositoryReply.SerializeToString,
        ),
        'RemoveRootRepository': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveRootRepository,
            request_deserializer=RemoveRootRepositoryRequest.FromString,
            response_serializer=RemoveRootRepositoryReply.SerializeToString,
        ),
        'AddChildRepository': grpc.unary_unary_rpc_method_handler(
            servicer.AddChildRepository,
            request_deserializer=AddChildRepositoryRequest.FromString,
            response_serializer=AddChildRepositoryReply.SerializeToString,
        ),
        'RemoveChildRepository': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveChildRepository,
            request_deserializer=RemoveChildRepositoryRequest.FromString,
            response_serializer=RemoveChildRepositoryReply.SerializeToString,
        ),
        'RemoveChildRepositories': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveChildRepositories,
            request_deserializer=RemoveChildRepositoriesRequest.FromString,
            response_serializer=RemoveChildRepositoriesReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'dlkit.proto.repository.RepositoryHierarchyDesignSession', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaAssetLookupSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanLookupAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeAssetView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryAssetView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetLookupSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanLookupAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupAssets.future = None
    def UseComparativeAssetView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeAssetView.future = None
    def UsePlenaryAssetView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryAssetView.future = None
    def UseFederatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedRepositoryView.future = None
    def UseIsolatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedRepositoryView.future = None
    def GetAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAsset.future = None
    def GetAssetsByIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssetsByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssetsByParentGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssetsByRecordType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssetsByProvider(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_AssetLookupSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetLookupSession', 'CanLookupAssets'): CanLookupAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAsset'): GetAssetRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssets'): GetAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByGenusType'): GetAssetsByGenusTypeRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByIds'): GetAssetsByIdsRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByParentGenusType'): GetAssetsByParentGenusTypeRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByProvider'): GetAssetsByProviderRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByRecordType'): GetAssetsByRecordTypeRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseComparativeAssetView'): UseComparativeAssetViewRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UsePlenaryAssetView'): UsePlenaryAssetViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetLookupSession', 'CanLookupAssets'): CanLookupAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAsset'): GetAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssets'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByGenusType'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByIds'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByParentGenusType'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByProvider'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByRecordType'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseComparativeAssetView'): UseComparativeAssetViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UsePlenaryAssetView'): UsePlenaryAssetViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetLookupSession', 'CanLookupAssets'): face_utilities.unary_unary_inline(servicer.CanLookupAssets),
      ('dlkit.proto.repository.AssetLookupSession', 'GetAsset'): face_utilities.unary_unary_inline(servicer.GetAsset),
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssets'): face_utilities.unary_stream_inline(servicer.GetAssets),
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByGenusType'): face_utilities.unary_stream_inline(servicer.GetAssetsByGenusType),
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByIds'): face_utilities.unary_stream_inline(servicer.GetAssetsByIds),
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByParentGenusType'): face_utilities.unary_stream_inline(servicer.GetAssetsByParentGenusType),
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByProvider'): face_utilities.unary_stream_inline(servicer.GetAssetsByProvider),
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByRecordType'): face_utilities.unary_stream_inline(servicer.GetAssetsByRecordType),
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.AssetLookupSession', 'UseComparativeAssetView'): face_utilities.unary_unary_inline(servicer.UseComparativeAssetView),
      ('dlkit.proto.repository.AssetLookupSession', 'UseFederatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseFederatedRepositoryView),
      ('dlkit.proto.repository.AssetLookupSession', 'UseIsolatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseIsolatedRepositoryView),
      ('dlkit.proto.repository.AssetLookupSession', 'UsePlenaryAssetView'): face_utilities.unary_unary_inline(servicer.UsePlenaryAssetView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetLookupSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetLookupSession', 'CanLookupAssets'): CanLookupAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAsset'): GetAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssets'): GetAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByGenusType'): GetAssetsByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByIds'): GetAssetsByIdsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByParentGenusType'): GetAssetsByParentGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByProvider'): GetAssetsByProviderRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByRecordType'): GetAssetsByRecordTypeRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseComparativeAssetView'): UseComparativeAssetViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetLookupSession', 'UsePlenaryAssetView'): UsePlenaryAssetViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetLookupSession', 'CanLookupAssets'): CanLookupAssetsReply.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAsset'): GetAssetReply.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssets'): Asset.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByGenusType'): Asset.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByIds'): Asset.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByParentGenusType'): Asset.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByProvider'): Asset.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetAssetsByRecordType'): Asset.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseComparativeAssetView'): UseComparativeAssetViewReply.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.AssetLookupSession', 'UsePlenaryAssetView'): UsePlenaryAssetViewReply.FromString,
    }
    cardinalities = {
      'CanLookupAssets': cardinality.Cardinality.UNARY_UNARY,
      'GetAsset': cardinality.Cardinality.UNARY_UNARY,
      'GetAssets': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetsByGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetsByIds': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetsByParentGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetsByProvider': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetsByRecordType': cardinality.Cardinality.UNARY_STREAM,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeAssetView': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryAssetView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetLookupSession', cardinalities, options=stub_options)


  class BetaAssetQuerySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanSearchAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetQuerySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanSearchAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanSearchAssets.future = None
    def UseFederatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedRepositoryView.future = None
    def UseIsolatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedRepositoryView.future = None
    def GetAssetQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetQuery.future = None
    def GetAssetsByQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_AssetQuerySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetQuerySession', 'CanSearchAssets'): CanSearchAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetQuery'): GetAssetQueryRequest.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetsByQuery'): GetAssetsByQueryRequest.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetQuerySession', 'CanSearchAssets'): CanSearchAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetQuery'): GetAssetQueryReply.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetsByQuery'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetQuerySession', 'CanSearchAssets'): face_utilities.unary_unary_inline(servicer.CanSearchAssets),
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetQuery'): face_utilities.unary_unary_inline(servicer.GetAssetQuery),
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetsByQuery'): face_utilities.unary_stream_inline(servicer.GetAssetsByQuery),
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.AssetQuerySession', 'UseFederatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseFederatedRepositoryView),
      ('dlkit.proto.repository.AssetQuerySession', 'UseIsolatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseIsolatedRepositoryView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetQuerySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetQuerySession', 'CanSearchAssets'): CanSearchAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetQuery'): GetAssetQueryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetsByQuery'): GetAssetsByQueryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetQuerySession', 'CanSearchAssets'): CanSearchAssetsReply.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetQuery'): GetAssetQueryReply.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetAssetsByQuery'): Asset.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.AssetQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.FromString,
    }
    cardinalities = {
      'CanSearchAssets': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetQuery': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetsByQuery': cardinality.Cardinality.UNARY_STREAM,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetQuerySession', cardinalities, options=stub_options)


  class BetaAssetSearchSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetAssetSearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetSearchOrder(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsBySearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetQueryFromInspector(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetSearchSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetAssetSearch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetSearch.future = None
    def GetAssetSearchOrder(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetSearchOrder.future = None
    def GetAssetsBySearch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetsBySearch.future = None
    def GetAssetQueryFromInspector(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetQueryFromInspector.future = None


  def beta_create_AssetSearchSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetQueryFromInspector'): GetAssetQueryFromInspectorRequest.FromString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearch'): GetAssetSearchRequest.FromString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearchOrder'): GetAssetSearchOrderRequest.FromString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetsBySearch'): GetAssetsBySearchRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetQueryFromInspector'): GetAssetQueryFromInspectorReply.SerializeToString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearch'): GetAssetSearchReply.SerializeToString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearchOrder'): GetAssetSearchOrderReply.SerializeToString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetsBySearch'): GetAssetsBySearchReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetQueryFromInspector'): face_utilities.unary_unary_inline(servicer.GetAssetQueryFromInspector),
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearch'): face_utilities.unary_unary_inline(servicer.GetAssetSearch),
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearchOrder'): face_utilities.unary_unary_inline(servicer.GetAssetSearchOrder),
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetsBySearch'): face_utilities.unary_unary_inline(servicer.GetAssetsBySearch),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetSearchSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetQueryFromInspector'): GetAssetQueryFromInspectorRequest.SerializeToString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearch'): GetAssetSearchRequest.SerializeToString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearchOrder'): GetAssetSearchOrderRequest.SerializeToString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetsBySearch'): GetAssetsBySearchRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetQueryFromInspector'): GetAssetQueryFromInspectorReply.FromString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearch'): GetAssetSearchReply.FromString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetSearchOrder'): GetAssetSearchOrderReply.FromString,
      ('dlkit.proto.repository.AssetSearchSession', 'GetAssetsBySearch'): GetAssetsBySearchReply.FromString,
    }
    cardinalities = {
      'GetAssetQueryFromInspector': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetSearch': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetSearchOrder': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetsBySearch': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetSearchSession', cardinalities, options=stub_options)


  class BetaAssetAdminSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateAssetWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanUpdateAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanDeleteAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanManageAssetAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AliasAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateAssetContentWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetContentFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanUpdateAssetContents(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetContentFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanDeleteAssetContents(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteAssetContent(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetAdminSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanCreateAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateAssets.future = None
    def CanCreateAssetWithRecordTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateAssetWithRecordTypes.future = None
    def GetAssetFormForCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetFormForCreate.future = None
    def CreateAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateAsset.future = None
    def CanUpdateAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanUpdateAssets.future = None
    def GetAssetFormForUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetFormForUpdate.future = None
    def UpdateAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpdateAsset.future = None
    def CanDeleteAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanDeleteAssets.future = None
    def DeleteAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteAsset.future = None
    def CanManageAssetAliases(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanManageAssetAliases.future = None
    def AliasAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AliasAsset.future = None
    def CanCreateAssetContent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateAssetContent.future = None
    def CanCreateAssetContentWithRecordTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateAssetContentWithRecordTypes.future = None
    def GetAssetContentFormForCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetContentFormForCreate.future = None
    def CreateAssetContent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateAssetContent.future = None
    def CanUpdateAssetContents(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanUpdateAssetContents.future = None
    def GetAssetContentFormForUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetAssetContentFormForUpdate.future = None
    def UpdateAssetContent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpdateAssetContent.future = None
    def CanDeleteAssetContents(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanDeleteAssetContents.future = None
    def DeleteAssetContent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteAssetContent.future = None


  def beta_create_AssetAdminSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetAdminSession', 'AliasAsset'): AliasAssetRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContent'): CanCreateAssetContentRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContentWithRecordTypes'): CanCreateAssetContentWithRecordTypesRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetWithRecordTypes'): CanCreateAssetWithRecordTypesRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssets'): CanCreateAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssetContents'): CanDeleteAssetContentsRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssets'): CanDeleteAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanManageAssetAliases'): CanManageAssetAliasesRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssetContents'): CanUpdateAssetContentsRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssets'): CanUpdateAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAsset'): CreateAssetRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAssetContent'): CreateAssetContentRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAsset'): DeleteAssetRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAssetContent'): DeleteAssetContentRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForCreate'): GetAssetContentFormForCreateRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForUpdate'): GetAssetContentFormForUpdateRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForCreate'): GetAssetFormForCreateRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForUpdate'): GetAssetFormForUpdateRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAsset'): UpdateAssetRequest.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAssetContent'): UpdateAssetContentRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetAdminSession', 'AliasAsset'): AliasAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContent'): CanCreateAssetContentReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContentWithRecordTypes'): CanCreateAssetContentWithRecordTypesReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetWithRecordTypes'): CanCreateAssetWithRecordTypesReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssets'): CanCreateAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssetContents'): CanDeleteAssetContentsReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssets'): CanDeleteAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanManageAssetAliases'): CanManageAssetAliasesReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssetContents'): CanUpdateAssetContentsReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssets'): CanUpdateAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAsset'): CreateAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAssetContent'): CreateAssetContentReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAsset'): DeleteAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAssetContent'): DeleteAssetContentReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForCreate'): GetAssetContentFormForCreateReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForUpdate'): GetAssetContentFormForUpdateReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForCreate'): GetAssetFormForCreateReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForUpdate'): GetAssetFormForUpdateReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAsset'): UpdateAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAssetContent'): UpdateAssetContentReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetAdminSession', 'AliasAsset'): face_utilities.unary_unary_inline(servicer.AliasAsset),
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContent'): face_utilities.unary_unary_inline(servicer.CanCreateAssetContent),
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContentWithRecordTypes'): face_utilities.unary_unary_inline(servicer.CanCreateAssetContentWithRecordTypes),
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetWithRecordTypes'): face_utilities.unary_unary_inline(servicer.CanCreateAssetWithRecordTypes),
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssets'): face_utilities.unary_unary_inline(servicer.CanCreateAssets),
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssetContents'): face_utilities.unary_unary_inline(servicer.CanDeleteAssetContents),
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssets'): face_utilities.unary_unary_inline(servicer.CanDeleteAssets),
      ('dlkit.proto.repository.AssetAdminSession', 'CanManageAssetAliases'): face_utilities.unary_unary_inline(servicer.CanManageAssetAliases),
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssetContents'): face_utilities.unary_unary_inline(servicer.CanUpdateAssetContents),
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssets'): face_utilities.unary_unary_inline(servicer.CanUpdateAssets),
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAsset'): face_utilities.unary_unary_inline(servicer.CreateAsset),
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAssetContent'): face_utilities.unary_unary_inline(servicer.CreateAssetContent),
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAsset'): face_utilities.unary_unary_inline(servicer.DeleteAsset),
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAssetContent'): face_utilities.unary_unary_inline(servicer.DeleteAssetContent),
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForCreate'): face_utilities.unary_unary_inline(servicer.GetAssetContentFormForCreate),
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForUpdate'): face_utilities.unary_unary_inline(servicer.GetAssetContentFormForUpdate),
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForCreate'): face_utilities.unary_unary_inline(servicer.GetAssetFormForCreate),
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForUpdate'): face_utilities.unary_unary_inline(servicer.GetAssetFormForUpdate),
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAsset'): face_utilities.unary_unary_inline(servicer.UpdateAsset),
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAssetContent'): face_utilities.unary_unary_inline(servicer.UpdateAssetContent),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetAdminSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetAdminSession', 'AliasAsset'): AliasAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContent'): CanCreateAssetContentRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContentWithRecordTypes'): CanCreateAssetContentWithRecordTypesRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetWithRecordTypes'): CanCreateAssetWithRecordTypesRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssets'): CanCreateAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssetContents'): CanDeleteAssetContentsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssets'): CanDeleteAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanManageAssetAliases'): CanManageAssetAliasesRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssetContents'): CanUpdateAssetContentsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssets'): CanUpdateAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAsset'): CreateAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAssetContent'): CreateAssetContentRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAsset'): DeleteAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAssetContent'): DeleteAssetContentRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForCreate'): GetAssetContentFormForCreateRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForUpdate'): GetAssetContentFormForUpdateRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForCreate'): GetAssetFormForCreateRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForUpdate'): GetAssetFormForUpdateRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAsset'): UpdateAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAssetContent'): UpdateAssetContentRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetAdminSession', 'AliasAsset'): AliasAssetReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContent'): CanCreateAssetContentReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetContentWithRecordTypes'): CanCreateAssetContentWithRecordTypesReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssetWithRecordTypes'): CanCreateAssetWithRecordTypesReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanCreateAssets'): CanCreateAssetsReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssetContents'): CanDeleteAssetContentsReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanDeleteAssets'): CanDeleteAssetsReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanManageAssetAliases'): CanManageAssetAliasesReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssetContents'): CanUpdateAssetContentsReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CanUpdateAssets'): CanUpdateAssetsReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAsset'): CreateAssetReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'CreateAssetContent'): CreateAssetContentReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAsset'): DeleteAssetReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'DeleteAssetContent'): DeleteAssetContentReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForCreate'): GetAssetContentFormForCreateReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetContentFormForUpdate'): GetAssetContentFormForUpdateReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForCreate'): GetAssetFormForCreateReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetAssetFormForUpdate'): GetAssetFormForUpdateReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAsset'): UpdateAssetReply.FromString,
      ('dlkit.proto.repository.AssetAdminSession', 'UpdateAssetContent'): UpdateAssetContentReply.FromString,
    }
    cardinalities = {
      'AliasAsset': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateAssetContent': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateAssetContentWithRecordTypes': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateAssetWithRecordTypes': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateAssets': cardinality.Cardinality.UNARY_UNARY,
      'CanDeleteAssetContents': cardinality.Cardinality.UNARY_UNARY,
      'CanDeleteAssets': cardinality.Cardinality.UNARY_UNARY,
      'CanManageAssetAliases': cardinality.Cardinality.UNARY_UNARY,
      'CanUpdateAssetContents': cardinality.Cardinality.UNARY_UNARY,
      'CanUpdateAssets': cardinality.Cardinality.UNARY_UNARY,
      'CreateAsset': cardinality.Cardinality.UNARY_UNARY,
      'CreateAssetContent': cardinality.Cardinality.UNARY_UNARY,
      'DeleteAsset': cardinality.Cardinality.UNARY_UNARY,
      'DeleteAssetContent': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetContentFormForCreate': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetContentFormForUpdate': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetFormForCreate': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetFormForUpdate': cardinality.Cardinality.UNARY_UNARY,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'UpdateAsset': cardinality.Cardinality.UNARY_UNARY,
      'UpdateAssetContent': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetAdminSession', cardinalities, options=stub_options)


  class BetaAssetNotificationSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanRegisterForAssetNotifications(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForNewAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForNewAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForChangedAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForChangedAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForChangedAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForDeletedAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForDeletedAssetsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterForDeletedAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ReliableAssetNotifications(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnreliableAssetNotifications(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AcknowledgeAssetNotification(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetNotificationSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanRegisterForAssetNotifications(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanRegisterForAssetNotifications.future = None
    def UseFederatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedRepositoryView.future = None
    def UseIsolatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedRepositoryView.future = None
    def RegisterForNewAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForNewAssets.future = None
    def RegisterForNewAssetsByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForNewAssetsByGenusType.future = None
    def RegisterForChangedAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForChangedAssets.future = None
    def RegisterForChangedAssetsByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForChangedAssetsByGenusType.future = None
    def RegisterForChangedAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForChangedAsset.future = None
    def RegisterForDeletedAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForDeletedAssets.future = None
    def RegisterForDeletedAssetsByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForDeletedAssetsByGenusType.future = None
    def RegisterForDeletedAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RegisterForDeletedAsset.future = None
    def ReliableAssetNotifications(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ReliableAssetNotifications.future = None
    def UnreliableAssetNotifications(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UnreliableAssetNotifications.future = None
    def AcknowledgeAssetNotification(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AcknowledgeAssetNotification.future = None


  def beta_create_AssetNotificationSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetNotificationSession', 'AcknowledgeAssetNotification'): AcknowledgeAssetNotificationRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'CanRegisterForAssetNotifications'): CanRegisterForAssetNotificationsRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAsset'): RegisterForChangedAssetRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssets'): RegisterForChangedAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssetsByGenusType'): RegisterForChangedAssetsByGenusTypeRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAsset'): RegisterForDeletedAssetRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssets'): RegisterForDeletedAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssetsByGenusType'): RegisterForDeletedAssetsByGenusTypeRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssets'): RegisterForNewAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssetsByGenusType'): RegisterForNewAssetsByGenusTypeRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'ReliableAssetNotifications'): ReliableAssetNotificationsRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UnreliableAssetNotifications'): UnreliableAssetNotificationsRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetNotificationSession', 'AcknowledgeAssetNotification'): AcknowledgeAssetNotificationReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'CanRegisterForAssetNotifications'): CanRegisterForAssetNotificationsReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAsset'): RegisterForChangedAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssets'): RegisterForChangedAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssetsByGenusType'): RegisterForChangedAssetsByGenusTypeReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAsset'): RegisterForDeletedAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssets'): RegisterForDeletedAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssetsByGenusType'): RegisterForDeletedAssetsByGenusTypeReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssets'): RegisterForNewAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssetsByGenusType'): RegisterForNewAssetsByGenusTypeReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'ReliableAssetNotifications'): ReliableAssetNotificationsReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UnreliableAssetNotifications'): UnreliableAssetNotificationsReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetNotificationSession', 'AcknowledgeAssetNotification'): face_utilities.unary_unary_inline(servicer.AcknowledgeAssetNotification),
      ('dlkit.proto.repository.AssetNotificationSession', 'CanRegisterForAssetNotifications'): face_utilities.unary_unary_inline(servicer.CanRegisterForAssetNotifications),
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAsset'): face_utilities.unary_unary_inline(servicer.RegisterForChangedAsset),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssets'): face_utilities.unary_unary_inline(servicer.RegisterForChangedAssets),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssetsByGenusType'): face_utilities.unary_unary_inline(servicer.RegisterForChangedAssetsByGenusType),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAsset'): face_utilities.unary_unary_inline(servicer.RegisterForDeletedAsset),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssets'): face_utilities.unary_unary_inline(servicer.RegisterForDeletedAssets),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssetsByGenusType'): face_utilities.unary_unary_inline(servicer.RegisterForDeletedAssetsByGenusType),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssets'): face_utilities.unary_unary_inline(servicer.RegisterForNewAssets),
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssetsByGenusType'): face_utilities.unary_unary_inline(servicer.RegisterForNewAssetsByGenusType),
      ('dlkit.proto.repository.AssetNotificationSession', 'ReliableAssetNotifications'): face_utilities.unary_unary_inline(servicer.ReliableAssetNotifications),
      ('dlkit.proto.repository.AssetNotificationSession', 'UnreliableAssetNotifications'): face_utilities.unary_unary_inline(servicer.UnreliableAssetNotifications),
      ('dlkit.proto.repository.AssetNotificationSession', 'UseFederatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseFederatedRepositoryView),
      ('dlkit.proto.repository.AssetNotificationSession', 'UseIsolatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseIsolatedRepositoryView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetNotificationSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetNotificationSession', 'AcknowledgeAssetNotification'): AcknowledgeAssetNotificationRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'CanRegisterForAssetNotifications'): CanRegisterForAssetNotificationsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAsset'): RegisterForChangedAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssets'): RegisterForChangedAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssetsByGenusType'): RegisterForChangedAssetsByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAsset'): RegisterForDeletedAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssets'): RegisterForDeletedAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssetsByGenusType'): RegisterForDeletedAssetsByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssets'): RegisterForNewAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssetsByGenusType'): RegisterForNewAssetsByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'ReliableAssetNotifications'): ReliableAssetNotificationsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UnreliableAssetNotifications'): UnreliableAssetNotificationsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetNotificationSession', 'AcknowledgeAssetNotification'): AcknowledgeAssetNotificationReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'CanRegisterForAssetNotifications'): CanRegisterForAssetNotificationsReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAsset'): RegisterForChangedAssetReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssets'): RegisterForChangedAssetsReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForChangedAssetsByGenusType'): RegisterForChangedAssetsByGenusTypeReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAsset'): RegisterForDeletedAssetReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssets'): RegisterForDeletedAssetsReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForDeletedAssetsByGenusType'): RegisterForDeletedAssetsByGenusTypeReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssets'): RegisterForNewAssetsReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'RegisterForNewAssetsByGenusType'): RegisterForNewAssetsByGenusTypeReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'ReliableAssetNotifications'): ReliableAssetNotificationsReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UnreliableAssetNotifications'): UnreliableAssetNotificationsReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.AssetNotificationSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.FromString,
    }
    cardinalities = {
      'AcknowledgeAssetNotification': cardinality.Cardinality.UNARY_UNARY,
      'CanRegisterForAssetNotifications': cardinality.Cardinality.UNARY_UNARY,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForChangedAsset': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForChangedAssets': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForChangedAssetsByGenusType': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForDeletedAsset': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForDeletedAssets': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForDeletedAssetsByGenusType': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForNewAssets': cardinality.Cardinality.UNARY_UNARY,
      'RegisterForNewAssetsByGenusType': cardinality.Cardinality.UNARY_UNARY,
      'ReliableAssetNotifications': cardinality.Cardinality.UNARY_UNARY,
      'UnreliableAssetNotifications': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetNotificationSession', cardinalities, options=stub_options)


  class BetaAssetRepositorySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupAssetRepositoryMappings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetIdsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetIdsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssetsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryIdsByAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetRepositorySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupAssetRepositoryMappings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupAssetRepositoryMappings.future = None
    def UseComparativeRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeRepositoryView.future = None
    def UsePlenaryRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryRepositoryView.future = None
    def GetAssetIdsByRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssetsByRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssetIdsByRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssetsByRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoryIdsByAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoriesByAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_AssetRepositorySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetRepositorySession', 'CanLookupAssetRepositoryMappings'): CanLookupAssetRepositoryMappingsRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepositories'): GetAssetIdsByRepositoriesRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepository'): GetAssetIdsByRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepositories'): GetAssetsByRepositoriesRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepository'): GetAssetsByRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoriesByAsset'): GetRepositoriesByAssetRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoryIdsByAsset'): GetRepositoryIdsByAssetRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetRepositorySession', 'CanLookupAssetRepositoryMappings'): CanLookupAssetRepositoryMappingsReply.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepositories'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepository'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepositories'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepository'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoriesByAsset'): Repository.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoryIdsByAsset'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetRepositorySession', 'CanLookupAssetRepositoryMappings'): face_utilities.unary_unary_inline(servicer.CanLookupAssetRepositoryMappings),
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepositories'): face_utilities.unary_stream_inline(servicer.GetAssetIdsByRepositories),
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepository'): face_utilities.unary_stream_inline(servicer.GetAssetIdsByRepository),
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepositories'): face_utilities.unary_stream_inline(servicer.GetAssetsByRepositories),
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepository'): face_utilities.unary_stream_inline(servicer.GetAssetsByRepository),
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoriesByAsset'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByAsset),
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoryIdsByAsset'): face_utilities.unary_stream_inline(servicer.GetRepositoryIdsByAsset),
      ('dlkit.proto.repository.AssetRepositorySession', 'UseComparativeRepositoryView'): face_utilities.unary_unary_inline(servicer.UseComparativeRepositoryView),
      ('dlkit.proto.repository.AssetRepositorySession', 'UsePlenaryRepositoryView'): face_utilities.unary_unary_inline(servicer.UsePlenaryRepositoryView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetRepositorySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetRepositorySession', 'CanLookupAssetRepositoryMappings'): CanLookupAssetRepositoryMappingsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepositories'): GetAssetIdsByRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepository'): GetAssetIdsByRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepositories'): GetAssetsByRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepository'): GetAssetsByRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoriesByAsset'): GetRepositoriesByAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoryIdsByAsset'): GetRepositoryIdsByAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetRepositorySession', 'CanLookupAssetRepositoryMappings'): CanLookupAssetRepositoryMappingsReply.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepositories'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetIdsByRepository'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepositories'): Asset.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetAssetsByRepository'): Asset.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoriesByAsset'): Repository.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'GetRepositoryIdsByAsset'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewReply.FromString,
      ('dlkit.proto.repository.AssetRepositorySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewReply.FromString,
    }
    cardinalities = {
      'CanLookupAssetRepositoryMappings': cardinality.Cardinality.UNARY_UNARY,
      'GetAssetIdsByRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetIdsByRepository': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetsByRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetAssetsByRepository': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoriesByAsset': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoryIdsByAsset': cardinality.Cardinality.UNARY_STREAM,
      'UseComparativeRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryRepositoryView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetRepositorySession', cardinalities, options=stub_options)


  class BetaAssetRepositoryAssignmentSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanAssignAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanAssignAssetsToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssignableRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssignableRepositoryIdsForAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AssignAssetToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnassignAssetFromRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetRepositoryAssignmentSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanAssignAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAssignAssets.future = None
    def CanAssignAssetsToRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAssignAssetsToRepository.future = None
    def GetAssignableRepositoryIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssignableRepositoryIdsForAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def AssignAssetToRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AssignAssetToRepository.future = None
    def UnassignAssetFromRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UnassignAssetFromRepository.future = None


  def beta_create_AssetRepositoryAssignmentSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'AssignAssetToRepository'): AssignAssetToRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssets'): CanAssignAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssetsToRepository'): CanAssignAssetsToRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): GetAssignableRepositoryIdsRequest.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForAsset'): GetAssignableRepositoryIdsForAssetRequest.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'UnassignAssetFromRepository'): UnassignAssetFromRepositoryRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'AssignAssetToRepository'): AssignAssetToRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssets'): CanAssignAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssetsToRepository'): CanAssignAssetsToRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForAsset'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'UnassignAssetFromRepository'): UnassignAssetFromRepositoryReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'AssignAssetToRepository'): face_utilities.unary_unary_inline(servicer.AssignAssetToRepository),
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssets'): face_utilities.unary_unary_inline(servicer.CanAssignAssets),
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssetsToRepository'): face_utilities.unary_unary_inline(servicer.CanAssignAssetsToRepository),
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): face_utilities.unary_stream_inline(servicer.GetAssignableRepositoryIds),
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForAsset'): face_utilities.unary_stream_inline(servicer.GetAssignableRepositoryIdsForAsset),
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'UnassignAssetFromRepository'): face_utilities.unary_unary_inline(servicer.UnassignAssetFromRepository),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetRepositoryAssignmentSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'AssignAssetToRepository'): AssignAssetToRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssets'): CanAssignAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssetsToRepository'): CanAssignAssetsToRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): GetAssignableRepositoryIdsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForAsset'): GetAssignableRepositoryIdsForAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'UnassignAssetFromRepository'): UnassignAssetFromRepositoryRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'AssignAssetToRepository'): AssignAssetToRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssets'): CanAssignAssetsReply.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'CanAssignAssetsToRepository'): CanAssignAssetsToRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForAsset'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.AssetRepositoryAssignmentSession', 'UnassignAssetFromRepository'): UnassignAssetFromRepositoryReply.FromString,
    }
    cardinalities = {
      'AssignAssetToRepository': cardinality.Cardinality.UNARY_UNARY,
      'CanAssignAssets': cardinality.Cardinality.UNARY_UNARY,
      'CanAssignAssetsToRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetAssignableRepositoryIds': cardinality.Cardinality.UNARY_STREAM,
      'GetAssignableRepositoryIdsForAsset': cardinality.Cardinality.UNARY_STREAM,
      'UnassignAssetFromRepository': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetRepositoryAssignmentSession', cardinalities, options=stub_options)


  class BetaAssetCompositionSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanAccessAssetCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeAssetCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryAssetCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetCompositionSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanAccessAssetCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAccessAssetCompositions.future = None
    def UseComparativeAssetCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeAssetCompositionView.future = None
    def UsePlenaryAssetCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryAssetCompositionView.future = None
    def UseFederatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedRepositoryView.future = None
    def UseIsolatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedRepositoryView.future = None
    def GetCompositionAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionsByAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_AssetCompositionSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetCompositionSession', 'CanAccessAssetCompositions'): CanAccessAssetCompositionsRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionAssets'): GetCompositionAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionsByAsset'): GetCompositionsByAssetRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseComparativeAssetCompositionView'): UseComparativeAssetCompositionViewRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UsePlenaryAssetCompositionView'): UsePlenaryAssetCompositionViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetCompositionSession', 'CanAccessAssetCompositions'): CanAccessAssetCompositionsReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionAssets'): Asset.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionsByAsset'): Composition.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseComparativeAssetCompositionView'): UseComparativeAssetCompositionViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UsePlenaryAssetCompositionView'): UsePlenaryAssetCompositionViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetCompositionSession', 'CanAccessAssetCompositions'): face_utilities.unary_unary_inline(servicer.CanAccessAssetCompositions),
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionAssets'): face_utilities.unary_stream_inline(servicer.GetCompositionAssets),
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionsByAsset'): face_utilities.unary_stream_inline(servicer.GetCompositionsByAsset),
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.AssetCompositionSession', 'UseComparativeAssetCompositionView'): face_utilities.unary_unary_inline(servicer.UseComparativeAssetCompositionView),
      ('dlkit.proto.repository.AssetCompositionSession', 'UseFederatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseFederatedRepositoryView),
      ('dlkit.proto.repository.AssetCompositionSession', 'UseIsolatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseIsolatedRepositoryView),
      ('dlkit.proto.repository.AssetCompositionSession', 'UsePlenaryAssetCompositionView'): face_utilities.unary_unary_inline(servicer.UsePlenaryAssetCompositionView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetCompositionSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetCompositionSession', 'CanAccessAssetCompositions'): CanAccessAssetCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionAssets'): GetCompositionAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionsByAsset'): GetCompositionsByAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseComparativeAssetCompositionView'): UseComparativeAssetCompositionViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UsePlenaryAssetCompositionView'): UsePlenaryAssetCompositionViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetCompositionSession', 'CanAccessAssetCompositions'): CanAccessAssetCompositionsReply.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionAssets'): Asset.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetCompositionsByAsset'): Composition.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseComparativeAssetCompositionView'): UseComparativeAssetCompositionViewReply.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.AssetCompositionSession', 'UsePlenaryAssetCompositionView'): UsePlenaryAssetCompositionViewReply.FromString,
    }
    cardinalities = {
      'CanAccessAssetCompositions': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionAssets': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByAsset': cardinality.Cardinality.UNARY_STREAM,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeAssetCompositionView': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryAssetCompositionView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetCompositionSession', cardinalities, options=stub_options)


  class BetaAssetCompositionDesignSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanComposeAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def MoveAssetAhead(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def MoveAssetBehind(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def OrderAssets(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveAsset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAssetCompositionDesignSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanComposeAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanComposeAssets.future = None
    def AddAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddAsset.future = None
    def MoveAssetAhead(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    MoveAssetAhead.future = None
    def MoveAssetBehind(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    MoveAssetBehind.future = None
    def OrderAssets(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    OrderAssets.future = None
    def RemoveAsset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveAsset.future = None


  def beta_create_AssetCompositionDesignSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'AddAsset'): AddAssetRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'CanComposeAssets'): CanComposeAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetAhead'): MoveAssetAheadRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetBehind'): MoveAssetBehindRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'OrderAssets'): OrderAssetsRequest.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'RemoveAsset'): RemoveAssetRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'AddAsset'): AddAssetReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'CanComposeAssets'): CanComposeAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetAhead'): MoveAssetAheadReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetBehind'): MoveAssetBehindReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'OrderAssets'): OrderAssetsReply.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'RemoveAsset'): RemoveAssetReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'AddAsset'): face_utilities.unary_unary_inline(servicer.AddAsset),
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'CanComposeAssets'): face_utilities.unary_unary_inline(servicer.CanComposeAssets),
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetAhead'): face_utilities.unary_unary_inline(servicer.MoveAssetAhead),
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetBehind'): face_utilities.unary_unary_inline(servicer.MoveAssetBehind),
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'OrderAssets'): face_utilities.unary_unary_inline(servicer.OrderAssets),
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'RemoveAsset'): face_utilities.unary_unary_inline(servicer.RemoveAsset),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AssetCompositionDesignSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'AddAsset'): AddAssetRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'CanComposeAssets'): CanComposeAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetAhead'): MoveAssetAheadRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetBehind'): MoveAssetBehindRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'OrderAssets'): OrderAssetsRequest.SerializeToString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'RemoveAsset'): RemoveAssetRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'AddAsset'): AddAssetReply.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'CanComposeAssets'): CanComposeAssetsReply.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetAhead'): MoveAssetAheadReply.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'MoveAssetBehind'): MoveAssetBehindReply.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'OrderAssets'): OrderAssetsReply.FromString,
      ('dlkit.proto.repository.AssetCompositionDesignSession', 'RemoveAsset'): RemoveAssetReply.FromString,
    }
    cardinalities = {
      'AddAsset': cardinality.Cardinality.UNARY_UNARY,
      'CanComposeAssets': cardinality.Cardinality.UNARY_UNARY,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'MoveAssetAhead': cardinality.Cardinality.UNARY_UNARY,
      'MoveAssetBehind': cardinality.Cardinality.UNARY_UNARY,
      'OrderAssets': cardinality.Cardinality.UNARY_UNARY,
      'RemoveAsset': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.AssetCompositionDesignSession', cardinalities, options=stub_options)


  class BetaCompositionLookupSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanLookupCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseActiveCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseAnyStatusCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseSequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseUnsequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCompositionLookupSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanLookupCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupCompositions.future = None
    def UseComparativeCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeCompositionView.future = None
    def UsePlenaryCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryCompositionView.future = None
    def UseFederatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedRepositoryView.future = None
    def UseIsolatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedRepositoryView.future = None
    def UseActiveCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseActiveCompositionView.future = None
    def UseAnyStatusCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseAnyStatusCompositionView.future = None
    def UseSequesteredCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseSequesteredCompositionView.future = None
    def UseUnsequesteredCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseUnsequesteredCompositionView.future = None
    def GetComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetComposition.future = None
    def GetCompositionsByIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionsByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionsByParentGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionsByRecordType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionsByProvider(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_CompositionLookupSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.CompositionLookupSession', 'CanLookupCompositions'): CanLookupCompositionsRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetComposition'): GetCompositionRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositions'): GetCompositionsRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByGenusType'): GetCompositionsByGenusTypeRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByIds'): GetCompositionsByIdsRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByParentGenusType'): GetCompositionsByParentGenusTypeRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByProvider'): GetCompositionsByProviderRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByRecordType'): GetCompositionsByRecordTypeRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseActiveCompositionView'): UseActiveCompositionViewRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseAnyStatusCompositionView'): UseAnyStatusCompositionViewRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseComparativeCompositionView'): UseComparativeCompositionViewRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UsePlenaryCompositionView'): UsePlenaryCompositionViewRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewRequest.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.CompositionLookupSession', 'CanLookupCompositions'): CanLookupCompositionsReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetComposition'): GetCompositionReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositions'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByGenusType'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByIds'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByParentGenusType'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByProvider'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByRecordType'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseActiveCompositionView'): UseActiveCompositionViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseAnyStatusCompositionView'): UseAnyStatusCompositionViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseComparativeCompositionView'): UseComparativeCompositionViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UsePlenaryCompositionView'): UsePlenaryCompositionViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.CompositionLookupSession', 'CanLookupCompositions'): face_utilities.unary_unary_inline(servicer.CanLookupCompositions),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetComposition'): face_utilities.unary_unary_inline(servicer.GetComposition),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositions'): face_utilities.unary_stream_inline(servicer.GetCompositions),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByGenusType'): face_utilities.unary_stream_inline(servicer.GetCompositionsByGenusType),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByIds'): face_utilities.unary_stream_inline(servicer.GetCompositionsByIds),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByParentGenusType'): face_utilities.unary_stream_inline(servicer.GetCompositionsByParentGenusType),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByProvider'): face_utilities.unary_stream_inline(servicer.GetCompositionsByProvider),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByRecordType'): face_utilities.unary_stream_inline(servicer.GetCompositionsByRecordType),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.CompositionLookupSession', 'UseActiveCompositionView'): face_utilities.unary_unary_inline(servicer.UseActiveCompositionView),
      ('dlkit.proto.repository.CompositionLookupSession', 'UseAnyStatusCompositionView'): face_utilities.unary_unary_inline(servicer.UseAnyStatusCompositionView),
      ('dlkit.proto.repository.CompositionLookupSession', 'UseComparativeCompositionView'): face_utilities.unary_unary_inline(servicer.UseComparativeCompositionView),
      ('dlkit.proto.repository.CompositionLookupSession', 'UseFederatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseFederatedRepositoryView),
      ('dlkit.proto.repository.CompositionLookupSession', 'UseIsolatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseIsolatedRepositoryView),
      ('dlkit.proto.repository.CompositionLookupSession', 'UsePlenaryCompositionView'): face_utilities.unary_unary_inline(servicer.UsePlenaryCompositionView),
      ('dlkit.proto.repository.CompositionLookupSession', 'UseSequesteredCompositionView'): face_utilities.unary_unary_inline(servicer.UseSequesteredCompositionView),
      ('dlkit.proto.repository.CompositionLookupSession', 'UseUnsequesteredCompositionView'): face_utilities.unary_unary_inline(servicer.UseUnsequesteredCompositionView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CompositionLookupSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.CompositionLookupSession', 'CanLookupCompositions'): CanLookupCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetComposition'): GetCompositionRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositions'): GetCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByGenusType'): GetCompositionsByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByIds'): GetCompositionsByIdsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByParentGenusType'): GetCompositionsByParentGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByProvider'): GetCompositionsByProviderRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByRecordType'): GetCompositionsByRecordTypeRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseActiveCompositionView'): UseActiveCompositionViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseAnyStatusCompositionView'): UseAnyStatusCompositionViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseComparativeCompositionView'): UseComparativeCompositionViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UsePlenaryCompositionView'): UsePlenaryCompositionViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.CompositionLookupSession', 'CanLookupCompositions'): CanLookupCompositionsReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetComposition'): GetCompositionReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositions'): Composition.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByGenusType'): Composition.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByIds'): Composition.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByParentGenusType'): Composition.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByProvider'): Composition.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetCompositionsByRecordType'): Composition.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseActiveCompositionView'): UseActiveCompositionViewReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseAnyStatusCompositionView'): UseAnyStatusCompositionViewReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseComparativeCompositionView'): UseComparativeCompositionViewReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UsePlenaryCompositionView'): UsePlenaryCompositionViewReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewReply.FromString,
      ('dlkit.proto.repository.CompositionLookupSession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewReply.FromString,
    }
    cardinalities = {
      'CanLookupCompositions': cardinality.Cardinality.UNARY_UNARY,
      'GetComposition': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositions': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByIds': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByParentGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByProvider': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByRecordType': cardinality.Cardinality.UNARY_STREAM,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'UseActiveCompositionView': cardinality.Cardinality.UNARY_UNARY,
      'UseAnyStatusCompositionView': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeCompositionView': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryCompositionView': cardinality.Cardinality.UNARY_UNARY,
      'UseSequesteredCompositionView': cardinality.Cardinality.UNARY_UNARY,
      'UseUnsequesteredCompositionView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.CompositionLookupSession', cardinalities, options=stub_options)


  class BetaCompositionQuerySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanSearchCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseFederatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseIsolatedRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseSequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseUnsequesteredCompositionView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCompositionQuerySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanSearchCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanSearchCompositions.future = None
    def UseFederatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseFederatedRepositoryView.future = None
    def UseIsolatedRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseIsolatedRepositoryView.future = None
    def UseSequesteredCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseSequesteredCompositionView.future = None
    def UseUnsequesteredCompositionView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseUnsequesteredCompositionView.future = None
    def GetCompositionQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCompositionQuery.future = None
    def GetCompositionsByQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_CompositionQuerySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.CompositionQuerySession', 'CanSearchCompositions'): CanSearchCompositionsRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionQuery'): GetCompositionQueryRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionsByQuery'): GetCompositionsByQueryRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewRequest.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.CompositionQuerySession', 'CanSearchCompositions'): CanSearchCompositionsReply.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionQuery'): GetCompositionQueryReply.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionsByQuery'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.CompositionQuerySession', 'CanSearchCompositions'): face_utilities.unary_unary_inline(servicer.CanSearchCompositions),
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionQuery'): face_utilities.unary_unary_inline(servicer.GetCompositionQuery),
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionsByQuery'): face_utilities.unary_stream_inline(servicer.GetCompositionsByQuery),
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.CompositionQuerySession', 'UseFederatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseFederatedRepositoryView),
      ('dlkit.proto.repository.CompositionQuerySession', 'UseIsolatedRepositoryView'): face_utilities.unary_unary_inline(servicer.UseIsolatedRepositoryView),
      ('dlkit.proto.repository.CompositionQuerySession', 'UseSequesteredCompositionView'): face_utilities.unary_unary_inline(servicer.UseSequesteredCompositionView),
      ('dlkit.proto.repository.CompositionQuerySession', 'UseUnsequesteredCompositionView'): face_utilities.unary_unary_inline(servicer.UseUnsequesteredCompositionView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CompositionQuerySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.CompositionQuerySession', 'CanSearchCompositions'): CanSearchCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionQuery'): GetCompositionQueryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionsByQuery'): GetCompositionsByQueryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.CompositionQuerySession', 'CanSearchCompositions'): CanSearchCompositionsReply.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionQuery'): GetCompositionQueryReply.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetCompositionsByQuery'): Composition.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseFederatedRepositoryView'): UseFederatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseIsolatedRepositoryView'): UseIsolatedRepositoryViewReply.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseSequesteredCompositionView'): UseSequesteredCompositionViewReply.FromString,
      ('dlkit.proto.repository.CompositionQuerySession', 'UseUnsequesteredCompositionView'): UseUnsequesteredCompositionViewReply.FromString,
    }
    cardinalities = {
      'CanSearchCompositions': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionQuery': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionsByQuery': cardinality.Cardinality.UNARY_STREAM,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'UseFederatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UseIsolatedRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UseSequesteredCompositionView': cardinality.Cardinality.UNARY_UNARY,
      'UseUnsequesteredCompositionView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.CompositionQuerySession', cardinalities, options=stub_options)


  class BetaCompositionSearchSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetCompositionSearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionSearchOrder(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsBySearch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionQueryFromInspector(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCompositionSearchSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetCompositionSearch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCompositionSearch.future = None
    def GetCompositionSearchOrder(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCompositionSearchOrder.future = None
    def GetCompositionsBySearch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCompositionsBySearch.future = None
    def GetCompositionQueryFromInspector(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCompositionQueryFromInspector.future = None


  def beta_create_CompositionSearchSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionQueryFromInspector'): GetCompositionQueryFromInspectorRequest.FromString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearch'): GetCompositionSearchRequest.FromString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearchOrder'): GetCompositionSearchOrderRequest.FromString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionsBySearch'): GetCompositionsBySearchRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionQueryFromInspector'): GetCompositionQueryFromInspectorReply.SerializeToString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearch'): GetCompositionSearchReply.SerializeToString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearchOrder'): GetCompositionSearchOrderReply.SerializeToString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionsBySearch'): GetCompositionsBySearchReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionQueryFromInspector'): face_utilities.unary_unary_inline(servicer.GetCompositionQueryFromInspector),
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearch'): face_utilities.unary_unary_inline(servicer.GetCompositionSearch),
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearchOrder'): face_utilities.unary_unary_inline(servicer.GetCompositionSearchOrder),
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionsBySearch'): face_utilities.unary_unary_inline(servicer.GetCompositionsBySearch),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CompositionSearchSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionQueryFromInspector'): GetCompositionQueryFromInspectorRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearch'): GetCompositionSearchRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearchOrder'): GetCompositionSearchOrderRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionsBySearch'): GetCompositionsBySearchRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionQueryFromInspector'): GetCompositionQueryFromInspectorReply.FromString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearch'): GetCompositionSearchReply.FromString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionSearchOrder'): GetCompositionSearchOrderReply.FromString,
      ('dlkit.proto.repository.CompositionSearchSession', 'GetCompositionsBySearch'): GetCompositionsBySearchReply.FromString,
    }
    cardinalities = {
      'GetCompositionQueryFromInspector': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionSearch': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionSearchOrder': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionsBySearch': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.CompositionSearchSession', cardinalities, options=stub_options)


  class BetaCompositionAdminSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateCompositionWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanUpdateCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanDeleteCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteCompositionNode(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddCompositionChild(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveCompositionChild(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanManageCompositionAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AliasComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCompositionAdminSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryId.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def CanCreateCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateCompositions.future = None
    def CanCreateCompositionWithRecordTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateCompositionWithRecordTypes.future = None
    def GetCompositionFormForCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCompositionFormForCreate.future = None
    def CreateComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateComposition.future = None
    def CanUpdateCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanUpdateCompositions.future = None
    def GetCompositionFormForUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetCompositionFormForUpdate.future = None
    def UpdateComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpdateComposition.future = None
    def CanDeleteCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanDeleteCompositions.future = None
    def DeleteComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteComposition.future = None
    def DeleteCompositionNode(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteCompositionNode.future = None
    def AddCompositionChild(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddCompositionChild.future = None
    def RemoveCompositionChild(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveCompositionChild.future = None
    def CanManageCompositionAliases(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanManageCompositionAliases.future = None
    def AliasComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AliasComposition.future = None


  def beta_create_CompositionAdminSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.CompositionAdminSession', 'AddCompositionChild'): AddCompositionChildRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'AliasComposition'): AliasCompositionRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositionWithRecordTypes'): CanCreateCompositionWithRecordTypesRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositions'): CanCreateCompositionsRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanDeleteCompositions'): CanDeleteCompositionsRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanManageCompositionAliases'): CanManageCompositionAliasesRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanUpdateCompositions'): CanUpdateCompositionsRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CreateComposition'): CreateCompositionRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteComposition'): DeleteCompositionRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteCompositionNode'): DeleteCompositionNodeRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForCreate'): GetCompositionFormForCreateRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForUpdate'): GetCompositionFormForUpdateRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepositoryId'): GetRepositoryIdRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'RemoveCompositionChild'): RemoveCompositionChildRequest.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'UpdateComposition'): UpdateCompositionRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.CompositionAdminSession', 'AddCompositionChild'): AddCompositionChildReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'AliasComposition'): AliasCompositionReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositionWithRecordTypes'): CanCreateCompositionWithRecordTypesReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositions'): CanCreateCompositionsReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanDeleteCompositions'): CanDeleteCompositionsReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanManageCompositionAliases'): CanManageCompositionAliasesReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanUpdateCompositions'): CanUpdateCompositionsReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CreateComposition'): CreateCompositionReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteComposition'): DeleteCompositionReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteCompositionNode'): DeleteCompositionNodeReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForCreate'): GetCompositionFormForCreateReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForUpdate'): GetCompositionFormForUpdateReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepositoryId'): GetRepositoryIdReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'RemoveCompositionChild'): RemoveCompositionChildReply.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'UpdateComposition'): UpdateCompositionReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.CompositionAdminSession', 'AddCompositionChild'): face_utilities.unary_unary_inline(servicer.AddCompositionChild),
      ('dlkit.proto.repository.CompositionAdminSession', 'AliasComposition'): face_utilities.unary_unary_inline(servicer.AliasComposition),
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositionWithRecordTypes'): face_utilities.unary_unary_inline(servicer.CanCreateCompositionWithRecordTypes),
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositions'): face_utilities.unary_unary_inline(servicer.CanCreateCompositions),
      ('dlkit.proto.repository.CompositionAdminSession', 'CanDeleteCompositions'): face_utilities.unary_unary_inline(servicer.CanDeleteCompositions),
      ('dlkit.proto.repository.CompositionAdminSession', 'CanManageCompositionAliases'): face_utilities.unary_unary_inline(servicer.CanManageCompositionAliases),
      ('dlkit.proto.repository.CompositionAdminSession', 'CanUpdateCompositions'): face_utilities.unary_unary_inline(servicer.CanUpdateCompositions),
      ('dlkit.proto.repository.CompositionAdminSession', 'CreateComposition'): face_utilities.unary_unary_inline(servicer.CreateComposition),
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteComposition'): face_utilities.unary_unary_inline(servicer.DeleteComposition),
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteCompositionNode'): face_utilities.unary_unary_inline(servicer.DeleteCompositionNode),
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForCreate'): face_utilities.unary_unary_inline(servicer.GetCompositionFormForCreate),
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForUpdate'): face_utilities.unary_unary_inline(servicer.GetCompositionFormForUpdate),
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepositoryId'): face_utilities.unary_unary_inline(servicer.GetRepositoryId),
      ('dlkit.proto.repository.CompositionAdminSession', 'RemoveCompositionChild'): face_utilities.unary_unary_inline(servicer.RemoveCompositionChild),
      ('dlkit.proto.repository.CompositionAdminSession', 'UpdateComposition'): face_utilities.unary_unary_inline(servicer.UpdateComposition),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CompositionAdminSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.CompositionAdminSession', 'AddCompositionChild'): AddCompositionChildRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'AliasComposition'): AliasCompositionRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositionWithRecordTypes'): CanCreateCompositionWithRecordTypesRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositions'): CanCreateCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanDeleteCompositions'): CanDeleteCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanManageCompositionAliases'): CanManageCompositionAliasesRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanUpdateCompositions'): CanUpdateCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CreateComposition'): CreateCompositionRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteComposition'): DeleteCompositionRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteCompositionNode'): DeleteCompositionNodeRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForCreate'): GetCompositionFormForCreateRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForUpdate'): GetCompositionFormForUpdateRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepositoryId'): GetRepositoryIdRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'RemoveCompositionChild'): RemoveCompositionChildRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionAdminSession', 'UpdateComposition'): UpdateCompositionRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.CompositionAdminSession', 'AddCompositionChild'): AddCompositionChildReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'AliasComposition'): AliasCompositionReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositionWithRecordTypes'): CanCreateCompositionWithRecordTypesReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanCreateCompositions'): CanCreateCompositionsReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanDeleteCompositions'): CanDeleteCompositionsReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanManageCompositionAliases'): CanManageCompositionAliasesReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CanUpdateCompositions'): CanUpdateCompositionsReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'CreateComposition'): CreateCompositionReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteComposition'): DeleteCompositionReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'DeleteCompositionNode'): DeleteCompositionNodeReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForCreate'): GetCompositionFormForCreateReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetCompositionFormForUpdate'): GetCompositionFormForUpdateReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'GetRepositoryId'): GetRepositoryIdReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'RemoveCompositionChild'): RemoveCompositionChildReply.FromString,
      ('dlkit.proto.repository.CompositionAdminSession', 'UpdateComposition'): UpdateCompositionReply.FromString,
    }
    cardinalities = {
      'AddCompositionChild': cardinality.Cardinality.UNARY_UNARY,
      'AliasComposition': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateCompositionWithRecordTypes': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateCompositions': cardinality.Cardinality.UNARY_UNARY,
      'CanDeleteCompositions': cardinality.Cardinality.UNARY_UNARY,
      'CanManageCompositionAliases': cardinality.Cardinality.UNARY_UNARY,
      'CanUpdateCompositions': cardinality.Cardinality.UNARY_UNARY,
      'CreateComposition': cardinality.Cardinality.UNARY_UNARY,
      'DeleteComposition': cardinality.Cardinality.UNARY_UNARY,
      'DeleteCompositionNode': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionFormForCreate': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionFormForUpdate': cardinality.Cardinality.UNARY_UNARY,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryId': cardinality.Cardinality.UNARY_UNARY,
      'RemoveCompositionChild': cardinality.Cardinality.UNARY_UNARY,
      'UpdateComposition': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.CompositionAdminSession', cardinalities, options=stub_options)


  class BetaCompositionRepositorySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def UseComparativeCompositionRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryCompositionRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanLookupCompositionRepositoryMappings(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionIdsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionIdsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCompositionsByRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryIdsByComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCompositionRepositorySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def UseComparativeCompositionRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeCompositionRepositoryView.future = None
    def UsePlenaryCompositionRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryCompositionRepositoryView.future = None
    def CanLookupCompositionRepositoryMappings(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupCompositionRepositoryMappings.future = None
    def GetCompositionIdsByRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionsByRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionIdsByRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetCompositionsByRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoryIdsByComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoriesByComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_CompositionRepositorySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.CompositionRepositorySession', 'CanLookupCompositionRepositoryMappings'): CanLookupCompositionRepositoryMappingsRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepositories'): GetCompositionIdsByRepositoriesRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepository'): GetCompositionIdsByRepositoryRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepositories'): GetCompositionsByRepositoriesRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepository'): GetCompositionsByRepositoryRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoriesByComposition'): GetRepositoriesByCompositionRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoryIdsByComposition'): GetRepositoryIdsByCompositionRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UseComparativeCompositionRepositoryView'): UseComparativeCompositionRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UsePlenaryCompositionRepositoryView'): UsePlenaryCompositionRepositoryViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.CompositionRepositorySession', 'CanLookupCompositionRepositoryMappings'): CanLookupCompositionRepositoryMappingsReply.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepositories'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepository'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepositories'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepository'): Composition.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoriesByComposition'): Repository.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoryIdsByComposition'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UseComparativeCompositionRepositoryView'): UseComparativeCompositionRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UsePlenaryCompositionRepositoryView'): UsePlenaryCompositionRepositoryViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.CompositionRepositorySession', 'CanLookupCompositionRepositoryMappings'): face_utilities.unary_unary_inline(servicer.CanLookupCompositionRepositoryMappings),
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepositories'): face_utilities.unary_stream_inline(servicer.GetCompositionIdsByRepositories),
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepository'): face_utilities.unary_stream_inline(servicer.GetCompositionIdsByRepository),
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepositories'): face_utilities.unary_stream_inline(servicer.GetCompositionsByRepositories),
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepository'): face_utilities.unary_stream_inline(servicer.GetCompositionsByRepository),
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoriesByComposition'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByComposition),
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoryIdsByComposition'): face_utilities.unary_stream_inline(servicer.GetRepositoryIdsByComposition),
      ('dlkit.proto.repository.CompositionRepositorySession', 'UseComparativeCompositionRepositoryView'): face_utilities.unary_unary_inline(servicer.UseComparativeCompositionRepositoryView),
      ('dlkit.proto.repository.CompositionRepositorySession', 'UsePlenaryCompositionRepositoryView'): face_utilities.unary_unary_inline(servicer.UsePlenaryCompositionRepositoryView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CompositionRepositorySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.CompositionRepositorySession', 'CanLookupCompositionRepositoryMappings'): CanLookupCompositionRepositoryMappingsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepositories'): GetCompositionIdsByRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepository'): GetCompositionIdsByRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepositories'): GetCompositionsByRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepository'): GetCompositionsByRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoriesByComposition'): GetRepositoriesByCompositionRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoryIdsByComposition'): GetRepositoryIdsByCompositionRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UseComparativeCompositionRepositoryView'): UseComparativeCompositionRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UsePlenaryCompositionRepositoryView'): UsePlenaryCompositionRepositoryViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.CompositionRepositorySession', 'CanLookupCompositionRepositoryMappings'): CanLookupCompositionRepositoryMappingsReply.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepositories'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionIdsByRepository'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepositories'): Composition.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetCompositionsByRepository'): Composition.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoriesByComposition'): Repository.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'GetRepositoryIdsByComposition'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UseComparativeCompositionRepositoryView'): UseComparativeCompositionRepositoryViewReply.FromString,
      ('dlkit.proto.repository.CompositionRepositorySession', 'UsePlenaryCompositionRepositoryView'): UsePlenaryCompositionRepositoryViewReply.FromString,
    }
    cardinalities = {
      'CanLookupCompositionRepositoryMappings': cardinality.Cardinality.UNARY_UNARY,
      'GetCompositionIdsByRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionIdsByRepository': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetCompositionsByRepository': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoriesByComposition': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoryIdsByComposition': cardinality.Cardinality.UNARY_STREAM,
      'UseComparativeCompositionRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryCompositionRepositoryView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.CompositionRepositorySession', cardinalities, options=stub_options)


  class BetaCompositionRepositoryAssignmentSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanAssignCompositions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanAssignCompositionsToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssignableRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetAssignableRepositoryIdsForComposition(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AssignCompositionToRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnassignCompositionFromRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaCompositionRepositoryAssignmentSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanAssignCompositions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAssignCompositions.future = None
    def CanAssignCompositionsToRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAssignCompositionsToRepository.future = None
    def GetAssignableRepositoryIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetAssignableRepositoryIdsForComposition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def AssignCompositionToRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AssignCompositionToRepository.future = None
    def UnassignCompositionFromRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UnassignCompositionFromRepository.future = None


  def beta_create_CompositionRepositoryAssignmentSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'AssignCompositionToRepository'): AssignCompositionToRepositoryRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositions'): CanAssignCompositionsRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositionsToRepository'): CanAssignCompositionsToRepositoryRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): GetAssignableRepositoryIdsRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForComposition'): GetAssignableRepositoryIdsForCompositionRequest.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'UnassignCompositionFromRepository'): UnassignCompositionFromRepositoryRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'AssignCompositionToRepository'): AssignCompositionToRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositions'): CanAssignCompositionsReply.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositionsToRepository'): CanAssignCompositionsToRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForComposition'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'UnassignCompositionFromRepository'): UnassignCompositionFromRepositoryReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'AssignCompositionToRepository'): face_utilities.unary_unary_inline(servicer.AssignCompositionToRepository),
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositions'): face_utilities.unary_unary_inline(servicer.CanAssignCompositions),
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositionsToRepository'): face_utilities.unary_unary_inline(servicer.CanAssignCompositionsToRepository),
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): face_utilities.unary_stream_inline(servicer.GetAssignableRepositoryIds),
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForComposition'): face_utilities.unary_stream_inline(servicer.GetAssignableRepositoryIdsForComposition),
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'UnassignCompositionFromRepository'): face_utilities.unary_unary_inline(servicer.UnassignCompositionFromRepository),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_CompositionRepositoryAssignmentSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'AssignCompositionToRepository'): AssignCompositionToRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositions'): CanAssignCompositionsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositionsToRepository'): CanAssignCompositionsToRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): GetAssignableRepositoryIdsRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForComposition'): GetAssignableRepositoryIdsForCompositionRequest.SerializeToString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'UnassignCompositionFromRepository'): UnassignCompositionFromRepositoryRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'AssignCompositionToRepository'): AssignCompositionToRepositoryReply.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositions'): CanAssignCompositionsReply.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'CanAssignCompositionsToRepository'): CanAssignCompositionsToRepositoryReply.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'GetAssignableRepositoryIdsForComposition'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.CompositionRepositoryAssignmentSession', 'UnassignCompositionFromRepository'): UnassignCompositionFromRepositoryReply.FromString,
    }
    cardinalities = {
      'AssignCompositionToRepository': cardinality.Cardinality.UNARY_UNARY,
      'CanAssignCompositions': cardinality.Cardinality.UNARY_UNARY,
      'CanAssignCompositionsToRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetAssignableRepositoryIds': cardinality.Cardinality.UNARY_STREAM,
      'GetAssignableRepositoryIdsForComposition': cardinality.Cardinality.UNARY_STREAM,
      'UnassignCompositionFromRepository': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.CompositionRepositoryAssignmentSession', cardinalities, options=stub_options)


  class BetaRepositoryLookupSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByParentGenusType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByRecordType(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByProvider(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRepositoryLookupSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanLookupRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanLookupRepositories.future = None
    def UseComparativeRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeRepositoryView.future = None
    def UsePlenaryRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryRepositoryView.future = None
    def GetRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepository.future = None
    def GetRepositoriesByIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoriesByGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoriesByParentGenusType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoriesByRecordType(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositoriesByProvider(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_RepositoryLookupSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.RepositoryLookupSession', 'CanLookupRepositories'): CanLookupRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositories'): GetRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByGenusType'): GetRepositoriesByGenusTypeRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByIds'): GetRepositoriesByIdsRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByParentGenusType'): GetRepositoriesByParentGenusTypeRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByProvider'): GetRepositoriesByProviderRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByRecordType'): GetRepositoriesByRecordTypeRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepository'): GetRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.RepositoryLookupSession', 'CanLookupRepositories'): CanLookupRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositories'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByGenusType'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByIds'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByParentGenusType'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByProvider'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByRecordType'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepository'): GetRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.RepositoryLookupSession', 'CanLookupRepositories'): face_utilities.unary_unary_inline(servicer.CanLookupRepositories),
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositories'): face_utilities.unary_stream_inline(servicer.GetRepositories),
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByGenusType'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByGenusType),
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByIds'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByIds),
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByParentGenusType'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByParentGenusType),
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByProvider'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByProvider),
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByRecordType'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByRecordType),
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepository'): face_utilities.unary_unary_inline(servicer.GetRepository),
      ('dlkit.proto.repository.RepositoryLookupSession', 'UseComparativeRepositoryView'): face_utilities.unary_unary_inline(servicer.UseComparativeRepositoryView),
      ('dlkit.proto.repository.RepositoryLookupSession', 'UsePlenaryRepositoryView'): face_utilities.unary_unary_inline(servicer.UsePlenaryRepositoryView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RepositoryLookupSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.RepositoryLookupSession', 'CanLookupRepositories'): CanLookupRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositories'): GetRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByGenusType'): GetRepositoriesByGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByIds'): GetRepositoriesByIdsRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByParentGenusType'): GetRepositoriesByParentGenusTypeRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByProvider'): GetRepositoriesByProviderRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByRecordType'): GetRepositoriesByRecordTypeRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepository'): GetRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.RepositoryLookupSession', 'CanLookupRepositories'): CanLookupRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositories'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByGenusType'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByIds'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByParentGenusType'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByProvider'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepositoriesByRecordType'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'GetRepository'): GetRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewReply.FromString,
      ('dlkit.proto.repository.RepositoryLookupSession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewReply.FromString,
    }
    cardinalities = {
      'CanLookupRepositories': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoriesByGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoriesByIds': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoriesByParentGenusType': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoriesByProvider': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoriesByRecordType': cardinality.Cardinality.UNARY_STREAM,
      'GetRepository': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryRepositoryView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.RepositoryLookupSession', cardinalities, options=stub_options)


  class BetaRepositoryQuerySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanSearchRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoriesByQuery(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRepositoryQuerySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanSearchRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanSearchRepositories.future = None
    def GetRepositoryQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryQuery.future = None
    def GetRepositoriesByQuery(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()


  def beta_create_RepositoryQuerySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.RepositoryQuerySession', 'CanSearchRepositories'): CanSearchRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoriesByQuery'): GetRepositoriesByQueryRequest.FromString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoryQuery'): GetRepositoryQueryRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.RepositoryQuerySession', 'CanSearchRepositories'): CanSearchRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoriesByQuery'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoryQuery'): GetRepositoryQueryReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.RepositoryQuerySession', 'CanSearchRepositories'): face_utilities.unary_unary_inline(servicer.CanSearchRepositories),
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoriesByQuery'): face_utilities.unary_stream_inline(servicer.GetRepositoriesByQuery),
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoryQuery'): face_utilities.unary_unary_inline(servicer.GetRepositoryQuery),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RepositoryQuerySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.RepositoryQuerySession', 'CanSearchRepositories'): CanSearchRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoriesByQuery'): GetRepositoriesByQueryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoryQuery'): GetRepositoryQueryRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.RepositoryQuerySession', 'CanSearchRepositories'): CanSearchRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoriesByQuery'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryQuerySession', 'GetRepositoryQuery'): GetRepositoryQueryReply.FromString,
    }
    cardinalities = {
      'CanSearchRepositories': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoriesByQuery': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoryQuery': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.RepositoryQuerySession', cardinalities, options=stub_options)


  class BetaRepositoryAdminSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanCreateRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanCreateRepositoryWithRecordTypes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryFormForCreate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanUpdateRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryFormForUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanDeleteRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanManageRepositoryAliases(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AliasRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRepositoryAdminSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CanCreateRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateRepositories.future = None
    def CanCreateRepositoryWithRecordTypes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanCreateRepositoryWithRecordTypes.future = None
    def GetRepositoryFormForCreate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryFormForCreate.future = None
    def CreateRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateRepository.future = None
    def CanUpdateRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanUpdateRepositories.future = None
    def GetRepositoryFormForUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryFormForUpdate.future = None
    def UpdateRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpdateRepository.future = None
    def CanDeleteRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanDeleteRepositories.future = None
    def DeleteRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteRepository.future = None
    def CanManageRepositoryAliases(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanManageRepositoryAliases.future = None
    def AliasRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AliasRepository.future = None


  def beta_create_RepositoryAdminSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.RepositoryAdminSession', 'AliasRepository'): AliasRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositories'): CanCreateRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositoryWithRecordTypes'): CanCreateRepositoryWithRecordTypesRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanDeleteRepositories'): CanDeleteRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanManageRepositoryAliases'): CanManageRepositoryAliasesRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanUpdateRepositories'): CanUpdateRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CreateRepository'): CreateRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'DeleteRepository'): DeleteRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForCreate'): GetRepositoryFormForCreateRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForUpdate'): GetRepositoryFormForUpdateRequest.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'UpdateRepository'): UpdateRepositoryRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.RepositoryAdminSession', 'AliasRepository'): AliasRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositories'): CanCreateRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositoryWithRecordTypes'): CanCreateRepositoryWithRecordTypesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanDeleteRepositories'): CanDeleteRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanManageRepositoryAliases'): CanManageRepositoryAliasesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanUpdateRepositories'): CanUpdateRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CreateRepository'): CreateRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'DeleteRepository'): DeleteRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForCreate'): GetRepositoryFormForCreateReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForUpdate'): GetRepositoryFormForUpdateReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'UpdateRepository'): UpdateRepositoryReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.RepositoryAdminSession', 'AliasRepository'): face_utilities.unary_unary_inline(servicer.AliasRepository),
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositories'): face_utilities.unary_unary_inline(servicer.CanCreateRepositories),
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositoryWithRecordTypes'): face_utilities.unary_unary_inline(servicer.CanCreateRepositoryWithRecordTypes),
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanDeleteRepositories'): face_utilities.unary_unary_inline(servicer.CanDeleteRepositories),
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanManageRepositoryAliases'): face_utilities.unary_unary_inline(servicer.CanManageRepositoryAliases),
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanUpdateRepositories'): face_utilities.unary_unary_inline(servicer.CanUpdateRepositories),
      ('dlkit.proto.repository.RepositoryAdminSession', 'CreateRepository'): face_utilities.unary_unary_inline(servicer.CreateRepository),
      ('dlkit.proto.repository.RepositoryAdminSession', 'DeleteRepository'): face_utilities.unary_unary_inline(servicer.DeleteRepository),
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForCreate'): face_utilities.unary_unary_inline(servicer.GetRepositoryFormForCreate),
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForUpdate'): face_utilities.unary_unary_inline(servicer.GetRepositoryFormForUpdate),
      ('dlkit.proto.repository.RepositoryAdminSession', 'UpdateRepository'): face_utilities.unary_unary_inline(servicer.UpdateRepository),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RepositoryAdminSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.RepositoryAdminSession', 'AliasRepository'): AliasRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositories'): CanCreateRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositoryWithRecordTypes'): CanCreateRepositoryWithRecordTypesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanDeleteRepositories'): CanDeleteRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanManageRepositoryAliases'): CanManageRepositoryAliasesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanUpdateRepositories'): CanUpdateRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CreateRepository'): CreateRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'DeleteRepository'): DeleteRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForCreate'): GetRepositoryFormForCreateRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForUpdate'): GetRepositoryFormForUpdateRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'UpdateRepository'): UpdateRepositoryRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.RepositoryAdminSession', 'AliasRepository'): AliasRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositories'): CanCreateRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanCreateRepositoryWithRecordTypes'): CanCreateRepositoryWithRecordTypesReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanDeleteRepositories'): CanDeleteRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanManageRepositoryAliases'): CanManageRepositoryAliasesReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CanUpdateRepositories'): CanUpdateRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'CreateRepository'): CreateRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'DeleteRepository'): DeleteRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForCreate'): GetRepositoryFormForCreateReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'GetRepositoryFormForUpdate'): GetRepositoryFormForUpdateReply.FromString,
      ('dlkit.proto.repository.RepositoryAdminSession', 'UpdateRepository'): UpdateRepositoryReply.FromString,
    }
    cardinalities = {
      'AliasRepository': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateRepositories': cardinality.Cardinality.UNARY_UNARY,
      'CanCreateRepositoryWithRecordTypes': cardinality.Cardinality.UNARY_UNARY,
      'CanDeleteRepositories': cardinality.Cardinality.UNARY_UNARY,
      'CanManageRepositoryAliases': cardinality.Cardinality.UNARY_UNARY,
      'CanUpdateRepositories': cardinality.Cardinality.UNARY_UNARY,
      'CreateRepository': cardinality.Cardinality.UNARY_UNARY,
      'DeleteRepository': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryFormForCreate': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryFormForUpdate': cardinality.Cardinality.UNARY_UNARY,
      'UpdateRepository': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.RepositoryAdminSession', cardinalities, options=stub_options)


  class BetaRepositoryHierarchySessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanAccessRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UseComparativeRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UsePlenaryRepositoryView(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRootRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRootRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HasParentRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsParentOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParentRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetParentRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsAncestorOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HasChildRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsChildOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetChildRepositoryIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetChildRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IsDescendantOfRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryNodeIds(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryNodes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRepositoryHierarchySessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryHierarchyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryHierarchyId.future = None
    def GetRepositoryHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryHierarchy.future = None
    def CanAccessRepositoryHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanAccessRepositoryHierarchy.future = None
    def UseComparativeRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UseComparativeRepositoryView.future = None
    def UsePlenaryRepositoryView(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UsePlenaryRepositoryView.future = None
    def GetRootRepositoryIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetRootRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def HasParentRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HasParentRepositories.future = None
    def IsParentOfRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsParentOfRepository.future = None
    def GetParentRepositoryIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetParentRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def IsAncestorOfRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsAncestorOfRepository.future = None
    def HasChildRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HasChildRepositories.future = None
    def IsChildOfRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsChildOfRepository.future = None
    def GetChildRepositoryIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def GetChildRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def IsDescendantOfRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    IsDescendantOfRepository.future = None
    def GetRepositoryNodeIds(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryNodeIds.future = None
    def GetRepositoryNodes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryNodes.future = None


  def beta_create_RepositoryHierarchySession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.RepositoryHierarchySession', 'CanAccessRepositoryHierarchy'): CanAccessRepositoryHierarchyRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositories'): GetChildRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositoryIds'): GetChildRepositoryIdsRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositories'): GetParentRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositoryIds'): GetParentRepositoryIdsRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodeIds'): GetRepositoryNodeIdsRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodes'): GetRepositoryNodesRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositories'): GetRootRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositoryIds'): GetRootRepositoryIdsRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasChildRepositories'): HasChildRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasParentRepositories'): HasParentRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsAncestorOfRepository'): IsAncestorOfRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsChildOfRepository'): IsChildOfRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsDescendantOfRepository'): IsDescendantOfRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsParentOfRepository'): IsParentOfRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.RepositoryHierarchySession', 'CanAccessRepositoryHierarchy'): CanAccessRepositoryHierarchyReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositories'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositories'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodeIds'): GetRepositoryNodeIdsReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodes'): GetRepositoryNodesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositories'): Repository.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasChildRepositories'): HasChildRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasParentRepositories'): HasParentRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsAncestorOfRepository'): IsAncestorOfRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsChildOfRepository'): IsChildOfRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsDescendantOfRepository'): IsDescendantOfRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsParentOfRepository'): IsParentOfRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.RepositoryHierarchySession', 'CanAccessRepositoryHierarchy'): face_utilities.unary_unary_inline(servicer.CanAccessRepositoryHierarchy),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositories'): face_utilities.unary_stream_inline(servicer.GetChildRepositories),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositoryIds'): face_utilities.unary_stream_inline(servicer.GetChildRepositoryIds),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositories'): face_utilities.unary_stream_inline(servicer.GetParentRepositories),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositoryIds'): face_utilities.unary_stream_inline(servicer.GetParentRepositoryIds),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchy'): face_utilities.unary_unary_inline(servicer.GetRepositoryHierarchy),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchyId'): face_utilities.unary_unary_inline(servicer.GetRepositoryHierarchyId),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodeIds'): face_utilities.unary_unary_inline(servicer.GetRepositoryNodeIds),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodes'): face_utilities.unary_unary_inline(servicer.GetRepositoryNodes),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositories'): face_utilities.unary_stream_inline(servicer.GetRootRepositories),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositoryIds'): face_utilities.unary_stream_inline(servicer.GetRootRepositoryIds),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasChildRepositories'): face_utilities.unary_unary_inline(servicer.HasChildRepositories),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasParentRepositories'): face_utilities.unary_unary_inline(servicer.HasParentRepositories),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsAncestorOfRepository'): face_utilities.unary_unary_inline(servicer.IsAncestorOfRepository),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsChildOfRepository'): face_utilities.unary_unary_inline(servicer.IsChildOfRepository),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsDescendantOfRepository'): face_utilities.unary_unary_inline(servicer.IsDescendantOfRepository),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsParentOfRepository'): face_utilities.unary_unary_inline(servicer.IsParentOfRepository),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UseComparativeRepositoryView'): face_utilities.unary_unary_inline(servicer.UseComparativeRepositoryView),
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UsePlenaryRepositoryView'): face_utilities.unary_unary_inline(servicer.UsePlenaryRepositoryView),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RepositoryHierarchySession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.RepositoryHierarchySession', 'CanAccessRepositoryHierarchy'): CanAccessRepositoryHierarchyRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositories'): GetChildRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositoryIds'): GetChildRepositoryIdsRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositories'): GetParentRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositoryIds'): GetParentRepositoryIdsRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodeIds'): GetRepositoryNodeIdsRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodes'): GetRepositoryNodesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositories'): GetRootRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositoryIds'): GetRootRepositoryIdsRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasChildRepositories'): HasChildRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasParentRepositories'): HasParentRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsAncestorOfRepository'): IsAncestorOfRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsChildOfRepository'): IsChildOfRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsDescendantOfRepository'): IsDescendantOfRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsParentOfRepository'): IsParentOfRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.RepositoryHierarchySession', 'CanAccessRepositoryHierarchy'): CanAccessRepositoryHierarchyReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositories'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetChildRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositories'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetParentRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodeIds'): GetRepositoryNodeIdsReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRepositoryNodes'): GetRepositoryNodesReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositories'): Repository.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'GetRootRepositoryIds'): dlkit_dot_primordium_dot_id_dot_primitives__pb2.Id.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasChildRepositories'): HasChildRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'HasParentRepositories'): HasParentRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsAncestorOfRepository'): IsAncestorOfRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsChildOfRepository'): IsChildOfRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsDescendantOfRepository'): IsDescendantOfRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'IsParentOfRepository'): IsParentOfRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UseComparativeRepositoryView'): UseComparativeRepositoryViewReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchySession', 'UsePlenaryRepositoryView'): UsePlenaryRepositoryViewReply.FromString,
    }
    cardinalities = {
      'CanAccessRepositoryHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetChildRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetChildRepositoryIds': cardinality.Cardinality.UNARY_STREAM,
      'GetParentRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetParentRepositoryIds': cardinality.Cardinality.UNARY_STREAM,
      'GetRepositoryHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryHierarchyId': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryNodeIds': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryNodes': cardinality.Cardinality.UNARY_UNARY,
      'GetRootRepositories': cardinality.Cardinality.UNARY_STREAM,
      'GetRootRepositoryIds': cardinality.Cardinality.UNARY_STREAM,
      'HasChildRepositories': cardinality.Cardinality.UNARY_UNARY,
      'HasParentRepositories': cardinality.Cardinality.UNARY_UNARY,
      'IsAncestorOfRepository': cardinality.Cardinality.UNARY_UNARY,
      'IsChildOfRepository': cardinality.Cardinality.UNARY_UNARY,
      'IsDescendantOfRepository': cardinality.Cardinality.UNARY_UNARY,
      'IsParentOfRepository': cardinality.Cardinality.UNARY_UNARY,
      'UseComparativeRepositoryView': cardinality.Cardinality.UNARY_UNARY,
      'UsePlenaryRepositoryView': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.RepositoryHierarchySession', cardinalities, options=stub_options)


  class BetaRepositoryHierarchyDesignSessionServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryHierarchyId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CanModifyRepositoryHierarchy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddRootRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveRootRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddChildRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveChildRepository(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveChildRepositories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaRepositoryHierarchyDesignSessionStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetRepositoryHierarchyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryHierarchyId.future = None
    def GetRepositoryHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetRepositoryHierarchy.future = None
    def CanModifyRepositoryHierarchy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CanModifyRepositoryHierarchy.future = None
    def AddRootRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddRootRepository.future = None
    def RemoveRootRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveRootRepository.future = None
    def AddChildRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddChildRepository.future = None
    def RemoveChildRepository(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveChildRepository.future = None
    def RemoveChildRepositories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveChildRepositories.future = None


  def beta_create_RepositoryHierarchyDesignSession_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddChildRepository'): AddChildRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddRootRepository'): AddRootRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'CanModifyRepositoryHierarchy'): CanModifyRepositoryHierarchyRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepositories'): RemoveChildRepositoriesRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepository'): RemoveChildRepositoryRequest.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveRootRepository'): RemoveRootRepositoryRequest.FromString,
    }
    response_serializers = {
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddChildRepository'): AddChildRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddRootRepository'): AddRootRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'CanModifyRepositoryHierarchy'): CanModifyRepositoryHierarchyReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepositories'): RemoveChildRepositoriesReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepository'): RemoveChildRepositoryReply.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveRootRepository'): RemoveRootRepositoryReply.SerializeToString,
    }
    method_implementations = {
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddChildRepository'): face_utilities.unary_unary_inline(servicer.AddChildRepository),
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddRootRepository'): face_utilities.unary_unary_inline(servicer.AddRootRepository),
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'CanModifyRepositoryHierarchy'): face_utilities.unary_unary_inline(servicer.CanModifyRepositoryHierarchy),
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchy'): face_utilities.unary_unary_inline(servicer.GetRepositoryHierarchy),
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchyId'): face_utilities.unary_unary_inline(servicer.GetRepositoryHierarchyId),
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepositories'): face_utilities.unary_unary_inline(servicer.RemoveChildRepositories),
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepository'): face_utilities.unary_unary_inline(servicer.RemoveChildRepository),
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveRootRepository'): face_utilities.unary_unary_inline(servicer.RemoveRootRepository),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_RepositoryHierarchyDesignSession_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddChildRepository'): AddChildRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddRootRepository'): AddRootRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'CanModifyRepositoryHierarchy'): CanModifyRepositoryHierarchyRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepositories'): RemoveChildRepositoriesRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepository'): RemoveChildRepositoryRequest.SerializeToString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveRootRepository'): RemoveRootRepositoryRequest.SerializeToString,
    }
    response_deserializers = {
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddChildRepository'): AddChildRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'AddRootRepository'): AddRootRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'CanModifyRepositoryHierarchy'): CanModifyRepositoryHierarchyReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchy'): GetRepositoryHierarchyReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'GetRepositoryHierarchyId'): GetRepositoryHierarchyIdReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepositories'): RemoveChildRepositoriesReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveChildRepository'): RemoveChildRepositoryReply.FromString,
      ('dlkit.proto.repository.RepositoryHierarchyDesignSession', 'RemoveRootRepository'): RemoveRootRepositoryReply.FromString,
    }
    cardinalities = {
      'AddChildRepository': cardinality.Cardinality.UNARY_UNARY,
      'AddRootRepository': cardinality.Cardinality.UNARY_UNARY,
      'CanModifyRepositoryHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryHierarchy': cardinality.Cardinality.UNARY_UNARY,
      'GetRepositoryHierarchyId': cardinality.Cardinality.UNARY_UNARY,
      'RemoveChildRepositories': cardinality.Cardinality.UNARY_UNARY,
      'RemoveChildRepository': cardinality.Cardinality.UNARY_UNARY,
      'RemoveRootRepository': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'dlkit.proto.repository.RepositoryHierarchyDesignSession', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
