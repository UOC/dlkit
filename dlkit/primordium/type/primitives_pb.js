/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dlkit.primordium.type.primitives.DisplayText', null, global);
goog.exportSymbol('proto.dlkit.primordium.type.primitives.Type', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dlkit.primordium.type.primitives.Type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dlkit.primordium.type.primitives.Type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dlkit.primordium.type.primitives.Type.displayName = 'proto.dlkit.primordium.type.primitives.Type';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.toObject = function(opt_includeInstance) {
  return proto.dlkit.primordium.type.primitives.Type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dlkit.primordium.type.primitives.Type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlkit.primordium.type.primitives.Type.toObject = function(includeInstance, msg) {
  var f, obj = {
    authority: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: (f = msg.getDescription()) && proto.dlkit.primordium.type.primitives.DisplayText.toObject(includeInstance, f),
    displayLabel: (f = msg.getDisplayLabel()) && proto.dlkit.primordium.type.primitives.DisplayText.toObject(includeInstance, f),
    displayName: (f = msg.getDisplayName()) && proto.dlkit.primordium.type.primitives.DisplayText.toObject(includeInstance, f),
    domain: jspb.Message.getFieldWithDefault(msg, 5, ""),
    identifier: jspb.Message.getFieldWithDefault(msg, 6, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dlkit.primordium.type.primitives.Type}
 */
proto.dlkit.primordium.type.primitives.Type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dlkit.primordium.type.primitives.Type;
  return proto.dlkit.primordium.type.primitives.Type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dlkit.primordium.type.primitives.Type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dlkit.primordium.type.primitives.Type}
 */
proto.dlkit.primordium.type.primitives.Type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    case 2:
      var value = new proto.dlkit.primordium.type.primitives.DisplayText;
      reader.readMessage(value,proto.dlkit.primordium.type.primitives.DisplayText.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.dlkit.primordium.type.primitives.DisplayText;
      reader.readMessage(value,proto.dlkit.primordium.type.primitives.DisplayText.deserializeBinaryFromReader);
      msg.setDisplayLabel(value);
      break;
    case 4:
      var value = new proto.dlkit.primordium.type.primitives.DisplayText;
      reader.readMessage(value,proto.dlkit.primordium.type.primitives.DisplayText.deserializeBinaryFromReader);
      msg.setDisplayName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dlkit.primordium.type.primitives.Type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dlkit.primordium.type.primitives.Type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlkit.primordium.type.primitives.Type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.dlkit.primordium.type.primitives.DisplayText.serializeBinaryToWriter
    );
  }
  f = message.getDisplayLabel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dlkit.primordium.type.primitives.DisplayText.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.dlkit.primordium.type.primitives.DisplayText.serializeBinaryToWriter
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string authority = 1;
 * @return {string}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.dlkit.primordium.type.primitives.Type.prototype.setAuthority = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DisplayText description = 2;
 * @return {?proto.dlkit.primordium.type.primitives.DisplayText}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.getDescription = function() {
  return /** @type{?proto.dlkit.primordium.type.primitives.DisplayText} */ (
    jspb.Message.getWrapperField(this, proto.dlkit.primordium.type.primitives.DisplayText, 2));
};


/** @param {?proto.dlkit.primordium.type.primitives.DisplayText|undefined} value */
proto.dlkit.primordium.type.primitives.Type.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dlkit.primordium.type.primitives.Type.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DisplayText display_label = 3;
 * @return {?proto.dlkit.primordium.type.primitives.DisplayText}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.getDisplayLabel = function() {
  return /** @type{?proto.dlkit.primordium.type.primitives.DisplayText} */ (
    jspb.Message.getWrapperField(this, proto.dlkit.primordium.type.primitives.DisplayText, 3));
};


/** @param {?proto.dlkit.primordium.type.primitives.DisplayText|undefined} value */
proto.dlkit.primordium.type.primitives.Type.prototype.setDisplayLabel = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dlkit.primordium.type.primitives.Type.prototype.clearDisplayLabel = function() {
  this.setDisplayLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.hasDisplayLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DisplayText display_name = 4;
 * @return {?proto.dlkit.primordium.type.primitives.DisplayText}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.getDisplayName = function() {
  return /** @type{?proto.dlkit.primordium.type.primitives.DisplayText} */ (
    jspb.Message.getWrapperField(this, proto.dlkit.primordium.type.primitives.DisplayText, 4));
};


/** @param {?proto.dlkit.primordium.type.primitives.DisplayText|undefined} value */
proto.dlkit.primordium.type.primitives.Type.prototype.setDisplayName = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dlkit.primordium.type.primitives.Type.prototype.clearDisplayName = function() {
  this.setDisplayName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.hasDisplayName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string domain = 5;
 * @return {string}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.dlkit.primordium.type.primitives.Type.prototype.setDomain = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string identifier = 6;
 * @return {string}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.dlkit.primordium.type.primitives.Type.prototype.setIdentifier = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string namespace = 7;
 * @return {string}
 */
proto.dlkit.primordium.type.primitives.Type.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.dlkit.primordium.type.primitives.Type.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dlkit.primordium.type.primitives.DisplayText = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dlkit.primordium.type.primitives.DisplayText, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dlkit.primordium.type.primitives.DisplayText.displayName = 'proto.dlkit.primordium.type.primitives.DisplayText';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.toObject = function(opt_includeInstance) {
  return proto.dlkit.primordium.type.primitives.DisplayText.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dlkit.primordium.type.primitives.DisplayText} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlkit.primordium.type.primitives.DisplayText.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    formatTypeId: (f = msg.getFormatTypeId()) && proto.dlkit.primordium.type.primitives.Type.toObject(includeInstance, f),
    languageTypeId: (f = msg.getLanguageTypeId()) && proto.dlkit.primordium.type.primitives.Type.toObject(includeInstance, f),
    scriptTypeId: (f = msg.getScriptTypeId()) && proto.dlkit.primordium.type.primitives.Type.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dlkit.primordium.type.primitives.DisplayText}
 */
proto.dlkit.primordium.type.primitives.DisplayText.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dlkit.primordium.type.primitives.DisplayText;
  return proto.dlkit.primordium.type.primitives.DisplayText.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dlkit.primordium.type.primitives.DisplayText} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dlkit.primordium.type.primitives.DisplayText}
 */
proto.dlkit.primordium.type.primitives.DisplayText.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = new proto.dlkit.primordium.type.primitives.Type;
      reader.readMessage(value,proto.dlkit.primordium.type.primitives.Type.deserializeBinaryFromReader);
      msg.setFormatTypeId(value);
      break;
    case 3:
      var value = new proto.dlkit.primordium.type.primitives.Type;
      reader.readMessage(value,proto.dlkit.primordium.type.primitives.Type.deserializeBinaryFromReader);
      msg.setLanguageTypeId(value);
      break;
    case 4:
      var value = new proto.dlkit.primordium.type.primitives.Type;
      reader.readMessage(value,proto.dlkit.primordium.type.primitives.Type.deserializeBinaryFromReader);
      msg.setScriptTypeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dlkit.primordium.type.primitives.DisplayText.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dlkit.primordium.type.primitives.DisplayText} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dlkit.primordium.type.primitives.DisplayText.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFormatTypeId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.dlkit.primordium.type.primitives.Type.serializeBinaryToWriter
    );
  }
  f = message.getLanguageTypeId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dlkit.primordium.type.primitives.Type.serializeBinaryToWriter
    );
  }
  f = message.getScriptTypeId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.dlkit.primordium.type.primitives.Type.serializeBinaryToWriter
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Type format_type_id = 2;
 * @return {?proto.dlkit.primordium.type.primitives.Type}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.getFormatTypeId = function() {
  return /** @type{?proto.dlkit.primordium.type.primitives.Type} */ (
    jspb.Message.getWrapperField(this, proto.dlkit.primordium.type.primitives.Type, 2));
};


/** @param {?proto.dlkit.primordium.type.primitives.Type|undefined} value */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.setFormatTypeId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dlkit.primordium.type.primitives.DisplayText.prototype.clearFormatTypeId = function() {
  this.setFormatTypeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.hasFormatTypeId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Type language_type_id = 3;
 * @return {?proto.dlkit.primordium.type.primitives.Type}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.getLanguageTypeId = function() {
  return /** @type{?proto.dlkit.primordium.type.primitives.Type} */ (
    jspb.Message.getWrapperField(this, proto.dlkit.primordium.type.primitives.Type, 3));
};


/** @param {?proto.dlkit.primordium.type.primitives.Type|undefined} value */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.setLanguageTypeId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dlkit.primordium.type.primitives.DisplayText.prototype.clearLanguageTypeId = function() {
  this.setLanguageTypeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.hasLanguageTypeId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Type script_type_id = 4;
 * @return {?proto.dlkit.primordium.type.primitives.Type}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.getScriptTypeId = function() {
  return /** @type{?proto.dlkit.primordium.type.primitives.Type} */ (
    jspb.Message.getWrapperField(this, proto.dlkit.primordium.type.primitives.Type, 4));
};


/** @param {?proto.dlkit.primordium.type.primitives.Type|undefined} value */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.setScriptTypeId = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dlkit.primordium.type.primitives.DisplayText.prototype.clearScriptTypeId = function() {
  this.setScriptTypeId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dlkit.primordium.type.primitives.DisplayText.prototype.hasScriptTypeId = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.dlkit.primordium.type.primitives);
